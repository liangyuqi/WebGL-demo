{"version":3,"sources":["webpack://rainbow/./examples-webgl/vue/module/app/components/mesh/mesh.scss?1f2d","webpack://rainbow/./examples-webgl/vue/module/app/components/mesh/mesh.ts","webpack://rainbow/./examples-webgl/vue/module/app/components/mesh/mesh.vue","webpack://rainbow/./examples-webgl/vue/module/app/components/mesh/mesh.vue?54c1","webpack://rainbow/./examples-webgl/vue/module/app/components/mesh/mesh.vue?50bd","webpack://rainbow/./lib/gl-matrix.js","webpack://rainbow/./examples-webgl/vue/module/app/components/mesh/mesh.scss","webpack://rainbow/./node_modules/rbush/rbush.min.js","webpack://rainbow/./examples-webgl/vue/module/app/components/mesh/mesh.scss?7496","webpack://rainbow/./node_modules/tiny-sdf/index.js","webpack://rainbow/./examples-webgl/vue/module/app/components/mesh/mesh.vue?e631","webpack://rainbow/./examples-webgl/vue/module/app/components/mesh/mesh.vue?7696","webpack://rainbow/./src/events/index.ts","webpack://rainbow/./src/graph/mesh.ts","webpack://rainbow/./src/rainbow/index.ts","webpack://rainbow/./src/rainbow/program.ts","webpack://rainbow/./src/rainbow/shader.ts","webpack://rainbow/./src/rainbow/source/fsSource.ts","webpack://rainbow/./src/rainbow/source/vsSource.ts","webpack://rainbow/./src/render/generator.ts","webpack://rainbow/./src/render/packer.ts","webpack://rainbow/./src/render/render-object.ts","webpack://rainbow/./src/render/render-unit.ts","webpack://rainbow/./src/render/texture.ts","webpack://rainbow/./src/search/searchable-object.ts","webpack://rainbow/./src/search/searcher.ts","webpack://rainbow/./src/utils/index.ts","webpack://rainbow/./src/viewport/index.ts"],"names":[],"mappings":"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E,2FAAM;AACR,EAAE,oGAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACvCf;AAAA;AAAA,wCAA6L,CAAgB,uOAAG,EAAC,C;;;;;;;;;;;;ACAjN;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,IAAyD;AAC7D;AACA,MAAM,aAKJ;AACF,CAAC;AACD,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0BAA0B,EAAE;AAC/D,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA,8DAA8D,+DAA+D;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAK;AACf,UAAU,KAAK;AACf;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAK;AACf,UAAU,KAAK;AACf;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,oBAAoB,OAAO;AAC3B,oBAAoB,kBAAkB;AACtC;AACA,oBAAoB,kBAAkB;AACtC;;AAEA;AACA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,oBAAoB,OAAO;AAC3B,oBAAoB,kBAAkB,kBAAkB;AACxD;AACA,oBAAoB,kBAAkB,kBAAkB;AACxD;;AAEA;AACA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,UAAU,UAAU;AAChC;AACA;AACA;AACA;;AAEA,YAAY,UAAU,WAAW;AACjC;AACA;AACA;AACA;;AAEA,aAAa,WAAW,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,WAAW,WAAW;AACrC,eAAe,WAAW,WAAW;AACrC,eAAe,WAAW,YAAY;;AAEtC,iBAAiB,aAAa,aAAa;AAC3C,iBAAiB,aAAa,aAAa;AAC3C,iBAAiB,aAAa,cAAc;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,WAAW,WAAW;AACnC,aAAa,WAAW,WAAW;AACnC,aAAa,WAAW,YAAY;;AAEpC;AACA,sBAAsB,wBAAwB;AAC9C,0BAA0B,oBAAoB;AAC9C,0BAA0B,wBAAwB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA,wBAAwB;AACxB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,OAAO;AACP;AACA;;AAEA;;;AAGA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,4EAA4E,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAE3Q;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,oBAAoB,OAAO;AAC3B,oBAAoB;AACpB;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA,CAAC;;AAED,OAAO;AACP;AACA,CAAC,E;;;;;;;;;;;ACvuND,2BAA2B,mBAAO,CAAC,4GAA2D;AAC9F;;;AAGA;AACA,cAAc,QAAS;;AAEvB;;;;;;;;;;;;ACPA,eAAe,KAAoD,oBAAoB,SAAqE,CAAC,iBAAiB,aAAa,sBAAsB,uBAAuB,KAAK,IAAI,EAAE,YAAY,8KAA8K,aAAa,mBAAmB,mCAAmC,IAAI,EAAE,qBAAqB,YAAY,KAAK,KAAK,YAAY,KAAK,+DAA+D,8BAA8B,kBAAkB,WAAW,iBAAiB,gBAAgB,sBAAsB,kBAAkB,2HAA2H,kBAAkB,0BAA0B,YAAY,WAAW,0BAA0B,SAAS,gBAAgB,6BAA6B,sBAAsB,6DAA6D,YAAY,IAAI,KAAK,oBAAoB,mBAAmB,SAAS,gBAAgB,qIAAqI,gBAAgB,qBAAqB,gBAAgB,qBAAqB,cAAc,sCAAsC,cAAc,qCAAqC,gBAAgB,sEAAsE,gBAAgB,sEAAsE,cAAc,OAAO,mEAAmE,sBAAsB,gBAAgB,SAAS,mCAAmC,+BAA+B,8BAA8B,kCAAkC,+BAA+B,gCAAgC,qBAAqB,oBAAoB,2BAA2B,EAAE,EAAE,YAAY,oBAAoB,KAAK,oCAAoC,2DAA2D,UAAU,SAAS,kCAAkC,gBAAgB,oBAAoB,aAAa,EAAE,EAAE,YAAY,oBAAoB,KAAK,8CAA8C,WAAW,2BAA2B,WAAW,UAAU,SAAS,8BAA8B,6BAA6B,8BAA8B,YAAY,WAAW,sBAAsB,YAAY,4CAA4C,yFAAyF,KAAK,8BAA8B,gBAAgB,gBAAgB,+CAA+C,iBAAiB,YAAY,gCAAgC,kDAAkD,8BAA8B,4BAA4B,kCAAkC,kBAAkB,qDAAqD,YAAY,EAAE,yDAAyD,wBAAwB,yEAAyE,qGAAqG,YAAY,gCAAgC,SAAS,uCAAuC,qBAAqB,uCAAuC,qBAAqB,+BAA+B,iBAAiB,kCAAkC,wBAAwB,gCAAgC,aAAa,EAAE,wEAAwE,SAAS,sCAAsC,iCAAiC,oDAAoD,sGAAsG,iDAAiD,4BAA4B,YAAY,KAAK,MAAM,wBAAwB,4BAA4B,YAAY,KAAK,MAAM,wBAAwB,yCAAyC,0BAA0B,8CAA8C,KAAK,kCAAkC,EAAE,iCAAiC,oBAAoB,KAAK,6IAA6I,8CAA8C,mBAAmB,QAAQ,SAAS,qCAAqC,qEAAqE,8BAA8B,4CAA4C,sBAAsB,gCAAgC,kCAAkC,kDAAkD,6BAA6B,kFAAkF,iHAAiH,sCAAsC,0FAA0F,+CAA+C,sCAAsC,OAAO,KAAK,sPAAsP,8CAA8C,cAAc,8CAA8C,4DAA4D,8EAA8E,8CAA8C,mBAAmB,kEAAkE,MAAM,KAAK,oBAAoB,2BAA2B,gBAAgB,KAAK,KAAK,oBAAoB,2BAA2B,SAAS,iDAAiD,YAAY,KAAK,cAAc,mCAAmC,8BAA8B,KAAK,gHAAgH,GAAG;;;;;;;;;;;;;ACC7zM,cAAc,mBAAO,CAAC,gfAA4P;;AAElR,4CAA4C,QAAS;;AAErD;AACA;;;;AAIA,eAAe;;AAEf;AACA;;AAEA,aAAa,mBAAO,CAAC,kHAA+D;;AAEpF;;AAEA,GAAG,KAAU,EAAE,E;;;;;;;;;;;;ACnBF;;AAEb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,2BAA2B;AAC9C,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,2BAA2B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,WAAW;AAC9B,uBAAuB,YAAY;AACnC;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA,eAAe,YAAY;AAC3B,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;;;;;;;;;;;;;ACpGA;AAAA;AAAA,aAAa;AACe;AACb,+GAAG,EAAC;;;;;;;;;;;;;ACRnB;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,SAAS,4CAA4C,EAAE;AAC5D;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACXA;AAAA;AAAA;;GAEG;AACH;IAGE;QAFQ,cAAS,GAAG,EAAE,CAAC,CAAC,OAAO;IAEhB,CAAC;IAEhB;;;;OAIG;IACI,uCAAa,GAApB,UAAqB,IAAY;QAAE,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAC/C,IAAI,GAAG,GAAe,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,GAAG,EAAE;YACP,GAAG,CAAC,OAAO,CAAC,iBAAO;gBACjB,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;gBACnC,mCAAmC;YACrC,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED;;;;;OAKG;IACI,0CAAgB,GAAvB,UACE,IAAY,EACZ,QAAkB,EAClB,UAAe;QAEf,IAAI,GAAG,GAAe,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,GAAG,EAAE;YACR,GAAG,GAAG,EAAE,CAAC;YACT,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;SAC5B;QACD,OAAO;QACP,IAAI;QACJ,6BAA6B;QAC7B,QAAQ;QACR,iEAAiE;QACjE,YAAY;QACZ,sBAAsB;QACtB,YAAY;QACZ,UAAU;QACV,IAAI;QACJ,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;IACnC,CAAC;IAED;;;;;OAKG;IACI,6CAAmB,GAA1B,UACE,IAAY,EACZ,QAAkB,EAClB,UAAe;QAEf,IAAI,GAAG,GAAe,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,GAAG,EAAE;YACP,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC;YACrB,KAAK,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE;oBACtD,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAClB;aACF;SACF;QACD,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YAC3B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;YAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC7B;IACH,CAAC;IACH,sBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EkD;AACnD,IAAM,IAAI,GAAG,sDAAa,CAAC;AAE3B,IAAY,aAGX;AAHD,WAAY,aAAa;IACvB,qEAAkB;IAClB,iEAAgB;AAClB,CAAC,EAHW,aAAa,KAAb,aAAa,QAGxB;AAeD;IAME;;;;;OAKG;IACH,cACE,IAAmB,EACnB,QAAkB,EAClB,YAAsB,EACtB,EAAY,EACZ,OAAiB;QAEjB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,sBAAY,8BAAY;aAAxB;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IAED,sBAAY,8BAAY;aAAxB;YACE,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;YACxB,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC;;;OAAA;IAED,sBAAY,8BAAY;aAAxB;YACE,IAAI,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;YACxB,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC;;;OAAA;IAED,sBAAY,kCAAgB;aAA5B;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;;;OAAA;IAED,sBAAY,kCAAgB;aAA5B;YACE,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;YAC5B,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC;;;OAAA;IAED,sBAAY,kCAAgB;aAA5B;YACE,IAAI,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;YAC5B,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC;;;OAAA;IAED,sBAAW,kCAAgB;aAA3B;YACE,IAAI,gBAAgB,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACxD,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,OAAO;gBACL,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,gBAAgB,EAAE,gBAAgB;gBAClC,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,aAAa,EAAE,IAAI,CAAC,cAAc;aACnC,CAAC;QACJ,CAAC;;;OAAA;IAED,sBAAW,kCAAgB;aAA3B;YACE,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;YACnC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,EACzB,GAAG,GAAG,IAAI,CAAC,YAAY,EACvB,GAAG,GAAG,IAAI,CAAC,YAAY,EACvB,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAC3B,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAC3B,GAAG,GAAG,IAAI,CAAC,gBAAgB,EAC3B,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,EACxB,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;YAExB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAEZ,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACb,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACb,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAE5B,GAAG,IAAI,CAAC,CAAC;YAET,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC5B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBACnB,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;aAC9B;YACD,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;YAErC,OAAO;YACP,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACtB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAEtB,OAAO;gBACL,YAAY,EAAE,GAAG;gBACjB,YAAY,EAAE,GAAG;gBACjB,YAAY,EAAE,GAAG;gBACjB,gBAAgB,EAAE,GAAG;gBACrB,gBAAgB,EAAE,GAAG;gBACrB,gBAAgB,EAAE,GAAG;gBACrB,gBAAgB,EAAE,GAAG;gBACrB,OAAO,EAAE,OAAO;gBAChB,GAAG,EAAE,GAAG;gBACR,aAAa,EAAE,aAAa,CAAC,cAAc;aAC5C,CAAC;QACJ,CAAC;;;OAAA;IACH,WAAC;AAAD,CAAC;;AAED;IAA8B,4BAAI;IAChC,kBAAY,OAAmB,EAAE,OAAmB;QAAxC,qCAAmB;QAAE,qCAAmB;QAApD,iBAeC;QAdC,IAAM,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1C,IAAI,WAAW,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC/D,IAAM,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACpC,IAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAE7B,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC;YACjC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,OAAO,CAAC;aACpB;iBAAM;gBACL,OAAO,CAAC,GAAG,OAAO,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;QAEH,0BAAM,aAAa,CAAC,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,EAAE,EAAE,OAAO,CAAC,SAAC;;IAC1E,CAAC;IACH,eAAC;AAAD,CAAC,CAjB6B,IAAI,GAiBjC;;AAED;IAAqC,mCAAI;IACvC,yBAAY,KAAkB,EAAE,MAAmB;QAAvC,kCAAkB;QAAE,oCAAmB;QAAnD,iBA4BC;QA3BC,IAAM,QAAQ,GAAG;YACf,CAAC,GAAG;YACJ,CAAC;YACD,GAAG;YACH,CAAC;YACD,GAAG;YACH,CAAC;YACD,GAAG;YACH,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC,GAAG;YACJ,CAAC;YACD,CAAC,GAAG;YACJ,CAAC;SACF,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC;YACT,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,KAAK,CAAC;aAClB;iBAAM;gBACL,OAAO,CAAC,GAAG,MAAM,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;QAEH,IAAM,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/D,IAAM,EAAE,GAAG,IAAI,KAAK,CAAS,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACtC,0BAAM,aAAa,CAAC,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,EAAE,EAAE,OAAO,CAAC,SAAC;;IAC1E,CAAC;IACH,sBAAC;AAAD,CAAC,CA9BoC,IAAI,GA8BxC;;AAED;IAAqC,mCAAI;IACvC,yBAAY,KAAkB,EAAE,MAAmB;QAAvC,kCAAkB;QAAE,oCAAmB;QAAnD,iBAuDC;QAtDC,IAAM,QAAQ,GAAG;YACf,CAAC;YACD,CAAC;YACD,GAAG;YACH,CAAC;YACD,GAAG;YACH,CAAC;YACD,GAAG;YACH,CAAC;YACD,GAAG;YACH,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC,GAAG;YACJ,CAAC;YACD,CAAC,GAAG;YACJ,CAAC;YACD,CAAC,GAAG;YACJ,CAAC;YACD,CAAC,GAAG;YACJ,CAAC;SACF,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC;YACT,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBACf,OAAO,CAAC,GAAG,KAAK,CAAC;aAClB;iBAAM;gBACL,OAAO,CAAC,GAAG,MAAM,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;QAEH,IAAM,WAAW,GAAG;YAClB,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;YACD,CAAC;SACF,CAAC;QACF,IAAM,EAAE,GAAG,IAAI,KAAK,CAAS,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/C,0BAAM,aAAa,CAAC,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,EAAE,EAAE,OAAO,CAAC,SAAC;;IAC1E,CAAC;IACH,sBAAC;AAAD,CAAC,CAzDoC,IAAI,GAyDxC;;AAED,yCAAyC;AACzC,mCAAmC;AACnC,wEAAwE;AACxE,kBAAkB;AAClB,oBAAoB;AACpB,YAAY;AACZ,iBAAiB;AACjB,gDAAgD;AAEhD,4CAA4C;AAE5C,6CAA6C;AAC7C,wBAAwB;AAExB,qCAAqC;AACrC,gBAAgB;AAEhB,kBAAkB;AAElB,oCAAoC;AACpC,oDAAoD;AACpD,4DAA4D;AAC5D,mBAAmB;AACnB,+BAA+B;AAC/B,MAAM;AAEN,UAAU;AACV,wBAAwB;AAExB,4EAA4E;AAC5E,KAAK;AACL,IAAI;AAEJ,uEAAuE;AACvE,gCAAgC;AAChC,wBAAwB;AACxB,yCAAyC;AACzC,wBAAwB;AAExB,sCAAsC;AACtC,kBAAkB;AAClB,eAAe;AACf,eAAe;AAEf,iBAAiB;AACjB,qBAAqB;AACrB,mBAAmB;AACnB,+BAA+B;AAC/B,mBAAmB;AACnB,eAAe;AACf,aAAa;AACb,mBAAmB;AACnB,mBAAmB;AACnB,MAAM;AAEN,oDAAoD;AACpD,iDAAiD;AACjD,iDAAiD;AAEjD,sCAAsC;AACtC,iCAAiC;AACjC,KAAK;AACL,sBAAsB;AACtB,IAAI;AACJ,+CAA+C;AAC/C,gDAAgD;AAChD,6CAA6C;AAE7C,2BAA2B;AAC3B,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AAExB,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAC5B,4BAA4B;AAE5B,2BAA2B;AAC3B,wBAAwB;AACxB,wCAAwC;AACxC,wBAAwB;AACxB,wBAAwB;AACxB,wCAAwC;AAExC,8BAA8B;AAE9B,2EAA2E;AAC3E,sCAAsC;AACtC,IAAI;AAEJ,cAAc;AACd,wDAAwD;AACxD,0BAA0B;AAC1B,wBAAwB;AACxB,gDAAgD;AAEhD,wBAAwB;AACxB,kBAAkB;AAClB,aAAa;AACb,KAAK;AAEL,cAAc;AACd,mBAAmB;AAEnB,wBAAwB;AACxB,qBAAqB;AAErB,8BAA8B;AAC9B,WAAW;AACX,KAAK;AACL,8BAA8B;AAC9B,WAAW;AACX,KAAK;AACL,iCAAiC;AACjC,IAAI;AAEJ,0BAA0B;AAC1B,uBAAuB;AACvB,iCAAiC;AACjC,mDAAmD;AACnD,uBAAuB;AACvB,+BAA+B;AAC/B,KAAK;AACL,IAAI;AAEJ,6BAA6B;AAC7B,oCAAoC;AACpC,mBAAmB;AACnB,kCAAkC;AAClC,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,OAAO;AAEP,iBAAiB;AACjB,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,OAAO;AAEP,mBAAmB;AACnB,kCAAkC;AAClC,wBAAwB;AACxB,uBAAuB;AACvB,uBAAuB;AACvB,uBAAuB;AACvB,OAAO;AACP,mEAAmE;AACnE,KAAK;AAEL,qCAAqC;AACrC,mBAAmB;AACnB,mBAAmB;AACnB,kBAAkB;AAClB,kBAAkB;AAClB,mBAAmB;AACnB,mBAAmB;AACnB,kBAAkB;AAClB,kBAAkB;AAClB,OAAO;AAEP,iBAAiB;AACjB,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,WAAW;AACX,OAAO;AAEP,uBAAuB;AAEvB,iEAAiE;AACjE,KAAK;AAEL,oCAAoC;AACpC,mBAAmB;AAEnB,OAAO;AACP,KAAK;AACL,IAAI;AAEJ,mDAAmD;AACnD,8BAA8B;AAC9B,yCAAyC;AACzC,mBAAmB;AAEnB,sCAAsC;AAEtC,kBAAkB;AAClB,eAAe;AACf,eAAe;AAEf,iBAAiB;AACjB,qBAAqB;AACrB,mBAAmB;AACnB,+BAA+B;AAC/B,mBAAmB;AACnB,eAAe;AACf,aAAa;AACb,mBAAmB;AACnB,mBAAmB;AACnB,MAAM;AAEN,8DAA8D;AAC9D,2DAA2D;AAC3D,2DAA2D;AAE3D,oDAAoD;AACpD,oFAAoF;AACpF,qBAAqB;AACrB,gFAAgF;AAChF,qBAAqB;AACrB,KAAK;AACL,QAAQ;AACR,gDAAgD;AAEhD,iBAAiB;AACjB,IAAI;AAEJ,gBAAgB;AAChB,8CAA8C;AAC9C,qDAAqD;AACrD,kDAAkD;AAElD,2BAA2B;AAC3B,wBAAwB;AACxB,wBAAwB;AACxB,wBAAwB;AAExB,yBAAyB;AACzB,sBAAsB;AACtB,oCAAoC;AACpC,sBAAsB;AACtB,sBAAsB;AACtB,oCAAoC;AAEpC,8BAA8B;AAE9B,sEAAsE;AACtE,6BAA6B;AAC7B,IAAI;AAEJ,cAAc;AACd,yCAAyC;AACzC,4BAA4B;AAC5B,uCAAuC;AAEvC,wBAAwB;AACxB,iBAAiB;AACjB,aAAa;AACb,KAAK;AAEL,cAAc;AACd,mBAAmB;AAEnB,wBAAwB;AACxB,qBAAqB;AAErB,8BAA8B;AAC9B,WAAW;AACX,KAAK;AACL,8BAA8B;AAC9B,WAAW;AACX,KAAK;AACL,4BAA4B;AAC5B,IAAI;;;;;;;;;;;;;AC1gBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAEX;AACM;AACA;AACP;AACI;AAGI;AACK;AAEjD,uDAAiB,CAAC,kBAAkB,CAAC,YAAY,CAAC,CAAC;AAEnD;IAeE,iBAAY,MAAyB;QAJ7B,eAAU,GAAG,CAAC,CAAC;QAChB,YAAO,GAAY,IAAI,CAAC;QACxB,eAAU,GAAY,IAAI,CAAC;QAGhC,sFAAsF;QACtF,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE;YACrC,KAAK,EAAE,KAAK;YACZ,gBAAgB,EAAE,KAAK;YACvB,SAAS,EAAE,IAAI;SAChB,CAA2B,CAAC;QAC7B,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,MAAM,KAAK,CAAC,8GAAyB,CAAC,CAAC;SACxC;QACD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,yDAAQ,EAAE,CAAC;QAChC,IAAI,CAAC,GAAG,GAAG,IAAI,8DAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACxC,IAAI,CAAC,GAAG,GAAG,IAAI,kDAAQ,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;IACxC,CAAC;IAED,sBAAW,uBAAE;aAAb;YACE,OAAO,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;;;OAAA;IACD,sBAAW,wBAAG;aAAd;YACE,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;;;OAAA;IACD,sBAAW,6BAAQ;aAAnB;YACE,OAAO,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;;;OAAA;IACD,sBAAW,mCAAc;aAAzB;YACE,OAAO,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;;;OAAA;IACD,sBAAW,6BAAQ;aAAnB;YACE,OAAO,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;;;OAAA;IAED,sBAAW,8BAAS;aAKpB;YACE,OAAO,IAAI,CAAC,UAAU,CAAC;QACzB,CAAC;aAPD,UAAqB,KAAa;YAChC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,IAAI,CAAC;QACpC,CAAC;;;OAAA;IAKD;;OAEG;IACK,uBAAK,GAAb;QACE,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QAClB,IAAM,QAAQ,GAAG,0DAAU,CAAC,EAAE,EAAE,EAAE,CAAC,aAAa,EAAE,yDAAQ,CAAC,CAAC;QAC5D,IAAM,QAAQ,GAAG,0DAAU,CAAC,EAAE,EAAE,EAAE,CAAC,eAAe,EAAE,yDAAQ,CAAC,CAAC;QAE9D,IAAI,CAAC,IAAI,GAAG,8DAAa,CAAC,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAiB,CAAC;QAElE,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,UAAU;QACV,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QACpB,EAAE,CAAC,iBAAiB,CAClB,EAAE,CAAC,SAAS,EACZ,EAAE,CAAC,mBAAmB,EACtB,EAAE,CAAC,GAAG,EACN,EAAE,CAAC,mBAAmB,CACvB,CAAC;QACF,4BAA4B;QAE5B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;QACxE,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC,kBAAkB,CAC9C,IAAI,CAAC,IAAI,EACT,sBAAsB,CACvB,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC,kBAAkB,CAC3C,IAAI,CAAC,IAAI,EACT,mBAAmB,CACpB,CAAC;QACF,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;IACvE,CAAC;IAED;;;OAGG;IACI,wBAAM,GAAb;QAAA,iBAIC;QAHC,IAAI,CAAC,IAAI,CAAC,UAAU;YAAE,OAAO;QAC7B,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,MAAM,CAAC,qBAAqB,CAAC,cAAM,YAAI,CAAC,MAAM,EAAE,EAAb,CAAa,CAAC,CAAC;IACpD,CAAC;IAEO,iCAAe,GAAvB;QAAA,iBAyBC;QAxBC,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,IAAI,MAAM,GAAG,KAAK,CAAC;QACnB,IAAI,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE;YAC9B,EAAE,CAAC,UAAU,CACX,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,GAAG,KAAI,CAAC,UAAU,EAAnB,CAAmB,CAAC,CACnD,CAAC;YACF,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,KAAK,CAAC;YACnC,MAAM,GAAG,IAAI,CAAC;SACf;QAED,IAAI,IAAI,CAAC,GAAG,CAAC,uBAAuB,EAAE;YACpC,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YACpE,IAAI,CAAC,GAAG,CAAC,uBAAuB,GAAG,KAAK,CAAC;YACzC,MAAM,GAAG,IAAI,CAAC;SACf;QAED,IAAI,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE;YACjC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACzD,IAAI,CAAC,GAAG,CAAC,oBAAoB,GAAG,KAAK,CAAC;YACtC,MAAM,GAAG,IAAI,CAAC;SACf;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,WAAW;IACH,sCAAoB,GAA5B;QACE,IAAI,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE;YAC5B,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;YACnB,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,CAAC,GAAG,CAAC,eAAe,GAAG,KAAK,CAAC;YACjC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;;;OAIG;IACI,sBAAI,GAAX,UAAY,SAAwB,EAAE,OAAwB;QAAlD,0CAAwB;QAAE,yCAAwB;QAC5D,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,IAAM,EAAE,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAClC,IAAM,EAAE,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QACvC,IAAI,EAAE,GAAG,KAAK,CAAC;QAEf,IAAI,EAAE,GAA2B,EAAE,CAAC;QACpC,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YACrC,EAAE,GAAG,SAAS,CAAC,GAAG,CAAC,WAAC,IAAI,eAAQ,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC;SACtC;aAAM;YACL,EAAE,GAAG,QAAQ,CAAC;SACf;QAED,EAAE,CAAC,OAAO,CAAC,eAAK;YACd,KAAK,CAAC,OAAO,CAAC,cAAI;gBAChB,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;oBACrB,EAAE,GAAG,IAAI,CAAC;iBACX;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,OAAO,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;YAC7B,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,GAAG,EAAE,CAAC,gBAAgB,CAAC,CAAC;YACpD,EAAE,CAAC,OAAO,CAAC,eAAK;gBACd,KAAK;qBACF,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,OAAO,oBAA0B,EAAnC,CAAmC,CAAC;qBAChD,OAAO,CAAC,WAAC;oBACR,CAAC,CAAC,aAAa,EAAE,CAAC;oBAClB,CAAC,CAAC,IAAI,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAEM,2BAAS,GAAhB,UAAiB,IAAwB,EAAE,KAAiB;QAAjB,iCAAiB;QAC1D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;YAC1B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;SAC5B;QACD,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,6BAAW,GAAlB,UAAmB,IAAwB,EAAE,KAAiB;QAAjB,iCAAiB;QAC5D,IAAI,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM;YAAE,OAAO;QAC3C,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,GAAG,GAAG,CAAC;YAAE,OAAO;QACpB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACvC,CAAC;IACH,cAAC;AAAD,CAAC;;;;;;;;;;;;;;AC9MD;AAAA;AAAA;;;;;;GAMG;AAEI,SAAS,aAAa,CAAC,EAAE,EAAE,YAAY,EAAE,cAAc;IAC5D,SAAS;IAET,IAAI,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;IACjC,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,IAAI,CAAC;KACb;IAED,qBAAqB;IACrB,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;IACvC,EAAE,CAAC,YAAY,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IAEzC,QAAQ;IACR,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAExB,OAAO;IACP,IAAI,MAAM,GAAG,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;IAC7D,IAAI,CAAC,MAAM,EAAE;QACX,IAAI,KAAK,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAC1C,OAAO,CAAC,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC;QACpC,EAAE,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC1B,EAAE,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;QAChC,EAAE,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAC9B,OAAO,IAAI,CAAC;KACb;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;;;;;;;;;;;;;AClCD;AAAA;AAAA;;;;;;;GAOG;AACI,SAAS,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,MAAM;IACzC,UAAU;IACV,IAAI,MAAM,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACnC,IAAI,MAAM,IAAI,IAAI,EAAE;QAClB,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACzB,OAAO,IAAI,CAAC;KACb;IAED,WAAW;IACX,EAAE,CAAC,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAEhC,QAAQ;IACR,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAEzB,aAAa;IACb,IAAI,QAAQ,GAAG,EAAE,CAAC,kBAAkB,CAAC,MAAM,EAAE,EAAE,CAAC,cAAc,CAAC,CAAC;IAChE,IAAI,CAAC,QAAQ,EAAE;QACb,IAAI,KAAK,GAAG,EAAE,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,CAAC,KAAK,CAAC,4BAA4B,GAAG,KAAK,CAAC,CAAC;QACpD,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC;KACb;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;;;;;;;;;;;;;AChCD;AAAA;AAAO,IAAM,QAAQ,GAAG,omFAgFvB,CAAC;;;;;;;;;;;;;AChFF;AAAA;AAAO,IAAM,QAAQ,GAAG,myNAwJvB,CAAC;;;;;;;;;;;;;ACtJF;AAAA;AAAA;AAAA;AAA0D;AAEb;AAG7C;IAME,mBACE,OAAgB,EAChB,IAAU,EACV,WAAuB,EACvB,WAAuB,EACvB,gBAA4B;QAF5B,6CAAuB;QACvB,6CAAuB;QACvB,uDAA4B;QAE5B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,IAAI,uDAAU,CAC9B,OAAO,EACP,IAAI,CAAC,gBAAgB,EACrB,gBAAgB,CACjB,CAAC,MAAM,EAAE,CAAC;QACX,IAAI,CAAC,UAAU,GAAG,IAAI,uDAAU,CAC9B,OAAO,EACP,IAAI,CAAC,gBAAgB,EACrB,gBAAgB,CACjB,CAAC,MAAM,EAAE,CAAC;QACX,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACxD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1D,CAAC;IACM,4BAAQ,GAAf;QACE,OAAO,IAAI,2DAAY,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5D,CAAC;IACM,2BAAO,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1D,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1B,OAAO;QACP,0BAA0B;QAC1B,0BAA0B;IAC5B,CAAC;IACM,yBAAK,GAAZ;QACE,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAC1B,CAAC;IAED,sBAAW,8BAAO;aAAlB,UAAmB,CAAS;YAC1B,iGAAiG;YACjG,iGAAiG;YACjG,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAW,8BAAO;aAAlB,UAAmB,CAAgB;YACjC,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAW,gCAAS;aAApB,UAAqB,MAAgB;YACnC,IAAI,CAAC,UAAU,CAAC,QAAQ,0DAEtB,MAAM,EACN,CAAC,CACF,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,QAAQ,0DAEtB,MAAM,EACN,CAAC,CACF,CAAC;QACJ,CAAC;;;OAAA;IAED,sBAAW,8BAAO;aAAlB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;;;OAAA;IACH,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACjFD;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkCG;AAcH;IAIE,uBAAY,QAAoB,EAAE,SAAqB;QAA3C,uCAAoB;QAAE,yCAAqB;QACrD,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC;QACnB,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;IACtB,CAAC;IACM,2BAAG,GAAV,UAAW,MAAe;QACxB,IAAI,CAAC,CAAC;QACN,IAAI,IAAI,CAAC;QACT,IAAI,KAAK,CAAC;QACV,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC;QACxB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,GAAG,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;QACrC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YACxB,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,IAAI,KAAK,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE;gBACvD,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;aACpD;;gBAAM,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;SACpD;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,gCAAQ,GAAhB,UAAiB,IAAW,EAAE,CAAS,EAAE,CAAS;QAChD,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,aAAa;YACb,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1E;aAAM,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE;YACrC,OAAO,IAAI,CAAC;SACb;aAAM;YACL,aAAa;YACb,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAEO,iCAAS,GAAjB,UAAkB,IAAW,EAAE,CAAS,EAAE,CAAS;QACjD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,IAAI,GAAG;YACV,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,aAAa;YACb,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;YACb,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;SACd,CAAC;QACF,IAAI,CAAC,KAAK,GAAG;YACX,aAAa;YACb,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;YACb,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;YACb,CAAC,EAAE,CAAC;SACL,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,gCAAQ,GAAhB,UAAiB,CAAS,EAAE,CAAS;QACnC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE;YAC1D,OAAO,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;YACpC,aAAa;YACb,OAAO;SACR;QAED,IAAI,WAAW,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACnC,IAAI,YAAY,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEpC,IAAI,eAAe,GAAG,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,qFAAqF;QAC3J,IAAI,cAAc,GAAG,WAAW,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,sFAAsF;QAE1J,IAAI,eAAe;YAAE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC5C,IAAI,cAAc;YAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC/C,IAAI,YAAY;YAAE,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC9C,IAAI,WAAW;YAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjD,aAAa;;YACR,OAAO,IAAI,CAAC,CAAC,qEAAqE;IACzF,CAAC;IAEO,iCAAS,GAAjB,UAAkB,CAAS,EAAE,CAAS;QACpC,IAAI,CAAC,IAAI,GAAG;YACV,IAAI,EAAE,IAAI;YACV,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;YAClB,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACd,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,EAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC;SACpD,CAAC;QACF,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1C,IAAI,IAAI;YAAE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,aAAa;;YACR,OAAO,IAAI,CAAC;IACnB,CAAC;IAEO,gCAAQ,GAAhB,UAAiB,CAAS,EAAE,CAAS;QACnC,IAAI,CAAC,IAAI,GAAG;YACV,IAAI,EAAE,IAAI;YACV,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACd,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;YAClB,IAAI,EAAE,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC;YAClD,KAAK,EAAE,IAAI,CAAC,IAAI;SACjB,CAAC;QACF,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC1C,IAAI,IAAI;YAAE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,aAAa;;YACR,OAAO,IAAI,CAAC;IACnB,CAAC;IACH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1JkC;AAE0B;AACH;AAE1D,IAAM,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAStC;IAAkC,gCAAgB;IAuDhD,sBAAY,UAAsB,EAAE,UAAsB;QAA1D,YACE,kBAAM,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,SAInC;QAlDO,gBAAU,GAAY,KAAK,CAAC;QAE5B,cAAQ,GAAG;YACjB,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACnB,QAAQ,EAAE,CAAC;YACX,KAAK,EAAE,CAAC;YACR,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC7B,EAAE,EAAE,IAAI;YACR,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACzB,MAAM,EAAE,KAAK;YACb,eAAe,EAAE,CAAC;YAClB,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAC7B,WAAW,EAAE,CAAC;YACd,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACzB,YAAY,EAAE,CAAC;YACf,OAAO,EAAE,CAAC;YACV,OAAO,iBAAuB;YAC9B,iBAAiB,cAAwB;YACzC,mBAAmB,EAAE,IAAI;YACzB,yBAAyB,EAAE,IAAI;SAChC,CAAC;QAEM,iBAAW,GAAG;YACpB,mBAAmB;YACnB,aAAa;YACb,UAAU;YACV,OAAO;YACP,iBAAiB;YACjB,IAAI;YAEJ,aAAa;YACb,aAAa;YACb,cAAc;YAEd,QAAQ;YACR,iBAAiB;YACjB,iBAAiB;YAEjB,SAAS;YACT,SAAS;YACT,mBAAmB;YACnB,qBAAqB;YACrB,2BAA2B;SAC5B,CAAC;QAIA,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,KAAI,CAAC,GAAG,GAAG,gDAAS,CAAC,QAAQ,EAAE,CAAC;;IAClC,CAAC;IAED,sBAAW,4BAAE;aAAb;YACE,OAAO,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;;;OAAA;IAED,sBAAW,iCAAO;aAAlB;YACE,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;QAClC,CAAC;;;OAAA;IAED,sBAAW,iCAAO;aAAlB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;;;OAAA;IAEM,2BAAI,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;YACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;YACrB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;SAC5C;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,2BAAI,GAAX;QACE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzD,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,aAAa;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,aAAa;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,sBAAW,qCAAW;aAqBtB;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAClC,IAAI,CAAC,SAAS,2DAEd,CAAC,EACD,CAAC,CACF,CAAC;aACH;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACtC,CAAC;aA/BD,UAAuB,MAAgB;YACrC,+EAA+E;YAC/E,+DAA+D;YAC/D,IAAI,CAAC,QAAQ;gBACX,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,2DAEd,MAAM,EACN,CAAC,CACF,CAAC;YACJ,IAAI,CAAC,cAAc;gBACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,2DAEd,MAAM,EACN,CAAC,CACF,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,MAAM,CAAC;YACtC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC7C,CAAC;;;OAAA;IAcD,sBAAW,kCAAQ;aAqBnB;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAClC,IAAI,CAAC,SAAS,2DAEd,CAAC,EACD,CAAC,CACF,CAAC,CAAC,CAAC,CAAC;aACN;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACnC,CAAC;aA/BD,UAAoB,MAAc;YAChC,sCAAsC;YACtC,IAAM,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ;gBACX,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,2DAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACJ,IAAI,CAAC,cAAc;gBACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,2DAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC;YACnC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC7C,CAAC;;;OAAA;IAcD,sBAAW,+BAAK;aAqBhB;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAClC,IAAI,CAAC,SAAS,+FAEd,CAAC,EACD,CAAC,CACF,CAAC,CAAC,CAAC,CAAC;aACN;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAChC,CAAC;aA/BD,UAAiB,CAAS;YACxB,8BAA8B;YAC9B,IAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,QAAQ;gBACX,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,+FAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACJ,IAAI,CAAC,cAAc;gBACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,+FAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC7C,CAAC;;;OAAA;IAcD,sBAAW,yCAAe;aAY1B;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,WAAW;qBACpB,YAAY,CAAC,IAAI,CAAC,SAAS,4CAAoC,CAAC,EAAE,CAAC,CAAC;qBACpE,GAAG,CAAC,WAAC,IAAI,QAAC,GAAG,GAAG,EAAP,CAAO,CAAC,CAAC;aACtB;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAC1C,CAAC;aAnBD,UAA2B,KAAe;YACxC,kEAAkE;YAClE,IAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,GAAG,GAAG,EAAP,CAAO,CAAC,CAAC;YACrC,IAAI,CAAC,QAAQ;gBACX,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,4CAEd,IAAI,CACL,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAG,KAAK,CAAC;QAC3C,CAAC;;;OAAA;IAWD,sBAAW,iCAAO;aAAlB,UAAmB,OAAqB;YACtC,IAAI,OAAO,IAAI,IAAI,EAAE;gBACnB,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,YAAY,qDAAY,EAAE;oBAC1D,IAAI,CAAC,QAAQ,CAAC,mBAAmB,wBAE/B,IAAI,CAAC,QAAQ,EACb,IAAI,CACL,CAAC;oBACF,aAAa;oBACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACtB;gBACD,aAAa;gBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACpB,OAAO;aACR;YAED,IAAI,CAAC,CAAC,OAAO,YAAY,qDAAY,CAAC,EAAE;gBACtC,OAAO;aACR;YAED,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;YACxB,IAAM,EAAE,GAAG,OAAO,CAAC;YAEnB,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,KAAK,EAAE;gBAAE,OAAO;YAEzC,CAAC,YAAY,qDAAY;gBACvB,CAAC,CAAC,mBAAmB,wBAA2B,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAEvE,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,gBAAgB,wBAE5B,IAAI,CAAC,QAAQ,EACb,IAAI,CACL,CAAC;QACJ,CAAC;;;OAAA;IAED,sBAAW,qCAAW;aAuBtB;YACE,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAClC,IAAI,CAAC,SAAS,6GAEd,CAAC,EACD,CAAC,CACF,CAAC,CAAC,CAAC,CAAC;aACN;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACtC,CAAC;aAjCD,UAAuB,KAAa;YAClC,IAAI,IAAI,CAAC,cAAc,IAAI,KAAK,KAAK,IAAI,CAAC,QAAQ,CAAC,WAAW;gBAAE,OAAO;YAEvE,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;YAErC,IAAM,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;YAErB,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6GAEd,IAAI,EACJ,CAAC,CACF,CAAC;iBACH;qBAAM;oBACL,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB;aACF;iBAAM,IAAI,KAAK,GAAG,CAAC,EAAE;gBACpB,IAAI,CAAC,SAAS,EAAE,CAAC;aAClB;QACH,CAAC;;;OAAA;IAcD,sBAAW,qCAAW;aAYtB;YACE,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,OAAO,IAAI,CAAC,WAAW;qBACpB,YAAY,CAAC,IAAI,CAAC,SAAS,4CAAoC,CAAC,EAAE,CAAC,CAAC;qBACpE,GAAG,CAAC,WAAC,IAAI,QAAC,GAAG,GAAG,EAAP,CAAO,CAAC,CAAC;aACtB;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QACtC,CAAC;aAnBD,UAAuB,KAAe;YACpC,8DAA8D;YAC9D,IAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,GAAG,GAAG,EAAP,CAAO,CAAC,CAAC;YACrC,IAAI,CAAC,cAAc;gBACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,4CAEd,IAAI,CACL,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC;QACvC,CAAC;;;OAAA;IAWD,sBAAW,sCAAY;aAYvB;YACE,IAAI,IAAI,CAAC,cAAc,EAAE;gBACvB,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAClC,IAAI,CAAC,SAAS,+FAEd,CAAC,EACD,CAAC,CACF,CAAC,CAAC,CAAC,CAAC;aACN;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;QACpC,CAAC;aAtBD,UAAwB,CAAS;YAC/B,8CAA8C;YAC9C,IAAI,CAAC,cAAc;gBACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,+FAEd,CAAC,CAAC,GAAG,KAAK,CAAC,EACX,CAAC,CACF,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC;QACjC,CAAC;;;OAAA;IAcD,sBAAW,2CAAiB;aAiB5B;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAClC,IAAI,CAAC,SAAS,6GAEd,CAAC,EACD,CAAC,CACF,CAAC;aACH;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QAC5C,CAAC;aA3BD,UAA6B,KAAe;YAC1C,oEAAoE;YACpE,+BAA+B;YAC/B,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6GAEd,KAAK,CACN,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6GAEd,KAAK,CACN,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,GAAG,KAAK,CAAC;YAC3C,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC7C,CAAC;;;OAAA;IAcD,sBAAW,8BAAI;aAIf;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAChC,CAAC;aAND,UAAgB,KAAe;YAC7B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC;;;OAAA;IAMD,sBAAW,gCAAM;aAajB;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,CACL,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,+FAEd,CAAC,EACD,CAAC,CACF,CAAC,CAAC,CAAC,KAAK,CAAC,CACX,CAAC;aACH;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACjC,CAAC;aAzBD,UAAkB,GAAY;YAC5B,6CAA6C;YAC7C,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpB,IAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,+FAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC;QAChC,CAAC;;;OAAA;IAgBD,sBAAW,yCAAe;aAY1B;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAClC,IAAI,CAAC,SAAS,+FAEd,CAAC,EACD,CAAC,CACF,CAAC,CAAC,CAAC,CAAC;aACN;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAC1C,CAAC;aAtBD,UAA2B,CAAS;YAClC,oDAAoD;YACpD,IAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,+FAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;QACvC,CAAC;;;OAAA;IAcD,sBAAW,yCAAe;aAU1B;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAC1C,CAAC;aAZD,UAA2B,KAAe;YACxC,kEAAkE;YAClE,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6CAEd,KAAK,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,GAAG,GAAG,EAAP,CAAO,CAAC,CACxB,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAG,KAAK,CAAC;QAC3C,CAAC;;;OAAA;IAMD,sBAAW,iCAAO;aAoBlB;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAClC,IAAI,CAAC,SAAS,6FAEd,CAAC,EACD,CAAC,CACF,CAAC,CAAC,CAAC,CAAC;aACN;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC;aA9BD,UAAmB,CAAS;YAC1B,iCAAiC;YACjC,6CAA6C;YAC7C,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC1B,IAAM,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;YAClB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6FAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6FAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;QAChC,CAAC;;;OAAA;IAcD,sBAAW,iCAAO;aAkBlB;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAClC,IAAI,CAAC,SAAS,6FAEd,CAAC,CACF,CAAC,CAAC,CAAkB,CAAC;aACvB;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAClC,CAAC;aA3BD,UAAmB,CAAgB;YACjC,4CAA4C;YAC5C,IAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6FAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6FAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC;;;OAAA;IAaD,sBAAW,2CAAiB;aAiB5B;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAClC,IAAI,CAAC,SAAS,6GAEd,CAAC,EACD,CAAC,CACF,CAAC,CAAC,CAAsB,CAAC;aAC3B;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QAC5C,CAAC;aA3BD,UAA6B,MAAyB;YACpD,IAAM,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6GAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6GAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,GAAG,MAAM,CAAC;QAC9C,CAAC;;;OAAA;IAcD,sBAAW,6CAAmB;aAmB9B;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAClC,IAAI,CAAC,SAAS,6FAEd,CAAC,EACD,CAAC,CACF,CAAC,CAAC,CAAC,KAAK,CAAC;oBACR,CAAC,CAAC,IAAI;oBACN,CAAC,CAAC,KAAK,CAAC;aACX;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;QAC9C,CAAC;aA/BD,UAA+B,CAAU;YACvC,wDAAwD;YACxD,IAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpB,IAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6FAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6FAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAC3C,CAAC;;;OAAA;IAgBD,sBAAW,mDAAyB;aAmBpC;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAClC,IAAI,CAAC,SAAS,6FAEd,CAAC,EACD,CAAC,CACF,CAAC,CAAC,CAAC,KAAK,CAAC;oBACR,CAAC,CAAC,IAAI;oBACN,CAAC,CAAC,KAAK,CAAC;aACX;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,2BAA2B,CAAC,CAAC;QACpD,CAAC;aA/BD,UAAqC,CAAU;YAC7C,8DAA8D;YAC9D,IAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpB,IAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6FAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6FAEd,IAAI,EACJ,CAAC,CACF,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,2BAA2B,CAAC,GAAG,CAAC,CAAC;QACjD,CAAC;;;OAAA;IAgBM,yCAAkB,GAAzB,UAA0B,MAAkB;QAAlB,mCAAkB;QAC1C,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;IAC1E,CAAC;IAEO,+BAAQ,GAAhB,UAAiB,OAAqB;QACpC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,YAAY,qDAAY,CAAC,EAAE;YAClD,IAAI,CAAC,QAAQ;gBACX,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,0BAA2B;oBACrE,CAAC;oBACD,CAAC;oBACD,CAAC;oBACD,CAAC;iBACF,CAAC,CAAC;SACN;aAAM;YACL,IAAM,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;YACjE,IAAI,CAAC,QAAQ;gBACX,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,0BAEd,EAAE,CACH,CAAC;YACJ,aAAa;YACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;SAC1B;IACH,CAAC;IAEO,mCAAY,GAApB;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACxB,qCAAqC;QAErC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,2DAEd,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAC1D,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,4CAEd,CAAC,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,GAAG,GAAG,EAAP,CAAO,CAAC,CACvC,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,+FAEd,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CACxC,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6FAEd;gBACE,CAAC,CAAC,SAAS,CAAC;gBACZ,CAAC,CAAC,SAAS,CAAC;gBACZ,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACvC,CACF,CAAC;YACF,0HAA0H;YAC1H,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6GAEd;gBACE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBACzB,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;gBACzB,CAAC,CAAC,aAAa,CAAC;gBAChB,CAAC,CAAC,mBAAmB,CAAC;aACvB,CACF,CAAC;SACH;QAED,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC1B,CAAC;IAEO,gCAAS,GAAjB;QACE,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;YAExC,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,2DAEd,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EACzD,CAAC,CACF,CAAC;YAEF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6GAEd;gBACE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,WAAW;gBAChB,IAAI,CAAC,iBAAiB;aACvB,EACD,CAAC,CACF,CAAC;YAEF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,4CAEd,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,GAAG,GAAG,EAAP,CAAO,CAAC,EAClC,CAAC,CACF,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,+FAEd,CAAC,IAAI,CAAC,YAAY,GAAG,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,EACvC,CAAC,CACF,CAAC;YAEF,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3B,IAAI,CAAC,SAAS,6FAEd;gBACE,IAAI,CAAC,OAAO;gBACZ,IAAI,CAAC,OAAO;gBACZ,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACvC,EACD,CAAC,CACF,CAAC;YAEF,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;IACH,CAAC;IAEO,mCAAY,GAApB;QACE,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACxC,aAAa;YACb,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;SAC7B;IACH,CAAC;IACH,mBAAC;AAAD,CAAC,CAxtBiC,0EAAgB,GAwtBjD;;;;;;;;;;;;;;ACzuBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AAM3B;AAMxB,IAAM,YAAY,GAAG,IAAI,CAAC;AAC1B,IAAM,IAAI,GAAG,sDAAa,CAAC;AAC3B,IAAM,IAAI,GAAG,sDAAa,CAAC;AAUpB,IAAI,qBAAqB,GAAiC,IAAI,GAAG,EAAE,CAAC;AAC3E,qBAAqB,CAAC,GAAG,mDAAwC,CAAC,CAAC,CAAC;AACpE,qBAAqB,CAAC,GAAG,mDAAwC,CAAC,CAAC,CAAC;AACpE,qBAAqB,CAAC,GAAG,mDAAwC,CAAC,CAAC,CAAC;AACpE,qBAAqB,CAAC,GAAG,wDAA2C,CAAC,CAAC,CAAC;AAahE,IAAI,qBAAqB,GAAiC,IAAI,GAAG,EAAE,CAAC;AAC3E,qBAAqB,CAAC,GAAG,4GAEvB,CAAC,CACF,CAAC;AACF,qBAAqB,CAAC,GAAG,2CAAmC,CAAC,CAAC,CAAC;AAC/D,qBAAqB,CAAC,GAAG,yBAA0B,CAAC,CAAC,CAAC;AACtD,qBAAqB,CAAC,GAAG,0DAA2C,CAAC,CAAC,CAAC;AACvE,qBAAqB,CAAC,GAAG,8FAEvB,CAAC,CACF,CAAC;AACF,qBAAqB,CAAC,GAAG,4CAAoC,CAAC,CAAC,CAAC;AAChE,qBAAqB,CAAC,GAAG,4FAEvB,CAAC,CACF,CAAC;AAEK,IAAM,mBAAmB,GAAG;;;;;;;;CAQlC,CAAC;AAMK,IAAM,gBAAgB,GAAG,0BAAuB,CAAC;AAExD;IAqBE,oBACE,OAAgB,EAChB,UAAsB,EACtB,gBAA4B;QAH9B,iBAyCC;QAtCC,uDAA4B;QAlBtB,kBAAa,GAAW,CAAC,CAAC;QAC1B,qBAAgB,GAAW,CAAC,CAAC;QAC7B,wBAAmB,GAAW,CAAC,CAAC;QAEhC,kBAAa,GAAsC,IAAI,GAAG,EAAE,CAAC;QAC7D,sBAAiB,GAAuC,IAAI,GAAG,EAAE,CAAC;QAClE,sBAAiB,GAAkC,IAAI,GAAG,EAAE,CAAC;QAC7D,iBAAY,GAA8B,IAAI,GAAG,EAAE,CAAC;QAEpD,kBAAa,GAA4B,IAAI,GAAG,EAAE,CAAC;QACnD,iBAAY,GAAqC,IAAI,GAAG,EAAE,CAAC;QAE3D,aAAQ,mBAAwC;QAChD,sBAAiB,GAAY,KAAK,CAAC;QAOzC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAE9B,IAAM,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;QACtB,IAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;QACxB,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACzC,IAAI,CAAC,gBAAgB,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC;QACrD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,KAAK;QAEvD,MAAM;QACN,mBAAmB,CAAC,OAAO,CAAC,gBAAM;YAChC,OAAO;YACP,IAAM,IAAI,GAAG,IAAI,YAAY;YAC3B,aAAa;YACb,KAAI,CAAC,gBAAgB,GAAG,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,CAC1D,CAAC;YACF,aAAa;YACb,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC;YAClD,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACzC,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACzC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,iBAAiB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QAEH,gBAAgB,CAAC,OAAO,CAAC,iBAAO;YAC9B,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,kBAAkB,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;YACrE,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC;QAEH,OAAO;QACP,IAAI,CAAC,YAAY,CAAC,GAAG,2BAEnB,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAC/B,CAAC;QAEF,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,EAAkB,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACnB,CAAC;IAEM,2BAAM,GAAb;QACE,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;QAEhC,IAAM,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC;QACnC,IAAM,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC;QACnC,IAAM,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC;QACnC,IAAM,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC;QACvC,IAAM,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC;QACvC,IAAM,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC;QACvC,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAE/B,IAAM,EAAE,GAAa,EAAE,CAAC;QACxB,IAAM,EAAE,GAAa,EAAE,CAAC;QACxB,IAAM,EAAE,GAAa,EAAE,CAAC;QACxB,IAAM,EAAE,GAAa,EAAE,CAAC;QAExB,IAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;QACvB,IAAM,GAAG,GAAG,MAAM,CAAC,gBAAgB,CAAC;QAEpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;YAC7B,EAAE,CAAC,IAAI,CACL,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EACb,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACjB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EACb,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAClB,CAAC;YACF,EAAE,CAAC,IAAI,CACL,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EACb,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACjB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EACb,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAClB,CAAC;YACF,EAAE,CAAC,IAAI,CACL,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EACb,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACjB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EACb,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAClB,CAAC;YACF,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAChD;QAED,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAClC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE7B,IAAI,CAAC,eAAe,mDAElB,IAAI,YAAY,CAAC,EAAE,CAAC,CACrB,CAAC;QACF,IAAI,CAAC,eAAe,mDAElB,IAAI,YAAY,CAAC,EAAE,CAAC,CACrB,CAAC;QACF,IAAI,CAAC,eAAe,mDAElB,IAAI,YAAY,CAAC,EAAE,CAAC,CACrB,CAAC;QACF,IAAI,CAAC,eAAe,wDAElB,IAAI,YAAY,CAAC,EAAE,CAAC,CACrB,CAAC;QAEF,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,CAAC;QAC1D,EAAE,CAAC,UAAU,CACX,EAAE,CAAC,oBAAoB,EACvB,IAAI,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EACzC,EAAE,CAAC,WAAW,CACf,CAAC;QAEF,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACzB,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACrC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QAC7C,OAAO,IAAI,CAAC;IACd,CAAC;IACM,+BAAU,GAAjB;QAAA,iBAoBC;QAnBC,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAI,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACpC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAE7B,mBAAmB,CAAC,OAAO,CAAC,UAAC,MAAuB;YAClD,IAAI,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE;gBAC/C,KAAI,CAAC,gBAAgB,CACnB,MAAM;gBACN,aAAa;gBACb,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,EAC9B,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAClC,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,CAClC,CAAC;gBACF,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBAC1C,MAAM,GAAG,IAAI,CAAC;aACf;QACH,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,OAAO,MAAM,CAAC;IAChB,CAAC;IAEM,kCAAa,GAApB;QAAA,iBASC;QARC,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;QAC3B,gBAAgB,CAAC,OAAO,CAAC,iBAAO;YAC9B,EAAE,CAAC,UAAU,CACX,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC;YAC/B,aAAa;YACb,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAC/B,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,iCAAY,GAAnB,UACE,EAAU,EACV,MAAuB,EACvB,KAAe,EACf,MAAkB;QAAlB,mCAAkB;QAElB,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;YAAE,OAAO;QAC7B,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/B,aAAa;QACb,IAAM,MAAM,GAAW,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACzD,IAAI,UAAwB,CAAC;QAC7B,aAAa;QACb,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACzC,aAAa;QACb,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,EAAE,GAAG,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;IACzE,CAAC;IAEM,iCAAY,GAAnB,UACE,EAAU,EACV,MAAuB,EACvB,MAAkB,EAClB,MAAkB;QADlB,mCAAkB;QAClB,mCAAkB;QAElB,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/B,aAAa;QACb,IAAM,MAAM,GAAW,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACzD,IAAI,UAAwB,CAAC;QAC7B,aAAa;QACb,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAChD,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QACzC,aAAa;QACb,IAAM,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,MAAM,CAAC;QACpC,IAAI,GAAG,CAAC;QACR,IAAI,MAAM,GAAG,CAAC,EAAE;YACd,aAAa;YACb,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;SACpD;aAAM;YACL,aAAa;YACb,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;SAC1B;QACD,OAAO,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;IACrD,CAAC;IAEM,wBAAG,GAAV;QAAA,iBAiBC;QAhBC,kBAAkB;QAClB,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,gBAAgB,EAAE;YAChD,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;QAED,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC3B,IAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,mBAAmB,CAAC,OAAO,CAAC,gBAAM;YAChC,YAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC;QAAxC,CAAwC,CACzC,CAAC;QAEF,OAAO,EAAE,CAAC;IACZ,CAAC;IAEM,2BAAM,GAAb,UAAc,EAAU;QAAxB,iBAsBC;QArBC,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC7B,aAAa;QACb,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE;YAChC,OAAO;SACR;QACD,mBAAmB,CAAC,OAAO,CAAC,UAAC,MAAuB;YAClD,KAAI,CAAC,yBAAyB,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;YAC3C,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;QACnD,aAAa;QACb,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAC5B,aAAa;QACb,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;QAE1B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;QAElB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEM,0BAAK,GAAZ;QAAA,iBAmBC;QAlBC,IAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,EAAE;YACpD,IAAM,GAAC,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAC3D,mBAAmB,CAAC,OAAO,CAAC,gBAAM;gBAChC,aAAa;gBACb,IAAM,GAAG,GAAG,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC;gBACtD,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,YAAY,CAAC,GAAG,GAAG,GAAC,CAAC,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC;SAClD;aAAM;YACL,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAT,CAAS,CAAC,CAAC;SAChD;QACD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;YAClC,YAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC;QAAnC,CAAmC,CACpC,CAAC;QACF,aAAa;QACb,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IACzB,CAAC;IAEM,yBAAI,GAAX,UAAY,MAAuB,EAAE,KAAa;QAChD,aAAa;QACb,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED;;;;;;OAMG;IACI,6BAAQ,GAAf,UACE,MAAuB,EACvB,KAAmC,EACnC,MAAkB;QAAlB,mCAAkB;QAElB,IAAM,MAAM,GAAG,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACjD,aAAa;QACb,IAAI,MAAM,IAAI,MAAM,EAAE;YACpB,OAAO;SACR;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAClD,IAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;QAC/B,aAAa;QACb,IAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;QAC1C,IAAI,CAAC,GAAG,MAAM,CAAC;QACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5B,aAAa;YACb,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjB,aAAa;YACb,CAAC,IAAI,MAAM,CAAC;SACb;QAED,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED;;;;;OAKG;IACI,6BAAQ,GAAf,UACE,MAAuB,EACvB,KAAmC,EACnC,MAAkB;QAAlB,mCAAkB;QAElB,IAAM,MAAM,GAAG,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACjD,aAAa;QACb,IAAI,MAAM,IAAI,MAAM,EAAE;YACpB,OAAO;SACR;QAED,IAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAClD,IAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;QAC/B,aAAa;QACb,IAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC;QAC1C,IAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;QACpB,IAAI,CAAC,GAAG,MAAM,CAAC;QAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;gBAC3B,aAAa;gBACb,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aACvB;YACD,aAAa;YACb,CAAC,IAAI,MAAM,CAAC;SACb;QAED,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAEM,4BAAO,GAAd;QACE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QAC3B,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;QAC/B,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;QAC/B,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;IAClB,CAAC;IAEM,yBAAI,GAAX;QACE,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAC5B,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,EAAE,CAAC,qBAAqB,CACtB,EAAE,CAAC,aAAa,EAChB,EAAE,CAAC,OAAO,CAAC,MAAM,EACjB,EAAE,CAAC,YAAY,EACf,CAAC,EACD,IAAI,CAAC,aAAa,CACnB,CAAC;IACJ,CAAC;IAED,sBAAW,+BAAO;aAIlB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;QACvB,CAAC;aAND,UAAmB,CAAgB;YACjC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QACpB,CAAC;;;OAAA;IAMD,sBAAW,+BAAO;aASlB;YACE,aAAa;YACb,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,0BAAuB,CAAC,CAAC,CAAC,CAAC;QACzD,CAAC;aAZD,UAAmB,CAAS;YAC1B,kCAAkC;YAClC,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACzB,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,0BAAuB,CAAC;YAC1D,aAAa;YACb,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAChC,CAAC;;;OAAA;IAOD,sBAAW,+BAAO;aAAlB;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC;;;OAAA;IAED;;;;OAIG;IACI,4CAAuB,GAA9B,UAA+B,EAAU,EAAE,MAAkB;QAAlB,mCAAkB;QAC3D,KAAK;QACL,IAAI,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;QACvC,OAAO;QACP,IAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC;QAC7C,MAAM;QACN,IAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAC3B,EAAE,6GAEF,CAAC,EACD,CAAC,CACF,CAAC;QACF,KAAK;QACL,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAC7B,EAAE,2DAEF,CAAC,EACD,CAAC,CACF,CAAC;QACF,KAAK;QACL,IAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAC3B,EAAE,2DAEF,CAAC,EACD,CAAC,CACF,CAAC,CAAC,CAAC,CAAC;QACL,OAAO;QACP,IAAM,GAAG,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;QAE1B,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QAE9B,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC5B,IAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACxD,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3D,WAAW;YACX,IAAI,MAAM,GAAG,sEAAiB,CAC5B,EAAE,EACF,KAAK,EACL,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CACnC,CAAC;YACF,aAAa;YACb,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvB;QAED,IAAM,MAAM,GAAG,EAAE,CAAC;gCAET,CAAC;YACR,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACrC,IAAI,IAAI,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACrC,IAAM,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC1B,IAAM,IAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YACvB,IAAM,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC1B,QAAQ;YACR,aAAa;YACb,IAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,GAAG,IAAE,CAAC,CAAC,CAAC,EAAT,CAAS,CAAC,CAAC;YACvC,aAAa;YACb,IAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,GAAG,IAAE,CAAC,CAAC,CAAC,EAAT,CAAS,CAAC,CAAC;YACvC,SAAS;YACT,IAAI,EAAE,GAAG,yEAAoB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAE,EAAE,MAAM,CAAC,CAAC;YAClD,KAAK;YACL,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;YAChC,KAAK;YACL,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACzD,aAAa;YACb,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;QAlB5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;oBAAnB,CAAC;SAmBT;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,6BAAQ,GAAhB;QACE,OAAO,sDAAS,CAAC,QAAQ,EAAE,CAAC;IAC9B,CAAC;IAEO,oCAAe,GAAvB,UAAwB,MAAuB,EAAE,UAAwB;QACvE,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;QAC7B,IAAM,MAAM,GAAG,EAAE,CAAC,YAAY,EAAE,CAAC;QACjC,IAAM,MAAM,GAAG,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACjD,IAAM,KAAK,GAAG,EAAE,CAAC,iBAAiB,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QAChD,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QACvC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC;QAC3D,aAAa;QACb,EAAE,CAAC,mBAAmB,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7D,EAAE,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAEO,qCAAgB,GAAxB,UACE,MAAuB,EACvB,MAAmB,EACnB,UAAwB,EACxB,IAAY,EACZ,MAAkB;QAAlB,mCAAkB;QAElB,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;QAC3B,IAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;QAC7B,IAAM,KAAK,GAAG,UAAU,CAAC,iBAAiB,CAAC;QAC3C,IAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAM,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAE7B,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;QACvC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,EAAE,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;QAEzE,EAAE,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;QAClC,EAAE,CAAC,mBAAmB,CACpB,KAAK,EACL,IAAI,EACJ,EAAE,CAAC,KAAK,EACR,KAAK,EACL,IAAI,GAAG,KAAK,EACZ,MAAM,GAAG,KAAK,CACf,CAAC;QACF,EAAE,CAAC,mBAAmB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACjC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IACvC,CAAC;IAEO,8CAAyB,GAAjC,UAAkC,EAAU,EAAE,MAAuB;QACnE,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/B,aAAa;QACb,IAAM,UAAU,GAAiB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpE,aAAa;QACb,IAAM,MAAM,GAAW,qBAAqB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACzD,IAAM,CAAC,GAAW,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;QACtD,IAAM,GAAG,GAAG,IAAI,KAAK,CAAS,MAAM,CAAC,CAAC;QACtC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACZ,UAAU,CAAC,GAAG,CACZ,UAAU,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;QAC9C,aAAa;QACb,GAAG,GAAG,MAAM,CACb,CAAC;QACF,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC;IAClC,CAAC;IAEO,yBAAI,GAAZ;QAAA,iBAYC;QAXC,mBAAmB,CAAC,OAAO,CAAC,gBAAM;YAChC,IAAI,MAAM,GAAG,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAChD,aAAa;YACb,IAAI,SAAS,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACpD,aAAa;YACb,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACtB,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YAC9C,aAAa;YACb,MAAM,GAAG,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAC;IAC7B,CAAC;IACH,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvnBmC;AACU;AACJ;AAE1C,IAAM,aAAa,GAAG;IACpB,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAC1B,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;CAC5B,CAAC;AAEF,IAAM,UAAU,GAAG;IACjB,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IACxB,UAAU,EAAE,YAAY;IACxB,UAAU,EAAE,QAAQ;CACrB,CAAC;AAEF,4BAA4B;AAC5B,IAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAElC;IAME,QAAQ;IACR,wBAAY,SAAS;QAJb,WAAM,GAAY,EAAE,CAAC;QACrB,aAAQ,GAA8B,IAAI,GAAG,EAAE,CAAC;QAItD,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;QACpB,IAAM,EAAE,GAAG,SAAS,CAAC;QACrB,IAAM,EAAE,GAAG,aAAa,CAAC,SAAS,CAAC;QACnC,IAAM,EAAE,GAAG,aAAa,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,IAAI,qDAAa,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,aAAa,EAAE,CAAC;QAClC,YAAY;QACZ,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5C,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,mBAAmB,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO;QAClD,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;QACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,cAAc,EAAE,EAAE,CAAC,aAAa,CAAC,CAAC;QACrE,EAAE,CAAC,aAAa,CAAC,EAAE,CAAC,UAAU,EAAE,EAAE,CAAC,kBAAkB,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;QAClE,EAAE,CAAC,aAAa,CACd,EAAE,CAAC,UAAU,EACb,EAAE,CAAC,kBAAkB,EACrB,EAAE,CAAC,oBAAoB,CACxB,CAAC;QACF,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACtD,CAAC;IAEM,yCAAgB,GAAvB;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEM,sCAAa,GAApB,UACE,MAAW,EACX,KAAa,EACb,MAAc;QAEd,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,GAAG,IAAI,UAAU,CAAC,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAChB;QACD,IAAM,CAAC,GAAG,IAAI,YAAY,EAAE,CAAC;QAC7B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAC7B,4CAA4C;QAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YACf,CAAC,EAAE,KAAK,GAAG,UAAU;YACrB,CAAC,EAAE,MAAM,GAAG,UAAU;YACtB,IAAI,EAAE;gBACJ,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,CAAC;aACX;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,OAAO,CAAC,CAAC;IACX,CAAC;IAEM,uCAAc,GAArB,UAAsB,GAAW;QAC/B,IAAM,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,aAAa;QACb,IAAI,CAAC,KAAK,EAAE;YAAE,OAAO,IAAI,CAAC;QAC1B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACzB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAClB,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;QACD,aAAa;QACb,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAChC,CAAC;IAEM,wCAAe,GAAtB;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAEM,kCAAS,GAAhB,UAAiB,KAAa;QAC5B,IAAM,GAAG,GAAG,IAAI,qCAAO,CACrB,UAAU,CAAC,QAAQ,EACnB,UAAU,CAAC,QAAQ,GAAG,CAAC,EACvB,UAAU,CAAC,QAAQ,GAAG,CAAC,EACvB,IAAI,EACJ,UAAU,CAAC,UAAU,EACrB,UAAU,CAAC,UAAU,CACtB,CAAC;QACF,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACpC,UAAU;YACV,IAAI,GAAG,IAAI,GAAG,YAAY,YAAY,EAAE;gBACtC,SAAS;aACV;YACD,IAAM,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,GAAG,IAAI,YAAY,EAAE,CAAC;YAC3B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAC7B,4CAA4C;YAC5C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBACf,CAAC,EAAE,IAAI,GAAG,UAAU;gBACpB,CAAC,EAAE,IAAI,GAAG,UAAU;gBACpB,IAAI,EAAE;oBACJ,MAAM,EAAE,CAAC;oBACT,OAAO,EAAE,CAAC;iBACX;aACF,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;SAC5B;IACH,CAAC;IAEM,mCAAU,GAAjB;QAAA,iBAmBC;QAlBC,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QACvB,sBAAsB;QACtB,oCAAoC;QACpC,yCAAyC;QACzC,aAAa;QACb,MAAM;QACN,kCAAkC;QAClC,6BAA6B;QAC7B,MAAM;QAEN,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE7B,IAAM,QAAQ,GAAmB,IAAI,CAAC,MAAM;aACzC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,IAAI,CAAC,OAAO,EAAd,CAAc,CAAC;aAC7B,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,OAAO,KAAK,KAAK,EAAnB,CAAmB,CAAC,CAAC;QAEpC,QAAQ,CAAC,OAAO,CAAC,WAAC,IAAI,YAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAAzB,CAAyB,CAAC,CAAC;IACnD,CAAC;IAEM,0CAAiB,GAAxB,UAAyB,OAAqB;QAC5C,IAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,IAAM,GAAG,GAAG,UAAU,CAAC;QACvB,IAAM,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QACtB,aAAa;QACb,IAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QAC5B,aAAa;QACb,IAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QAC5B,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;QACxB,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;QACxB,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,kDAAkD;QAClD,EAAE,CAAC,aAAa,CACd,EAAE,CAAC,UAAU,EACb,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,EACD,EAAE,CAAC,IAAI,EACP,EAAE,CAAC,aAAa,EAChB,KAAK,CAAC,IAAI,CAAC,MAAM,CAClB,CAAC;QACF,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;IACzB,CAAC;IAED;;;;;OAKG;IACI,sCAAa,GAApB,UACE,OAAqB,EACrB,OAAmB,EACnB,OAAmB;QADnB,qCAAmB;QACnB,qCAAmB;QAEnB,IAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC;QAC1B,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC/B,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;QACnB,IAAM,GAAG,GAAG,UAAU,CAAC;QACvB,IAAM,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAEtB,aAAa;QACb,IAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QAE5B,aAAa;QACb,IAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QAC5B,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;QACxB,IAAM,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;QACxB,OAAO;QACP,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvE,CAAC;IACH,qBAAC;AAAD,CAAC;;AAMD;IAAkC,gCAAe;IAO/C;QAAA,YACE,iBAAO,SACR;QARD,OAAC,GAAG,CAAC,CAAC;QACN,OAAC,GAAG,CAAC,CAAC;QACN,WAAK,GAAG,CAAC,CAAC;QACV,YAAM,GAAG,CAAC,CAAC;QACX,WAAK,GAAG,CAAC,CAAC;QACV,aAAO,GAAY,KAAK,CAAC;;IAGzB,CAAC;IACD,6BAAM,GAAN,UACE,CAAS,EACT,CAAS,EACT,KAAa,EACb,MAAc,EACd,KAAkB;QAAlB,iCAAiB,CAAC;QAElB,IAAM,EAAE,GAAG,aAAa,CAAC,SAAS,CAAC;QACnC,IAAM,EAAE,GAAG,aAAa,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,EAAE,CAAC;QAC1B,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;QACD,IAAI,CAAC,aAAa,wBAA2B,IAAI,CAAC,CAAC;IACrD,CAAC;IACH,mBAAC;AAAD,CAAC,CA5BiC,uDAAe,GA4BhD;;;;;;;;;;;;;;ACzOD;AAAA;AAAA;IAIE,0BAAY,GAAa;QAFjB,WAAM,GAAY,KAAK,CAAC;QACxB,kBAAa,GAAW,CAAC,CAAC;QAEhC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IAClB,CAAC;IAED,sBAAW,wCAAU;aAUrB;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAZD,UAAsB,IAAa;YACjC,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM;gBAAE,OAAO;YACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,IAAI,KAAK,IAAI,EAAE;gBACjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;iBAAM;gBACL,IAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B;QACH,CAAC;;;OAAA;IAMD,sBAAW,0CAAY;aAOvB;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC;aATD,UAAwB,CAAS;YAC/B,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC;gBAAE,OAAO;YACrC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YACvB,SAAS;YACT,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACzC,CAAC;;;OAAA;IAMD,sBAAc,gCAAE;aAAhB;YACE,OAAO,EAAE,CAAC;QACZ,CAAC;;;OAAA;IAED;;OAEG;IACO,6CAAkB,GAA5B,UAA6B,MAAkB;QAAlB,mCAAkB;QAC7C,OAAO,EAAE,CAAC;IACZ,CAAC;IAED;;OAEG;IACO,2CAAgB,GAA1B;QACE,IAAM,EAAE,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvD,IAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,GAAG,CAAC,KAAK,CAAC,EAAX,CAAW,CAAC,CAAC;QAC5C,IAAM,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,GAAG,CAAC,KAAK,CAAC,EAAX,CAAW,CAAC,CAAC;QAC5C,IAAM,GAAG,GAA0B;YACjC,EAAE,EAAE,IAAI,CAAC,EAAE;YACX,MAAM,EAAE;gBACN,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;gBAC9B,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;gBAC9B,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;gBAC9B,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC;aAC/B;YACD,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAED;;OAEG;IACO,6CAAkB,GAA5B;QACE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5B,CAAC;IACH,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;ACxED;AAAA;AAAA;AAAA;AAA0B;AAE1B;;;;GAIG;AACH,SAAS,UAAU,CAAC,CAAW,EAAE,IAAc;IAC7C,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EACX,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EACT,IAAI,GAAG,KAAK,EACZ,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAEtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC5C,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAClB,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EACpB,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAChB,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAEvB,YAAY;QACZ,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE;YACxD,IAAI,GAAG,IAAI,CAAC;YACZ,MAAM;SACP;QAED,iBAAiB;QACjB,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE;YAClD,wBAAwB;YACxB,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;YAEjD,WAAW;YACX,IAAI,CAAC,KAAK,EAAE,EAAE;gBACZ,IAAI,GAAG,IAAI,CAAC;gBACZ,MAAM;aACP;YAED,aAAa;YACb,IAAI,CAAC,GAAG,EAAE,EAAE;gBACV,IAAI,GAAG,CAAC,IAAI,CAAC;aACd;SACF;KACF;IAED,yBAAyB;IACzB,OAAO,IAAI,CAAC;AACd,CAAC;AAaD;IAGE;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,4CAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;IAC3B,CAAC;IAEM,yBAAM,GAAb,UAAc,GAA0B;QACtC,IAAI,CAAC,GAAG,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,iBAAiB,EAAE,GAAG,CAAC,CAAC;YAClD,OAAO;SACR;QACD,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;YAChE,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,2CAA2C,CAAC,CAAC;YACvE,OAAO;SACR;QAED,IAAM,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QAClB,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAEvC,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAE7B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAChC,CAAC;IAEM,yBAAM,GAAb,UAAc,EAAU;QACtB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG;YAAE,OAAO;QACjB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAEM,yBAAM,GAAb,UACE,CAAS,EACT,CAAS,EACT,KAAiB,EACjB,MAAkB;QAJpB,iBAeC;QAZC,iCAAiB;QACjB,mCAAkB;QAElB,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK;aACpB,MAAM,CAAC,EAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,IAAI,EAAE,MAAM,GAAG,CAAC,EAAC,CAAC;aAC7D,GAAG,CAAC,WAAC,IAAI,YAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAtB,CAAsB,CAAC,CAAC;QACpC,IAAI,KAAK,IAAI,CAAC,IAAI,MAAM,IAAI,CAAC,EAAE;YAC7B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAC;gBACtB,OAAO,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,4BAAS,GAAjB,UAAkB,GAAG;QACnB,IAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;QACzB,OAAO,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE;YAC/B,EAAE,EAAE,GAAG,CAAC,EAAE;SACX,CAAC,CAAC;IACL,CAAC;IACH,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACpHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACnD,IAAM,IAAI,GAAG,sDAAa,CAAC;AAC3B,IAAM,IAAI,GAAG,sDAAa,CAAC;AAE3B;IAKE,mBAAY,CAAa,EAAE,CAAa,EAAE,CAAa,EAAE,CAAa;QAA1D,yBAAa;QAAE,yBAAa;QAAE,yBAAa;QAAE,yBAAa;QACpE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,CAAC;IACD,4BAAQ,GAAR,UAAS,CAAa,EAAE,CAAa,EAAE,CAAa,EAAE,CAAa;QAA1D,yBAAa;QAAE,yBAAa;QAAE,yBAAa;QAAE,yBAAa;QACjE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACb,CAAC;IACH,gBAAC;AAAD,CAAC;;AAEM,SAAS,SAAS,CAAC,QAAkB;IAC1C,IAAM,EAAE,GAAG,QAAQ,CAAC;IACpB,IAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,GAAG,CAAC,KAAK,CAAC,EAAX,CAAW,CAAC,CAAC;IAC7C,IAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,GAAG,CAAC,KAAK,CAAC,EAAX,CAAW,CAAC,CAAC;IAC7C,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACvC,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACvC,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACvC,IAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACvC,OAAO,IAAI,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;AAC7D,CAAC;AAEM,SAAS,SAAS,CAAC,GAAW;IACnC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACjC,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QAC1B,KAAK,CAAC,MAAM,GAAG,cAAM,cAAO,CAAC,KAAK,CAAC,EAAd,CAAc,CAAC;QACpC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;IAClB,CAAC,CAAC,CAAC;AACL,CAAC;AAEM,SAAS,UAAU,CAAC,IAAc;IACvC,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,aAAG,IAAI,gBAAS,CAAC,GAAG,CAAC,EAAd,CAAc,CAAC,CAAC,CAAC;AACtD,CAAC;AAED;IAAA;IAMA,CAAC;IAJe,kBAAQ,GAAtB;QACE,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC7B,CAAC;IAJc,aAAG,GAAW,CAAC,CAAC;IAKjC,gBAAC;CAAA;AANqB;AAQtB;;;;;;GAMG;AACI,SAAS,oBAAoB,CAClC,GAAiB,EACjB,GAAiB,EACjB,EAAgB,EAChB,MAAc;IAEd,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,CAAC;IAC/C,IAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,CAAC,CAAC;IAC/C,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC5C,SAAS;IACT,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/B,KAAK;IACL,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CACnB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAC3D,CAAC;IACF,aAAa;IACb,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC5C,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,UAAU;IACV,IAAI,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;IAEvC,OAAO,GAAG,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,GAAG,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,EAApB,CAAoB,CAAC,CAAC;AACjD,CAAC;AAED;;;;;GAKG;AACI,SAAS,iBAAiB,CAC/B,MAAoB,EACpB,KAAmB,EACnB,WAAyB;IAEzB,OAAO,MAAM,CAAC,GAAG,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,EAA7B,CAA6B,CAAC,CAAC;AAC7D,CAAC;AAEM,SAAS,UAAU,CAAC,IAAI,EAAE,IAAI;IACnC,IAAI,MAAM,GAAG,IAAI,CAAC;IAClB,IACE,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC;QACxB,CAAC,CAAC,IAAI,YAAY,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,EAC3B;QACA,OAAO,KAAK,CAAC;KACd;IAED,IAAI,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC;QAChB,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,EAAE;YACjB,MAAM,GAAG,KAAK,CAAC;YACf,OAAO;SACR;IACH,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,iBAAiB;AACV,SAAS,QAAQ,CAAC,GAAW;IAClC,IAAI,GAAG,GAAG,oCAAoC,CAAC;IAC/C,IAAI,MAAM,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;IAC/B,IAAI,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;QAC9B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;YACvB,IAAI,SAAS,GAAG,GAAG,CAAC;YACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAC7B,SAAS,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aACpE;YACD,MAAM,GAAG,SAAS,CAAC;SACpB;QACD,WAAW;QACX,IAAI,YAAY,GAAG,EAAE,CAAC;QACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YAC7B,aAAa;YACb,iCAAiC;YACjC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5D;QACD,OAAO,YAAY,CAAC;KACrB;SAAM;QACL,OAAO,MAAM,CAAC;KACf;AACH,CAAC;AAED,aAAa;AACN,SAAS,SAAS,CAAC,GAAW;IACnC,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,iBAAiB,CAAC,CAAC;IACxC,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,CAAC;AAEM,SAAS,SAAS,CAAC,GAAW;IACnC,YAAY;IACZ,IAAM,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC/B,OAAO,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,OAAO,CAAC;AAC3C,CAAC;AAEM,SAAS,WAAW,CAAC,GAAW,EAAE,GAAW,EAAE,CAAS;IAC7D,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC;AAEM,SAAS,qBAAqB,CACnC,GAAc,EACd,KAAgB,EAChB,KAAgB;IAEhB,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1D,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAE1D,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE;QACxB,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAClC,OAAO,GAAG,CAAC;KACZ;SAAM;QACL,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QACX,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;QACX,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;QAChB,OAAO,GAAG,CAAC;KACZ;AACH,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClLyC;AACS;AACd;AAErC,IAAM,IAAI,GAAG,sDAAa,CAAC;AAC3B,IAAM,IAAI,GAAG,sDAAa,CAAC;AAC3B,IAAM,IAAI,GAAG,sDAAa,CAAC;AAC3B,IAAM,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAEtC,IAAY,aAKX;AALD,WAAY,aAAa;IACvB,yDAAwC;IACxC,6CAA4B;IAC5B,2CAA0B;IAC1B,mDAAkC;AACpC,CAAC,EALW,aAAa,KAAb,aAAa,QAKxB;AAED;IAA8B,4BAAe;IAkB3C,kBAAY,OAAgB;QAA5B,YACE,iBAAO,SAMR;QAtBO,YAAM,GAAiB,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;QAC3C,kBAAY,GAAiB,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;QACjD,wBAAkB,GAAiB,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;QACvD,iBAAW,GAAW,CAAC,CAAC;QACxB,cAAQ,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAGlC,cAAQ,GAAiB,IAAI,CAAC,MAAM,EAAE,CAAC;QACvC,cAAQ,GAAiB,IAAI,CAAC,MAAM,EAAE,CAAC;QACvC,cAAQ,GAAW,IAAI,CAAC;QACxB,cAAQ,GAAW,CAAC,CAAC;QACtB,qBAAe,GAAY,IAAI,CAAC;QAChC,uBAAiB,GAAY,IAAI,CAAC;QAClC,6BAAuB,GAAY,IAAI,CAAC;QACxC,0BAAoB,GAAY,IAAI,CAAC;QAG1C,KAAI,CAAC,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC;QACtB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAM,MAAM,GAAG,KAAI,CAAC,GAAG,CAAC,MAAM,CAAC;QAC/B,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;QAClD,KAAI,CAAC,KAAK,EAAE,CAAC;;IACf,CAAC;IAED;;;OAGG;IACH,qCAAkB,GAAlB,UAAmB,KAAe;QAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CACvB,IAAI,CAAC,GAAG,EACR,KAAK,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,GAAG,GAAG,EAAP,CAAO,CAAC,CACxB,CAAC;IACJ,CAAC;IAED,qCAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,kCAAe,GAAf,UAAgB,KAAa,EAAE,MAAc,EAAE,SAAyB;QAAzB,4CAAyB;QACtE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QAExB,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAM,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;QACxB,IAAM,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC;QAEzB,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAExB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAErD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAE5B,IAAI,SAAS,EAAE;YACb,IAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;YACzB,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;YACjB,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YAClB,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;SACrC;QAED,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IAChD,CAAC;IAED,kCAAe,GAAf;QACE,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;IAED;;;;;OAKG;IACH,8BAAW,GAAX,UAAY,KAAa,EAAE,EAAU,EAAE,EAAU,EAAE,QAAwB;QAAxB,0CAAwB;QACzE,KAAK,GAAG,0DAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACzD,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC;QAClC,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACzC,IAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,SAAS,CAAC;QAC3C,IAAM,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QAC9B,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QACjB,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;QAEjB,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvC,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEvC,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;QAC7B,IAAI,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;QAE7B,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IAC7D,CAAC;IAED;;;;OAIG;IACH,4BAAS,GAAT,UAAU,EAAU,EAAE,EAAU,EAAE,QAAwB;QAAxB,0CAAwB;QACxD,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5B,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/C,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAChD,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;IACnE,CAAC;IAED,yBAAM,GAAN,UAAO,MAAc,EAAE,QAAwB;QAAxB,0CAAwB;QAC7C,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5B,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;QAE9B,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC;QAC3B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;IAChE,CAAC;IAED,wBAAK,GAAL,UAAM,QAAwB;QAAxB,0CAAwB;QAC5B,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5B,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9B,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YAC/C,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;SACnD;IACH,CAAC;IAED,2CAAwB,GAAxB,UACE,OAAe,EACf,OAAe,EACf,KAAiB,EACjB,OAAmB,EACnB,OAAmB,EACnB,QAAwB;QAHxB,iCAAiB;QACjB,qCAAmB;QACnB,qCAAmB;QACnB,0CAAwB;QAExB,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;QACzC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAClB,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,EAAE,OAAO,GAAG,SAAS,EAAE,KAAK,CAAC,CAAC;QAChE,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;QACjD,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;YAC/C,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC;SACnD;IACH,CAAC;IAKD,sBAAI,2BAAK;QAHT;;WAEG;aACH;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAI,iCAAW;aAAf;YACE,IAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACrC,IAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;YACzC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;YACrC,OAAO;gBACL,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,GAAG,KAAK;gBAC7C,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,KAAK;aAC/C,CAAC;QACJ,CAAC;;;OAAA;IAED,sBAAI,gCAAU;aAKd;YACE,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,CAAC;aAPD,UAAe,KAAe;YAC5B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3B,CAAC;;;OAAA;IAMD;;;;;OAKG;IACH,6CAA0B,GAA1B,UAA2B,CAAS,EAAE,CAAS;QAC7C,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC3B,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC3B,IAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAEvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEpB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACtE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAEjC,IAAI,CAAC,GAAG,CAAC;YACP,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS;YAClC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS;YAClC,CAAC;SACF,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAE7B,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAE7B,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAE5C,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAExB,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAC5B,IAAM,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAE7B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,sBAAI,2BAAK;aAAT;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;;;OAAA;IAED,sBAAI,iCAAW;aAAf;YACE,OAAO,IAAI,CAAC,YAAY,CAAC;QAC3B,CAAC;;;OAAA;IAED,sBAAI,uCAAiB;aAArB;YACE,OAAO,IAAI,CAAC,kBAAkB,CAAC;QACjC,CAAC;;;OAAA;IAED,sBAAI,gCAAU;aAAd;YACE,OAAO,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;;;OAAA;IACH,eAAC;AAAD,CAAC,CAjP6B,uDAAe,GAiP5C","file":"0.rainbow.js","sourcesContent":["import mod from \"-!../../../../../../node_modules/style-loader/index.js!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./mesh.scss?vue&type=style&index=0&id=83b4749c&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../../../../node_modules/style-loader/index.js!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./mesh.scss?vue&type=style&index=0&id=83b4749c&lang=scss&scoped=true&\"","import Vue from 'vue';\nimport Component from 'vue-class-component';\nimport {Rainbow} from '../../../../../../src/rainbow';\nimport {Generator} from '../../../../../../src/render/generator';\nimport {RectMesh} from '../../../../../../src/graph/mesh';\n\n@Component\nexport default class App extends Vue {\n  // 初始化数据\n  rainbow!: Rainbow;\n  canvas!: HTMLCanvasElement;\n  scr!: import('/Users/bytedance/Desktop/github/rainbow/src/search/searcher').Searcher;\n  tf!: import('/Users/bytedance/Desktop/github/rainbow/src/render/texture').TextureFactroy;\n  vp!: import('/Users/bytedance/Desktop/github/rainbow/src/viewport/index').Viewport;\n  isDragging!: boolean;\n  dragLastPoint!: any[];\n  // 声明周期钩子\n  mounted() {\n    this.canvas = document.getElementById('canvas') as HTMLCanvasElement;\n    this.canvas.style.transitionProperty = 'transform';\n    this.canvas.style.userSelect = 'none';\n    this.canvas.width = document.getElementById('main-canvas')!.clientWidth;\n    this.canvas.height = document.getElementById('main-canvas')!.clientHeight;\n    this.canvas.style.position = 'absolute';\n    this.canvas.style.top = '0';\n    this.canvas.style.left = '0';\n    this.canvas.style.zIndex = '1';\n\n    if (this.canvas) {\n      this.rainbow = new Rainbow(this.canvas);\n      this.rainbow.isDebug = false;\n      this.scr = this.rainbow.searcher;\n      this.tf = this.rainbow.textureFactroy;\n      this.vp = this.rainbow.viewport;\n      this.isDragging = false;\n      this.dragLastPoint = [];\n      this.rainbow.viewport.setBackgroundColor([255, 102, 102, 255]);\n\n      const g = new Generator(this.rainbow, new RectMesh());\n      for (let i = 0; i < 10; i++) {\n        let obj = g.instance().show();\n        obj.size = [100 + i * 100, 100 + i * 100];\n        obj.borderWidth = 0.5;\n        obj.backgroundColor = [180, 180, 180, 255];\n        obj.borderColor = [255, 255, 255, 255];\n        obj.translation = [200, 200];\n        //  obj.outViewportStatus = OutViewportStatus.NONE;\n      }\n\n      this.initEvent();\n      this.rainbow.render();\n    }\n  }\n\n  initEvent() {\n    // 鼠标缩放回调\n    const _wheelHandler = evt => {\n      if (evt.preventDefault) {\n        evt.preventDefault();\n      }\n      evt.returnValue = false;\n      const mx = evt.offsetX;\n      const my = evt.offsetY;\n      let d = -evt.wheelDeltaY / -1000;\n      let transferData = this.vp.changeCoordinateFromScreen(mx, my);\n      this.vp.scaleOrigin(d + this.vp.scale, transferData[0], transferData[1]);\n    };\n\n    // 开始视口拖动\n    const _dragStart = evt => {\n      this.isDragging = true;\n      this.dragLastPoint = [evt.x, evt.y];\n    };\n\n    // 视口拖动\n    const _drag = evt => {\n      if (!this.isDragging) return;\n      const dx = evt.x - this.dragLastPoint[0];\n      const dy = evt.y - this.dragLastPoint[1];\n      this.vp.translate(dx, -dy);\n      this.dragLastPoint = [evt.x, evt.y];\n    };\n\n    // 视口拖动结束\n    const _dragEnd = evt => {\n      this.isDragging = false;\n      this.dragLastPoint = [];\n    };\n\n    this.canvas.addEventListener('mousewheel', _wheelHandler);\n    this.canvas.addEventListener('mousedown', _dragStart);\n    this.canvas.addEventListener('mousemove', _drag);\n    this.canvas.addEventListener('mouseup', _dragEnd);\n\n    // this.canvas.addEventListener('click', _clickHandler);\n    // this.canvas.addEventListener('mousemove', _move2Handler);\n  }\n}\n","import { render, staticRenderFns } from \"./mesh.vue?vue&type=template&id=83b4749c&scoped=true&\"\nimport script from \"./mesh.vue?vue&type=script&lang=ts&\"\nexport * from \"./mesh.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./mesh.scss?vue&type=style&index=0&id=83b4749c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"83b4749c\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/bytedance/Desktop/github/rainbow/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('83b4749c')) {\n      api.createRecord('83b4749c', component.options)\n    } else {\n      api.reload('83b4749c', component.options)\n    }\n    module.hot.accept(\"./mesh.vue?vue&type=template&id=83b4749c&scoped=true&\", function () {\n      api.rerender('83b4749c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"examples-webgl/vue/module/app/components/mesh/mesh.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/ts-loader/index.js??ref--1!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mesh.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../node_modules/ts-loader/index.js??ref--1!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mesh.vue?vue&type=script&lang=ts&\"","export * from \"-!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./mesh.vue?vue&type=template&id=83b4749c&scoped=true&\"","/**\n * @fileoverview gl-matrix - High performance matrix and vector operations\n * @author Brandon Jones\n * @author Colin MacKenzie IV\n * @version 2.4.0\n */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMatrixArrayType = setMatrixArrayType;\nexports.toRadian = toRadian;\nexports.equals = equals;\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\n/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nvar EPSILON = exports.EPSILON = 0.000001;\nvar ARRAY_TYPE = exports.ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = exports.RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nfunction setMatrixArrayType(type) {\n  exports.ARRAY_TYPE = ARRAY_TYPE = type;\n}\n\nvar degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nfunction toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.fromMat4 = fromMat4;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromTranslation = fromTranslation;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromMat2d = fromMat2d;\nexports.fromQuat = fromQuat;\nexports.normalFromMat4 = normalFromMat4;\nexports.projection = projection;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {mat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20;\n\n  // Calculate the determinant\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n};\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat3} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat3} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat2d} a the matrix to copy\n * @returns {mat3} out\n **/\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n\n/**\n* Calculates a 3x3 matrix from the given quaternion\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {quat} q Quaternion to create matrix from\n*\n* @returns {mat3} out\n*/\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n\n  return out;\n}\n\n/**\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n*\n* @param {mat3} out mat3 receiving operation result\n* @param {mat4} a Mat4 to derive the normal matrix from\n*\n* @returns {mat3} out\n*/\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n  return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n\n/**\n * Returns a string representation of a mat3\n *\n * @param {mat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {mat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat3} a The first matrix.\n * @param {mat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.length = length;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.hermite = hermite;\nexports.bezier = bezier;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformMat3 = transformMat3;\nexports.transformQuat = transformQuat;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.angle = angle;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {vec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\nfunction fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to ceil\n * @returns {vec3} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to floor\n * @returns {vec3} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to round\n * @returns {vec3} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {vec3} c the third operand\n * @param {vec3} d the fourth operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\nfunction random(out, scale) {\n  scale = scale || 1.0;\n\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nfunction transformQuat(out, a, q) {\n  // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\n\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n\n  // calculate quat * vec\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateX(out, a, b, c) {\n  var p = [],\n      r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateY(out, a, b, c) {\n  var p = [],\n      r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {vec3} a The vec3 point to rotate\n * @param {vec3} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec3} out\n */\nfunction rotateZ(out, a, b, c) {\n  var p = [],\n      r = [];\n  //Translate point to the origin\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2];\n\n  //perform rotation\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2];\n\n  //translate to correct position\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n\n  return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nfunction angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\nvar div = exports.div = divide;\n\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\nvar dist = exports.dist = distance;\n\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\nvar sqrDist = exports.sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec3.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvar forEach = exports.forEach = function () {\n  var vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.len = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat4 = transformMat4;\nexports.transformQuat = transformQuat;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {vec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\nfunction fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to ceil\n * @returns {vec4} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to floor\n * @returns {vec4} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to round\n * @returns {vec4} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Calculates the squared length of a vec4\n *\n * @param {vec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to negate\n * @returns {vec4} out\n */\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to invert\n * @returns {vec4} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\nfunction random(out, vectorScale) {\n  vectorScale = vectorScale || 1.0;\n\n  //TODO: This is a pretty awful way of doing this. Find something better.\n  out[0] = glMatrix.RANDOM();\n  out[1] = glMatrix.RANDOM();\n  out[2] = glMatrix.RANDOM();\n  out[3] = glMatrix.RANDOM();\n  normalize(out, out);\n  scale(out, out, vectorScale);\n  return out;\n}\n\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec4} out\n */\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec4} out\n */\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n\n  // calculate quat * vec\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z;\n\n  // calculate result * inverse quat\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec4} a The first vector.\n * @param {vec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\nvar div = exports.div = divide;\n\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\nvar dist = exports.dist = distance;\n\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\nvar sqrDist = exports.sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec4.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvar forEach = exports.forEach = function () {\n  var vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.vec4 = exports.vec3 = exports.vec2 = exports.quat = exports.mat4 = exports.mat3 = exports.mat2d = exports.mat2 = exports.glMatrix = undefined;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nvar _mat = __webpack_require__(5);\n\nvar mat2 = _interopRequireWildcard(_mat);\n\nvar _mat2d = __webpack_require__(6);\n\nvar mat2d = _interopRequireWildcard(_mat2d);\n\nvar _mat2 = __webpack_require__(1);\n\nvar mat3 = _interopRequireWildcard(_mat2);\n\nvar _mat3 = __webpack_require__(7);\n\nvar mat4 = _interopRequireWildcard(_mat3);\n\nvar _quat = __webpack_require__(8);\n\nvar quat = _interopRequireWildcard(_quat);\n\nvar _vec = __webpack_require__(9);\n\nvar vec2 = _interopRequireWildcard(_vec);\n\nvar _vec2 = __webpack_require__(2);\n\nvar vec3 = _interopRequireWildcard(_vec2);\n\nvar _vec3 = __webpack_require__(3);\n\nvar vec4 = _interopRequireWildcard(_vec3);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nexports.glMatrix = glMatrix;\nexports.mat2 = mat2;\nexports.mat2d = mat2d;\nexports.mat3 = mat3;\nexports.mat4 = mat4;\nexports.quat = quat;\nexports.vec2 = vec2;\nexports.vec3 = vec3;\nexports.vec4 = vec4; /**\n                      * @fileoverview gl-matrix - High performance matrix and vector operations\n                      * @author Brandon Jones\n                      * @author Colin MacKenzie IV\n                      * @version 2.4.0\n                      */\n\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n// END HEADER\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.str = str;\nexports.frob = frob;\nexports.LDU = LDU;\nexports.add = add;\nexports.subtract = subtract;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 2x2 Matrix\n * @module mat2\n */\n\n/**\n * Creates a new identity mat2\n *\n * @returns {mat2} a new 2x2 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat2 initialized with values from an existing matrix\n *\n * @param {mat2} a matrix to clone\n * @returns {mat2} a new 2x2 matrix\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Copy the values from one mat2 to another\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Set a mat2 to the identity matrix\n *\n * @param {mat2} out the receiving matrix\n * @returns {mat2} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Create a new mat2 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out A new 2x2 matrix\n */\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Set the components of a mat2 to the given values\n *\n * @param {mat2} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\n * @returns {mat2} out\n */\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n\n/**\n * Transpose the values of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n\n  // Calculate the determinant\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the source matrix\n * @returns {mat2} out\n */\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2\n *\n * @param {mat2} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n\n/**\n * Multiplies two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n\n/**\n * Rotates a mat2 by the given angle\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n\n/**\n * Scales the mat2 by the dimensions in the given vec2\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2} out\n **/\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.rotate(dest, dest, rad);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2} out\n */\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2.identity(dest);\n *     mat2.scale(dest, dest, vec);\n *\n * @param {mat2} out mat2 receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2\n *\n * @param {mat2} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2\n *\n * @param {mat2} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\n}\n\n/**\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\n * @param {mat2} L the lower triangular matrix\n * @param {mat2} D the diagonal matrix\n * @param {mat2} U the upper triangular matrix\n * @param {mat2} a the input matrix to factorize\n */\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n\n/**\n * Adds two mat2's\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @returns {mat2} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2} a The first matrix.\n * @param {mat2} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2} out the receiving matrix\n * @param {mat2} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n\n/**\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2} out the receiving vector\n * @param {mat2} a the first operand\n * @param {mat2} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n\n/**\n * Alias for {@link mat2.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat2.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.identity = identity;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.invert = invert;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.translate = translate;\nexports.fromRotation = fromRotation;\nexports.fromScaling = fromScaling;\nexports.fromTranslation = fromTranslation;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 2x3 Matrix\n * @module mat2d\n *\n * @description\n * A mat2d contains six elements defined as:\n * <pre>\n * [a, c, tx,\n *  b, d, ty]\n * </pre>\n * This is a short form for the 3x3 matrix:\n * <pre>\n * [a, c, tx,\n *  b, d, ty,\n *  0, 0, 1]\n * </pre>\n * The last row is ignored so the array is shorter and operations are faster.\n */\n\n/**\n * Creates a new identity mat2d\n *\n * @returns {mat2d} a new 2x3 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a new mat2d initialized with values from an existing matrix\n *\n * @param {mat2d} a matrix to clone\n * @returns {mat2d} a new 2x3 matrix\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Copy the values from one mat2d to another\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n\n/**\n * Set a mat2d to the identity matrix\n *\n * @param {mat2d} out the receiving matrix\n * @returns {mat2d} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Create a new mat2d with the given values\n *\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} A new mat2d\n */\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new glMatrix.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Set the components of a mat2d to the given values\n *\n * @param {mat2d} out the receiving matrix\n * @param {Number} a Component A (index 0)\n * @param {Number} b Component B (index 1)\n * @param {Number} c Component C (index 2)\n * @param {Number} d Component D (index 3)\n * @param {Number} tx Component TX (index 4)\n * @param {Number} ty Component TY (index 5)\n * @returns {mat2d} out\n */\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n\n/**\n * Inverts a mat2d\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the source matrix\n * @returns {mat2d} out\n */\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n\n  var det = aa * ad - ab * ac;\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat2d\n *\n * @param {mat2d} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n\n/**\n * Multiplies two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n\n/**\n * Rotates a mat2d by the given angle\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Scales the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat2d} out\n **/\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n\n/**\n * Translates the mat2d by the dimensions in the given vec2\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to translate\n * @param {vec2} v the vec2 to translate the matrix by\n * @returns {mat2d} out\n **/\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.rotate(dest, dest, rad);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat2d} out\n */\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.scale(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Scaling vector\n * @returns {mat2d} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat2d.identity(dest);\n *     mat2d.translate(dest, dest, vec);\n *\n * @param {mat2d} out mat2d receiving operation result\n * @param {vec2} v Translation vector\n * @returns {mat2d} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n\n/**\n * Returns a string representation of a mat2d\n *\n * @param {mat2d} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat2d\n *\n * @param {mat2d} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\n}\n\n/**\n * Adds two mat2d's\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @returns {mat2d} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat2d} out the receiving matrix\n * @param {mat2d} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat2d} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n\n/**\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat2d} out the receiving vector\n * @param {mat2d} a the first operand\n * @param {mat2d} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat2d} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat2d} a The first matrix.\n * @param {mat2d} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n\n/**\n * Alias for {@link mat2d.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat2d.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sub = exports.mul = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.copy = copy;\nexports.fromValues = fromValues;\nexports.set = set;\nexports.identity = identity;\nexports.transpose = transpose;\nexports.invert = invert;\nexports.adjoint = adjoint;\nexports.determinant = determinant;\nexports.multiply = multiply;\nexports.translate = translate;\nexports.scale = scale;\nexports.rotate = rotate;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.fromTranslation = fromTranslation;\nexports.fromScaling = fromScaling;\nexports.fromRotation = fromRotation;\nexports.fromXRotation = fromXRotation;\nexports.fromYRotation = fromYRotation;\nexports.fromZRotation = fromZRotation;\nexports.fromRotationTranslation = fromRotationTranslation;\nexports.getTranslation = getTranslation;\nexports.getScaling = getScaling;\nexports.getRotation = getRotation;\nexports.fromRotationTranslationScale = fromRotationTranslationScale;\nexports.fromRotationTranslationScaleOrigin = fromRotationTranslationScaleOrigin;\nexports.fromQuat = fromQuat;\nexports.frustum = frustum;\nexports.perspective = perspective;\nexports.perspectiveFromFieldOfView = perspectiveFromFieldOfView;\nexports.ortho = ortho;\nexports.lookAt = lookAt;\nexports.targetTo = targetTo;\nexports.str = str;\nexports.frob = frob;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiplyScalar = multiplyScalar;\nexports.multiplyScalarAndAdd = multiplyScalarAndAdd;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 4x4 Matrix\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {mat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n  det = 1.0 / det;\n\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n}\n\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32;\n\n  // Calculate the determinant\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n  // Cache only the current line of the second matrix\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00 = void 0,\n      a01 = void 0,\n      a02 = void 0,\n      a03 = void 0;\n  var a10 = void 0,\n      a11 = void 0,\n      a12 = void 0,\n      a13 = void 0;\n  var a20 = void 0,\n      a21 = void 0,\n      a22 = void 0,\n      a23 = void 0;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\n\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s = void 0,\n      c = void 0,\n      t = void 0;\n  var a00 = void 0,\n      a01 = void 0,\n      a02 = void 0,\n      a03 = void 0;\n  var a10 = void 0,\n      a11 = void 0,\n      a12 = void 0,\n      a13 = void 0;\n  var a20 = void 0,\n      a21 = void 0,\n      a22 = void 0,\n      a23 = void 0;\n  var b00 = void 0,\n      b01 = void 0,\n      b02 = void 0;\n  var b10 = void 0,\n      b11 = void 0,\n      b12 = void 0;\n  var b20 = void 0,\n      b21 = void 0,\n      b22 = void 0;\n\n  if (Math.abs(len) < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\n\n  // Construct the elements of the rotation matrix\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  // Perform axis-specific matrix multiplication\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {vec3} v Scaling vector\n * @returns {mat4} out\n */\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.sqrt(x * x + y * y + z * z);\n  var s = void 0,\n      c = void 0,\n      t = void 0;\n\n  if (Math.abs(len) < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n\n  // Perform rotation-specific matrix multiplication\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n\n  // Perform axis-specific matrix multiplication\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n\n  return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\n\n  return out;\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nfunction getRotation(out, mat) {\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n  var trace = mat[0] + mat[5] + mat[10];\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (mat[6] - mat[9]) / S;\n    out[1] = (mat[8] - mat[2]) / S;\n    out[2] = (mat[1] - mat[4]) / S;\n  } else if (mat[0] > mat[5] & mat[0] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\n    out[3] = (mat[6] - mat[9]) / S;\n    out[0] = 0.25 * S;\n    out[1] = (mat[1] + mat[4]) / S;\n    out[2] = (mat[8] + mat[2]) / S;\n  } else if (mat[5] > mat[10]) {\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\n    out[3] = (mat[8] - mat[2]) / S;\n    out[0] = (mat[1] + mat[4]) / S;\n    out[1] = 0.25 * S;\n    out[2] = (mat[6] + mat[9]) / S;\n  } else {\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\n    out[3] = (mat[1] - mat[4]) / S;\n    out[0] = (mat[8] + mat[2]) / S;\n    out[1] = (mat[6] + mat[9]) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @param {vec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\n  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\n  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2);\n  var nf = 1 / (near - far);\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 2 * far * near * nf;\n  out[15] = 0;\n  return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n  var x0 = void 0,\n      x1 = void 0,\n      x2 = void 0,\n      y0 = void 0,\n      y1 = void 0,\n      y2 = void 0,\n      z0 = void 0,\n      z1 = void 0,\n      z2 = void 0,\n      len = void 0;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return mat4.identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n\n  return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n};\n\n/**\n * Returns a string representation of a mat4\n *\n * @param {mat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\nfunction str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {mat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\nfunction frob(a) {\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {mat4} a The first matrix.\n * @param {mat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setAxes = exports.sqlerp = exports.rotationTo = exports.equals = exports.exactEquals = exports.normalize = exports.sqrLen = exports.squaredLength = exports.len = exports.length = exports.lerp = exports.dot = exports.scale = exports.mul = exports.add = exports.set = exports.copy = exports.fromValues = exports.clone = undefined;\nexports.create = create;\nexports.identity = identity;\nexports.setAxisAngle = setAxisAngle;\nexports.getAxisAngle = getAxisAngle;\nexports.multiply = multiply;\nexports.rotateX = rotateX;\nexports.rotateY = rotateY;\nexports.rotateZ = rotateZ;\nexports.calculateW = calculateW;\nexports.slerp = slerp;\nexports.invert = invert;\nexports.conjugate = conjugate;\nexports.fromMat3 = fromMat3;\nexports.fromEuler = fromEuler;\nexports.str = str;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nvar _mat = __webpack_require__(1);\n\nvar mat3 = _interopRequireWildcard(_mat);\n\nvar _vec = __webpack_require__(2);\n\nvar vec3 = _interopRequireWildcard(_vec);\n\nvar _vec2 = __webpack_require__(3);\n\nvar vec4 = _interopRequireWildcard(_vec2);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {quat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n  if (s != 0.0) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n  return rad;\n}\n\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate W component of\n * @returns {quat} out\n */\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n\n  var omega = void 0,\n      cosom = void 0,\n      sinom = void 0,\n      scale0 = void 0,\n      scale1 = void 0;\n\n  // calc cosine\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\n  // adjust signs (if necessary)\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  }\n  // calculate coefficients\n  if (1.0 - cosom > 0.000001) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  }\n  // calculate final values\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n\n  return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0;\n\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot = void 0;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n\n  return out;\n}\n\n/**\n * Returns a string representation of a quatenion\n *\n * @param {quat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {quat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\nvar clone = exports.clone = vec4.clone;\n\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\nvar fromValues = exports.fromValues = vec4.fromValues;\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nvar copy = exports.copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nvar set = exports.set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nvar add = exports.add = vec4.add;\n\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nvar scale = exports.scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nvar dot = exports.dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nvar lerp = exports.lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nvar length = exports.length = vec4.length;\n\n/**\n * Alias for {@link quat.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Calculates the squared length of a quat\n *\n * @param {quat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\nvar squaredLength = exports.squaredLength = vec4.squaredLength;\n\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nvar normalize = exports.normalize = vec4.normalize;\n\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {quat} a The first quaternion.\n * @param {quat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvar exactEquals = exports.exactEquals = vec4.exactEquals;\n\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {quat} a The first vector.\n * @param {quat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nvar equals = exports.equals = vec4.equals;\n\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {vec3} a the initial vector\n * @param {vec3} b the destination vector\n * @returns {quat} out\n */\nvar rotationTo = exports.rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {quat} c the third operand\n * @param {quat} d the fourth operand\n * @param {Number} t interpolation amount\n * @returns {quat} out\n */\nvar sqlerp = exports.sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n\n    return out;\n  };\n}();\n\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {vec3} view  the vector representing the viewing direction\n * @param {vec3} right the vector representing the local \"right\" direction\n * @param {vec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\nvar setAxes = exports.setAxes = function () {\n  var matr = mat3.create();\n\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.forEach = exports.sqrLen = exports.sqrDist = exports.dist = exports.div = exports.mul = exports.sub = exports.len = undefined;\nexports.create = create;\nexports.clone = clone;\nexports.fromValues = fromValues;\nexports.copy = copy;\nexports.set = set;\nexports.add = add;\nexports.subtract = subtract;\nexports.multiply = multiply;\nexports.divide = divide;\nexports.ceil = ceil;\nexports.floor = floor;\nexports.min = min;\nexports.max = max;\nexports.round = round;\nexports.scale = scale;\nexports.scaleAndAdd = scaleAndAdd;\nexports.distance = distance;\nexports.squaredDistance = squaredDistance;\nexports.length = length;\nexports.squaredLength = squaredLength;\nexports.negate = negate;\nexports.inverse = inverse;\nexports.normalize = normalize;\nexports.dot = dot;\nexports.cross = cross;\nexports.lerp = lerp;\nexports.random = random;\nexports.transformMat2 = transformMat2;\nexports.transformMat2d = transformMat2d;\nexports.transformMat3 = transformMat3;\nexports.transformMat4 = transformMat4;\nexports.str = str;\nexports.exactEquals = exactEquals;\nexports.equals = equals;\n\nvar _common = __webpack_require__(0);\n\nvar glMatrix = _interopRequireWildcard(_common);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nfunction create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = 0;\n  out[1] = 0;\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE. */\n\nfunction clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nfunction fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n};\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n};\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n};\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n};\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n};\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n};\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n};\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n};\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n};\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.sqrt(x * x + y * y);\n};\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n};\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.sqrt(x * x + y * y);\n};\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n};\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n};\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n};\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n};\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n};\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n};\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n};\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n};\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nfunction str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nvar len = exports.len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nvar sub = exports.sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nvar mul = exports.mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nvar div = exports.div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nvar dist = exports.dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nvar sqrDist = exports.sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nvar sqrLen = exports.sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nvar forEach = exports.forEach = function () {\n  var vec = create();\n\n  return function (a, stride, offset, count, fn, arg) {\n    var i = void 0,\n        l = void 0;\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\n/***/ })\n/******/ ]);\n});","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./mesh.scss?vue&type=style&index=0&id=83b4749c&lang=scss&scoped=true&\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./mesh.scss?vue&type=style&index=0&id=83b4749c&lang=scss&scoped=true&\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./mesh.scss?vue&type=style&index=0&id=83b4749c&lang=scss&scoped=true&\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","'use strict';\n\nmodule.exports = TinySDF;\n\nvar INF = 1e20;\n\nfunction TinySDF(fontSize, buffer, radius, cutoff, fontFamily) {\n    this.fontSize = fontSize || 24;\n    this.buffer = buffer === undefined ? 3 : buffer;\n    this.cutoff = cutoff || 0.25;\n    this.fontFamily = fontFamily || 'sans-serif';\n    this.radius = radius || 8;\n    var size = this.size = this.fontSize + this.buffer * 2;\n\n    this.canvas = document.createElement('canvas');\n    this.canvas.width = this.canvas.height = size;\n\n    this.ctx = this.canvas.getContext('2d');\n    this.ctx.font = fontSize + 'px ' + this.fontFamily;\n    this.ctx.textBaseline = 'middle';\n    this.ctx.fillStyle = 'black';\n\n    // temporary arrays for the distance transform\n    this.gridOuter = new Float64Array(size * size);\n    this.gridInner = new Float64Array(size * size);\n    this.f = new Float64Array(size);\n    this.d = new Float64Array(size);\n    this.z = new Float64Array(size + 1);\n    this.v = new Int16Array(size);\n\n    // hack around https://bugzilla.mozilla.org/show_bug.cgi?id=737852\n    this.middle = Math.round((size / 2) * (navigator.userAgent.indexOf('Gecko/') >= 0 ? 1.2 : 1));\n}\n\nTinySDF.prototype.draw = function (char) {\n    this.ctx.clearRect(0, 0, this.size, this.size);\n    this.ctx.fillText(char, this.buffer, this.middle);\n\n    var imgData = this.ctx.getImageData(0, 0, this.size, this.size);\n    var data = imgData.data;\n\n    for (var i = 0; i < this.size * this.size; i++) {\n        var a = data[i * 4 + 3] / 255; // alpha value\n        this.gridOuter[i] = a === 1 ? 0 : a === 0 ? INF : Math.pow(Math.max(0, 0.5 - a), 2);\n        this.gridInner[i] = a === 1 ? INF : a === 0 ? 0 : Math.pow(Math.max(0, a - 0.5), 2);\n    }\n\n    edt(this.gridOuter, this.size, this.size, this.f, this.d, this.v, this.z);\n    edt(this.gridInner, this.size, this.size, this.f, this.d, this.v, this.z);\n\n    for (i = 0; i < this.size * this.size; i++) {\n        var d = this.gridOuter[i] - this.gridInner[i];\n        var c = Math.max(0, Math.min(255, Math.round(255 - 255 * (d / this.radius + this.cutoff))));\n        data[4 * i + 0] = c;\n        data[4 * i + 1] = c;\n        data[4 * i + 2] = c;\n        data[4 * i + 3] = 255;\n    }\n\n    return imgData;\n};\n\n// 2D Euclidean distance transform by Felzenszwalb & Huttenlocher https://cs.brown.edu/~pff/dt/\nfunction edt(data, width, height, f, d, v, z) {\n    for (var x = 0; x < width; x++) {\n        for (var y = 0; y < height; y++) {\n            f[y] = data[y * width + x];\n        }\n        edt1d(f, d, v, z, height);\n        for (y = 0; y < height; y++) {\n            data[y * width + x] = d[y];\n        }\n    }\n    for (y = 0; y < height; y++) {\n        for (x = 0; x < width; x++) {\n            f[x] = data[y * width + x];\n        }\n        edt1d(f, d, v, z, width);\n        for (x = 0; x < width; x++) {\n            data[y * width + x] = Math.sqrt(d[x]);\n        }\n    }\n}\n\n// 1D squared distance transform\nfunction edt1d(f, d, v, z, n) {\n    v[0] = 0;\n    z[0] = -INF;\n    z[1] = +INF;\n\n    for (var q = 1, k = 0; q < n; q++) {\n        var s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\n        while (s <= z[k]) {\n            k--;\n            s = ((f[q] + q * q) - (f[v[k]] + v[k] * v[k])) / (2 * q - 2 * v[k]);\n        }\n        k++;\n        v[k] = q;\n        z[k] = s;\n        z[k + 1] = +INF;\n    }\n\n    for (q = 0, k = 0; q < n; q++) {\n        while (z[k + 1] < q) k++;\n        d[q] = (q - v[k]) * (q - v[k]) + f[v[k]];\n    }\n}\n","\n\n\n\n\n\n// @ts-ignore\nimport App from \"./mesh.ts\";\nexport default App;\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"canvas\",\n    { attrs: { id: \"canvas\", height: \"400\", width: \"400\" } },\n    [_vm._v(\"你的浏览器不支持WebGL，请更换新的浏览器\")]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","/**\n * eventBus\n */\nexport class EventDispatcher {\n  private eventList = {}; // 事件列表\n\n  constructor() {}\n\n  /**\n   * 派发事件\n   * @param type 事件类型\n   * @param args 事件参数\n   */\n  public dispatchEvent(type: string, ...args: any[]): void {\n    let arr: Array<any> = this.eventList[type];\n    if (arr) {\n      arr.forEach(element => {\n        element[0].apply(element[1], args);\n        // listener.call(thisObject, args);\n      });\n    }\n  }\n\n  /**\n   * 监听事件\n   * @param type       事件类型\n   * @param listener   回调函数\n   * @param thisObject 回调执行对象\n   */\n  public addEventListener(\n    type: string,\n    listener: Function,\n    thisObject: any\n  ): void {\n    let arr: Array<any> = this.eventList[type];\n    if (!arr) {\n      arr = [];\n      this.eventList[type] = arr;\n    }\n    // else\n    // {\n    //     arr.forEach(element =>\n    //     {\n    //         if(element[0] == listener && element[1] == thisObject)\n    //         {\n    //             return;\n    //         }\n    //     });\n    // }\n    arr.push([listener, thisObject]);\n  }\n\n  /**\n   * 移除事件\n   * @param type       事件类型\n   * @param listener   回调函数\n   * @param thisObject 回调执行对象\n   */\n  public removeEventListener(\n    type: string,\n    listener: Function,\n    thisObject: any\n  ): void {\n    let arr: Array<any> = this.eventList[type];\n    if (arr) {\n      let len = arr.length;\n      for (let i = len - 1; i >= 0; i--) {\n        if (arr[i][0] === listener && arr[i][1] === thisObject) {\n          arr.splice(i, 1);\n        }\n      }\n    }\n    if (arr && arr.length === 0) {\n      this.eventList[type] = null;\n      delete this.eventList[type];\n    }\n  }\n}\n","import * as glMatrix from '../../lib/gl-matrix.js';\nconst vec2 = glMatrix.vec2;\n\nexport enum PrimitiveMode {\n  TRIANGLE_STRIP = 5,\n  TRIANGLE_FAN = 6\n}\n\nexport interface MeshConfig {\n  currVertexes: number[];\n  prevVertexes: number[];\n  nextVertexes: number[];\n  currOffsetRatios: number[];\n  prevOffsetRatios: number[];\n  nextOffsetRatios: number[];\n  edgeOffsetRatios: number[];\n  indeces: number[];\n  uvs: number[];\n  primitiveMode: PrimitiveMode;\n}\n\nexport class Mesh {\n  private _vertexes: number[];\n  private _offsetRatios: number[];\n  private _uv: number[];\n  private _indeces: number[];\n  private _primitiveMode: PrimitiveMode;\n  /**\n   * 模型构造函数\n   * @param vertexes 顶点坐标\n   * @param borderVertexes 边框顶点坐标\n   * @param uv 材质UV\n   */\n  constructor(\n    mode: PrimitiveMode,\n    vertexes: number[],\n    offsetRatios: number[],\n    uv: number[],\n    indeces: number[]\n  ) {\n    this._vertexes = vertexes;\n    this._offsetRatios = offsetRatios;\n    this._uv = uv;\n    this._indeces = indeces;\n    this._primitiveMode = mode;\n  }\n\n  private get currVertexes(): number[] {\n    return this._vertexes;\n  }\n\n  private get prevVertexes(): number[] {\n    let vs = this._vertexes;\n    return vs.slice(-2).concat(vs.slice(0, vs.length - 2));\n  }\n\n  private get nextVertexes(): number[] {\n    let vs = this._vertexes;\n    return vs.slice(2).concat(vs.slice(0, 2));\n  }\n\n  private get currOffsetRatios(): number[] {\n    return this._offsetRatios;\n  }\n\n  private get prevOffsetRatios(): number[] {\n    let vs = this._offsetRatios;\n    return vs.slice(-2).concat(vs.slice(0, vs.length - 2));\n  }\n\n  private get nextOffsetRatios(): number[] {\n    let vs = this._offsetRatios;\n    return vs.slice(2).concat(vs.slice(0, 2));\n  }\n\n  public get originMeshConfig(): MeshConfig {\n    let edgeOffsetRatios = new Array(this._vertexes.length);\n    edgeOffsetRatios.fill(0);\n    return {\n      currVertexes: this.currVertexes,\n      prevVertexes: this.prevVertexes,\n      nextVertexes: this.nextVertexes,\n      currOffsetRatios: this.currOffsetRatios,\n      prevOffsetRatios: this.prevOffsetRatios,\n      nextOffsetRatios: this.nextOffsetRatios,\n      edgeOffsetRatios: edgeOffsetRatios,\n      indeces: this._indeces,\n      uvs: this._uv,\n      primitiveMode: this._primitiveMode\n    };\n  }\n\n  public get borderMeshConfig(): MeshConfig {\n    let len = this.currVertexes.length;\n    let cvs = this.currVertexes,\n      pvs = this.prevVertexes,\n      nvs = this.nextVertexes,\n      cvo = this.currOffsetRatios,\n      pvo = this.prevOffsetRatios,\n      nvo = this.nextOffsetRatios,\n      uvs = new Array(len * 2),\n      indeces = new Array();\n\n    uvs.fill(0);\n\n    let arr1 = new Array(len / 2);\n    arr1.fill(0);\n    let arr2 = new Array(len / 2);\n    arr2.fill(1);\n    let ero = arr1.concat(arr2);\n\n    len /= 2;\n\n    for (let i = 0; i < len; i++) {\n      indeces[i * 2] = i;\n      indeces[i * 2 + 1] = len + i;\n    }\n    indeces.push(indeces[0], indeces[1]);\n\n    // 双倍顶点\n    cvs = cvs.concat(cvs);\n    pvs = pvs.concat(pvs);\n    nvs = nvs.concat(nvs);\n    cvo = cvo.concat(cvo);\n    pvo = pvo.concat(pvo);\n    nvo = nvo.concat(nvo);\n\n    return {\n      currVertexes: cvs,\n      prevVertexes: pvs,\n      nextVertexes: nvs,\n      currOffsetRatios: cvo,\n      prevOffsetRatios: pvo,\n      nextOffsetRatios: nvo,\n      edgeOffsetRatios: ero,\n      indeces: indeces,\n      uvs: uvs,\n      primitiveMode: PrimitiveMode.TRIANGLE_STRIP\n    };\n  }\n}\n\nexport class RectMesh extends Mesh {\n  constructor(originX: number = 0, originY: number = 0) {\n    const vertexes = [0, 0, 0, 0, 0, 0, 0, 0];\n    let offsetRatio = [-0.5, 0.5, -0.5, -0.5, 0.5, -0.5, 0.5, 0.5];\n    const uv = [0, 1, 0, 0, 1, 0, 1, 1];\n    const indeces = [0, 1, 3, 2];\n\n    offsetRatio = offsetRatio.map((v, k) => {\n      if (k % 2 === 0) {\n        return v - originX;\n      } else {\n        return v - originY;\n      }\n    });\n\n    super(PrimitiveMode.TRIANGLE_STRIP, vertexes, offsetRatio, uv, indeces);\n  }\n}\n\nexport class OneWayArrowMesh extends Mesh {\n  constructor(width: number = 20, height: number = 20) {\n    const vertexes = [\n      -0.2,\n      0,\n      0.2,\n      0,\n      0.2,\n      0,\n      0.5,\n      0,\n      0,\n      1,\n      -0.5,\n      0,\n      -0.2,\n      0\n    ].map((v, k) => {\n      if (k % 2 === 0) {\n        return v * width;\n      } else {\n        return v * height;\n      }\n    });\n\n    const offsetRatio = [0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1];\n    const uv = new Array<number>(vertexes.length);\n    const indeces = [0, 1, 6, 2, 5, 3, 4];\n    super(PrimitiveMode.TRIANGLE_STRIP, vertexes, offsetRatio, uv, indeces);\n  }\n}\n\nexport class TwoWayArrowMesh extends Mesh {\n  constructor(width: number = 20, height: number = 20) {\n    const vertexes = [\n      0,\n      0,\n      0.5,\n      1,\n      0.2,\n      1,\n      0.2,\n      1,\n      0.5,\n      1,\n      0,\n      2,\n      -0.5,\n      1,\n      -0.2,\n      1,\n      -0.2,\n      1,\n      -0.5,\n      1\n    ].map((v, k) => {\n      if (k % 2 === 0) {\n        return v * width;\n      } else {\n        return v * height;\n      }\n    });\n\n    const offsetRatio = [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      1,\n      0,\n      1,\n      0,\n      1,\n      0,\n      1,\n      0,\n      1,\n      0,\n      0,\n      0,\n      0\n    ];\n    const uv = new Array<number>(vertexes.length);\n    const indeces = [0, 1, 9, 2, 8, 3, 7, 4, 6, 5];\n    super(PrimitiveMode.TRIANGLE_STRIP, vertexes, offsetRatio, uv, indeces);\n  }\n}\n\n// export class BorderMesh extends Mesh {\n// \tconstructor(originMesh: Mesh) {\n// \t\tlet btransforms = createBorderTransformVector(originMesh.vertexes);\n// \t\tlet vertexes;\n// \t\tlet transforms;\n// \t\tlet uv;\n// \t\tlet indeces;\n// \t\tconst len = originMesh.vertexes.length / 2;\n\n// \t\tvertexes = originMesh.vertexes.slice();\n\n// \t\ttransforms = new Array(vertexes.length);\n// \t\ttransforms.fill(0);\n\n// \t\tuv = new Array(vertexes.length);\n// \t\tuv.fill(0);\n\n// \t\tindeces = [];\n\n// \t\tfor(let i = 0; i < len; i ++) {\n// \t\t\tvertexes.push(vertexes[i*2], vertexes[i*2+1]);\n// \t\t\ttransforms.push(btransforms[i*2], btransforms[i*2+1]);\n// \t\t\tuv.push(0,0);\n// \t\t\tindeces.push(i, len + i);\n// \t\t}\n\n// \t\t// 闭合\n// \t\tindeces.push(0, 1);\n\n// \t\tsuper(PrimitiveMode.TRIANGLE_STRIP, vertexes, transforms, uv, indeces);\n// \t}\n// }\n\n// function createBorderTransformVector(verteies: number[]): number[] {\n// \tconst len = verteies.length;\n// \tconst vs = verteies;\n// \tif(len % 2 != 0 && len < 2*3) return;\n// \tlet transforms = [];\n\n// \tfor (let i = 0; i < len; i += 2) {\n// \t\tlet curr = i,\n// \t\t\tprev = 0,\n// \t\t\tnext = 0;\n\n// \t\tif(i == 0) {\n// \t\t\tprev = len - 2;\n// \t\t\tnext = i + 2;\n// \t\t} else if (i == len - 2) {\n// \t\t\tprev = i - 2;\n// \t\t\tnext = 0;\n// \t\t} else {\n// \t\t\tprev = i - 2;\n// \t\t\tnext = i + 2;\n// \t\t}\n\n// \t\tlet cp = vec2.fromValues(vs[curr], vs[curr+1]),\n// \t\t\tpp = vec2.fromValues(vs[prev], vs[prev+1]),\n// \t\t\tnp = vec2.fromValues(vs[next], vs[next+1]);\n\n// \t\tlet v = getVertexVec(pp, cp, np);\n// \t\ttransforms.push(v[0], v[1]);\n// \t}\n// \treturn transforms;\n// }\n// function getVertexVec(prevP, currP, nextP) {\n// \tlet v1 = getBorderVercitalVec(prevP, currP),\n// \t\tv2 = getBorderVercitalVec(currP, nextP);\n\n// \tlet p1 = vec2.create(),\n// \t\tp2 = vec2.create(),\n// \t\tp3 = vec2.create(),\n// \t\tp4 = vec2.create();\n\n// \tvec2.add(p1, prevP, v1);\n// \tvec2.add(p2, currP, v1);\n// \tvec2.add(p3, currP, v2);\n// \tvec2.add(p4, nextP, v2);\n\n// \tlet A1 = p2[1] - p1[1],\n// \t\tB1 = p2[0] - p1[0],\n// \t\tC1 = p2[0] * p1[1] - p2[1] * p1[0],\n// \t\tA2 = p4[1] - p3[1],\n// \t\tB2 = p4[0] - p3[0],\n// \t\tC2 = p4[0] * p3[1] - p4[1] * p3[0];\n\n// \tlet D = A1 * B2 - A2 * B1;\n\n// \tlet v = vec2.fromValues((B1 * C2 - B2 * C1)/D, -(C1 * A2 - C2 * A1)/D);\n// \treturn vec2.subtract(v, v, currP);\n// }\n\n// // 获取边得垂直向量\n// function getBorderVercitalVec(p1, p2): Float32Array {\n// \tlet v = vec2.create();\n// \tvec2.sub(v, p2, p1);\n// \tlet a = vec2.angle(vec2.fromValues(1,0), v);\n\n// \t// angleTo 对角度的正负不敏感\n// \tif(v[1] < 0) {\n// \t\ta = - a;\n// \t}\n\n// \t// 求边的垂直向量\n// \ta -= Math.PI/2;\n\n// \tlet x = Math.cos(a),\n// \t\ty = Math.sin(a);\n\n// \tif(Math.abs(x) <= 10e-5) {\n// \t\tx = 0;\n// \t}\n// \tif(Math.abs(y) <= 10e-5) {\n// \t\ty = 0;\n// \t}\n// \treturn vec2.fromValues(x, y);\n// }\n\n// export class MeshUnit {\n// \tvertexes: number[];\n// \tprimitiveMode: PrimitiveMode;\n// \tconstructor(v: number[], mode: PrimitiveMode) {\n// \t\tthis.vertexes = v;\n// \t\tthis.primitiveMode = mode;\n// \t}\n// }\n\n// export class MeshFactroy {\n// \tpublic static createRectMesh() {\n// \t\tconst varr = [\n// \t\t\t// x, y, dynamicX, dynamicY,\n// \t\t\t0,\t0,\t-0.5,\t 0.5,\n// \t\t\t0,\t0,\t-0.5,\t-0.5,\n// \t\t\t0,\t0,\t 0.5,\t 0.5,\n// \t\t\t0,\t0,\t 0.5,\t-0.5,\n// \t\t];\n\n// \t\tconst uv = [\n// \t\t\t0,\t1,\n// \t\t\t0,\t0,\n// \t\t\t1,\t1,\n// \t\t\t1,\t0,\n// \t\t];\n\n// \t\tconst bArr = [\n// \t\t\t// x, y, dynamicX, dynamicY,\n// \t\t\t0, \t0,\t-0.5,\t 0.5,\n// \t\t\t0,\t0,\t 0.5,\t 0.5,\n// \t\t\t0,\t0,\t 0.5,\t-0.5,\n// \t\t\t0,\t0,\t-0.5,\t-0.5,\n// \t\t];\n// \t\treturn new Mesh(PrimitiveMode.TRIANGLE_STRIP ,varr, bArr, uv);\n// \t}\n\n// \tpublic static createArrowMesh() {\n// \t\tconst varr = [\n// \t\t\t 0,\t15, 0, 0,\n// \t\t\t-8, 0, 0, 0,\n// \t\t\t-3, 0, 0, 0,\n// \t\t\t-3, 0, 0, -1,\n// \t\t\t 3, 0, 0, -1,\n// \t\t\t 3, 0, 0, 0,\n// \t\t\t 8, 0, 0, 0,\n// \t\t];\n\n// \t\tconst uv = [\n// \t\t\t0, 0,\n// \t\t\t0, 0,\n// \t\t\t0, 0,\n// \t\t\t0, 0,\n// \t\t\t0, 0,\n// \t\t\t0, 0,\n// \t\t\t0, 0,\n// \t\t];\n\n// \t\tconst bArr = varr;\n\n// \t\treturn new Mesh(PrimitiveMode.TRIANGLE_FAN, varr, bArr, uv);\n// \t}\n\n// \tpublic static createTestMesh() {\n// \t\tconst varr = [\n\n// \t\t];\n// \t}\n// }\n\n// private createBorderVertex(verteies: number[]) {\n// \tlet len = verteies.length;\n// \tif(len % 4 != 0 && len < 4*3) return;\n// \tlet vlist = [];\n\n// \tfor (let i = 0; i < len; i += 4) {\n\n// \t\tlet curr = i,\n// \t\t\tprev = 0,\n// \t\t\tnext = 0;\n\n// \t\tif(i == 0) {\n// \t\t\tprev = len - 4;\n// \t\t\tnext = i + 4;\n// \t\t} else if (i == len - 4) {\n// \t\t\tprev = i - 4;\n// \t\t\tnext = 0;\n// \t\t} else {\n// \t\t\tprev = i - 4;\n// \t\t\tnext = i + 4;\n// \t\t}\n\n// \t\tlet currP = new Vector(verteies[curr], verteies[curr+1]),\n// \t\t\tprevP = new Vector(verteies[prev], verteies[prev+1]),\n// \t\t\tnextP = new Vector(verteies[next], verteies[next+1]);\n\n// \t\tlet v = this.getVertexVec(prevP, currP, nextP);\n// \t\tvlist.push(verteies[i], verteies[i+1], verteies[i+2], verteies[i+3], v.x, v.y);\n// \t\tvlist.push(0,0);\n// \t\tvlist.push(verteies[i], verteies[i+1], verteies[i+2], verteies[i+3], 0, 0);\n// \t\tvlist.push(0,0);\n// \t}\n// \t//闭合\n// \tvlist.push.apply(vlist, vlist.slice(0, 16));\n\n// \treturn vlist;\n// }\n\n// // \t获取顶点的偏倚矢量\n// private getVertexVec(prevP, currP, nextP) {\n// \tlet v1 = this.getBorderVercitalVec(prevP, currP),\n// \t\tv2 = this.getBorderVercitalVec(currP, nextP);\n\n// \tlet p1 = prevP.add(v1),\n// \t\tp2 = currP.add(v1),\n// \t\tp3 = currP.add(v2),\n// \t\tp4 = nextP.add(v2);\n\n// \tlet A1 = p2.y - p1.y,\n// \t\tB1 = p2.x - p1.x,\n// \t\tC1 = p2.x * p1.y - p2.y * p1.x,\n// \t\tA2 = p4.y - p3.y,\n// \t\tB2 = p4.x - p3.x,\n// \t\tC2 = p4.x * p3.y - p4.y * p3.x;\n\n// \tlet D = A1 * B2 - A2 * B1;\n\n// \tlet v = new Vector((B1 * C2 - B2 * C1)/D, -(C1 * A2 - C2 * A1)/D);\n// \treturn v.subtract(currP);\n// }\n\n// // 获取边得垂直向量\n// private getBorderVercitalVec(p1, p2) {\n// \tlet v = p2.subtract(p1);\n// \tlet a = v.angleTo(new Vector(1,0));\n\n// \t// angleTo 对角度的正负不敏感\n// \tif(v.y < 0) {\n// \t\ta = - a;\n// \t}\n\n// \t// 求边的垂直向量\n// \ta -= Math.PI/2;\n\n// \tlet x = Math.cos(a),\n// \t\ty = Math.sin(a);\n\n// \tif(Math.abs(x) <= 10e-5) {\n// \t\tx = 0;\n// \t}\n// \tif(Math.abs(y) <= 10e-5) {\n// \t\ty = 0;\n// \t}\n// \treturn new Vector(x, y);\n// }\n","import * as glMatrix from '../../lib/gl-matrix';\n\nimport {Viewport} from '../viewport';\nimport {vsSource} from './source/vsSource';\nimport {fsSource} from './source/fsSource';\nimport {loadShader} from './shader';\nimport {createProgram} from './program';\nimport {PaintUnitInterface} from '../interface/unit';\nimport {DisplayStatus} from '../enum/unit';\nimport {Searcher} from '../search/searcher';\nimport {TextureFactroy} from '../render/texture';\n\nglMatrix.glMatrix.setMatrixArrayType(Float32Array);\n\nexport class Rainbow {\n  private _gl: WebGL2RenderingContext;\n  private _prg!: WebGLProgram;\n  private _searcher;\n  private _tf: TextureFactroy;\n  private _vp: Viewport;\n  private _unitList: PaintUnitInterface[][];\n  private _vpScaleLocal;\n  private _vpTranslationLocal;\n  private _vecLocal;\n  private _vpRotationLocal;\n  private _sizeRatio = 1;\n  public isDebug: boolean = true;\n  public canRending: boolean = true;\n\n  constructor(canvas: HTMLCanvasElement) {\n    // 支持性略差,https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext\n    this._gl = canvas.getContext('webgl2', {\n      alpha: false,\n      premultiplyAlpha: false, // 关闭al\n      antialias: true\n    }) as WebGL2RenderingContext;\n    if (!this._gl) {\n      throw Error(`当前环境不支持WebGL2渲染，请联系开发人员`);\n    }\n    this._unitList = [];\n    this._searcher = new Searcher();\n    this._tf = new TextureFactroy(this._gl);\n    this._vp = new Viewport(this);\n    this._init();\n    window['__unitList'] = this._unitList;\n  }\n\n  public get gl() {\n    return this._gl;\n  }\n  public get prg() {\n    return this._prg;\n  }\n  public get searcher(): Searcher {\n    return this._searcher;\n  }\n  public get textureFactroy(): TextureFactroy {\n    return this._tf;\n  }\n  public get viewport(): Viewport {\n    return this._vp;\n  }\n\n  public set sizeRatio(ratio: number) {\n    this._sizeRatio = ratio;\n    this._vp.vpScaleIsModified = true;\n  }\n\n  public get sizeRatio(): number {\n    return this._sizeRatio;\n  }\n  /**\n   * 初始化program shader\n   */\n  private _init() {\n    let gl = this._gl;\n    const vxShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n    const fgShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n\n    this._prg = createProgram(gl, vxShader, fgShader) as WebGLProgram;\n\n    gl.useProgram(this._prg);\n    // 打开透明度混合\n    gl.enable(gl.BLEND);\n    gl.blendFuncSeparate(\n      gl.SRC_ALPHA,\n      gl.ONE_MINUS_SRC_ALPHA,\n      gl.ONE,\n      gl.ONE_MINUS_DST_COLOR\n    );\n    // gl.enable(gl.DEPTH_TEST);\n\n    this._vpScaleLocal = gl.getUniformLocation(this._prg, 'uViewportScale');\n    this._vpTranslationLocal = gl.getUniformLocation(\n      this._prg,\n      'uViewportTranslation'\n    );\n    this._vpRotationLocal = gl.getUniformLocation(\n      this._prg,\n      'uViewportRotation'\n    );\n    this._vecLocal = gl.getUniformLocation(this._prg, 'uConversionVec2');\n  }\n\n  /**\n   * 渲染\n   * todo：脏检查实现\n   */\n  public render() {\n    if (!this.canRending) return;\n    this.draw();\n    window.requestAnimationFrame(() => this.render());\n  }\n\n  private _updateViewport(): boolean {\n    const gl = this.gl;\n    let result = false;\n    if (this._vp.vpScaleIsModified) {\n      gl.uniform2fv(\n        this._vpScaleLocal,\n        this._vp.vpScaleVec2.map(s => s * this._sizeRatio)\n      );\n      this._vp.vpScaleIsModified = false;\n      result = true;\n    }\n\n    if (this._vp.vpTranslationIsModified) {\n      gl.uniform2fv(this._vpTranslationLocal, this._vp.vpTranslationVec2);\n      this._vp.vpTranslationIsModified = false;\n      result = true;\n    }\n\n    if (this._vp.vpRotationIsModified) {\n      gl.uniform1f(this._vpRotationLocal, this._vp.vpRotation);\n      this._vp.vpRotationIsModified = false;\n      result = true;\n    }\n\n    return result;\n  }\n\n  // 更新坐标变换矢量\n  private _updateConversionVec(): boolean {\n    if (this._vp.cvMatIsModified) {\n      const gl = this.gl;\n      gl.uniform2fv(this._vecLocal, this._vp.cvec2);\n      this._vp.cvMatIsModified = false;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * 绘制\n   * @param indexlist 需要绘制的层级\n   * @param isForce 是否强制绘制，否则如果数据无变化就不绘制\n   */\n  public draw(indexlist: number[] = [], isForce: boolean = false) {\n    const gl = this.gl;\n    const r1 = this._updateViewport();\n    const r2 = this._updateConversionVec();\n    let r3 = false;\n\n    let ul: PaintUnitInterface[][] = [];\n    const unitlist = this._unitList;\n    if (indexlist && indexlist.length > 0) {\n      ul = indexlist.map(i => unitlist[i]);\n    } else {\n      ul = unitlist;\n    }\n\n    ul.forEach(units => {\n      units.forEach(unit => {\n        if (unit.updateToGL()) {\n          r3 = true;\n        }\n      });\n    });\n\n    if (isForce || r1 || r2 || r3) {\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n      ul.forEach(units => {\n        units\n          .filter(u => u.display === DisplayStatus.DISPLAY)\n          .forEach(u => {\n            u.updateUniform();\n            u.draw();\n          });\n      });\n    }\n  }\n\n  public registVAO(unit: PaintUnitInterface, index: number = 0) {\n    if (!this._unitList[index]) {\n      this._unitList[index] = [];\n    }\n    this._unitList[index].push(unit);\n    return unit;\n  }\n\n  public unRegistVAO(unit: PaintUnitInterface, index: number = 0) {\n    if (index >= this._unitList.length) return;\n    const idx = this._unitList[index].indexOf(unit);\n    if (idx < 0) return;\n    this._unitList[index].splice(idx, 1);\n  }\n}\n","/**\n * 创建program\n * @param gl GL context\n * @param vshader a vertex shader program (string)\n * @param fshader a fragment shader program (string)\n * @return created program object, or null if the creation has failed\n */\n\nexport function createProgram(gl, vertexShader, fragmentShader) {\n  // 创建程序对象\n\n  let program = gl.createProgram();\n  if (!program) {\n    return null;\n  }\n\n  // 为程序对象分配顶点着色器和片元着色器\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  // 连接着色器\n  gl.linkProgram(program);\n\n  // 检查连接\n  let linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n  if (!linked) {\n    let error = gl.getProgramInfoLog(program);\n    console.error('无法连接程序对象: ' + error);\n    gl.deleteProgram(program);\n    gl.deleteShader(fragmentShader);\n    gl.deleteShader(vertexShader);\n    return null;\n  }\n  return program;\n}\n","/**\n * 创建着色器对象\n * loadShader()函数首先创建了一个着色器对象，然后为改着色器对象指定源代码，并进行编译，接着检查编译是否成功，如果编译成功，没有出错，就返回着色器对象。\n * @param gl GL context\n * @param type the type of the shader object to be created\n * @param source shader program (string)\n * @return created shader object, or null if the creation has failed.\n */\nexport function loadShader(gl, type, source) {\n  // 创建着色器对象\n  let shader = gl.createShader(type);\n  if (shader == null) {\n    console.error('无法创建着色器');\n    return null;\n  }\n\n  // 设置着色器源代码\n  gl.shaderSource(shader, source);\n\n  // 编译着色器\n  gl.compileShader(shader);\n\n  // 检查着色器的编译状态\n  let compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  if (!compiled) {\n    let error = gl.getShaderInfoLog(shader);\n    console.error('Failed to compile shader: ' + error);\n    gl.deleteShader(shader);\n    return null;\n  }\n\n  return shader;\n}\n","export const fsSource = `#version 300 es\n\tprecision mediump float;\n\tuniform sampler2D uSampler;\n\t// uniform vec2 uConversionVec2;\t//坐标转换\n\tin vec2 vTexCoord;\n\tin vec4 vBgColor;\n\tin float vIsText;\n\tin float vTextBorderWidth;\n\tin vec4 vTextBorderColor;\n\tin float vHasTexture;\n\tin vec4 vPos;\n\tin float vNotBorder;\n\tin float vBorderDashed;\n\tin float vOpacity;\n\tin float vDisplay;\n\tout vec4 fragColor;\n\n\tfloat inBorderDashed() {\n\n\t\t// 是否绘制虚线\n\t\tfloat hasDashed = 1.0 - step(vBorderDashed, 0.0);\n\n\t\tvec2 fw = fwidth(vPos.xy);\n\t\tfloat k = fw.y * (1.0/fw.x);\n\n\t\t// 如果k在 0.95 和 1.05 之间\n\t\tfloat c1 = step(0.95, k) * step(k, 1.05);\n\t\t// 如果 c1 == 0.1 则 c2 = 0.0 否则 c2 = 1.0\n\t\tfloat c2 = 1.0 - c1;\n\t\t// 如果 c1 条件成立 则 gl_FragCoord.x 否则 ...\n\t\tfloat d = gl_FragCoord.x * c1 + (step(1.0, k) * gl_FragCoord.y + step(k, 1.0) * gl_FragCoord.x) * c2;\n\n\t\treturn step(mod(floor( d * (1.0/vBorderDashed) ), 2.0), 0.0) * hasDashed;\n\t}\n\n\tvec4 drawText(vec4 texture) {\n\t\t// 文字边框是否大于0\n\t\tfloat c1 = step(0.1, vTextBorderWidth);\n\t\t// 文字边框是否小于等于0\n\t\tfloat c2 = 1.0 - c1;\n\n\t\t// 第一个插值阶梯\n\t\tfloat start = max(0.0, 0.5 - vTextBorderWidth * 0.1);\n\t\t// 边框插值系数\n\t\tfloat r1 = smoothstep(start, start + 0.2, texture.r) * c1;\n\t\t// 文字插值系数\n\t\tfloat r2 = smoothstep(0.5, 0.85, texture.r);\n\n\t\treturn vec4(mix(vTextBorderColor.rgb, vBgColor.rgb, r2), r2+(1.0-r2)*r1);\n\t}\n\n\tvec4 drawNormal(vec4 texture, vec4 bgColor) {\n\t\tfloat a1 = texture.a * vHasTexture;\n\t\tfloat a2 = bgColor.a;\n\t\treturn vec4(mix(bgColor.rgb, texture.rgb, a1), a1+(1.0-a1)*a2);\n\t}\n\n\tvoid main(void) {\n\n\t\tif(vDisplay == 0.0 || vOpacity == 0.0) {\n\t\t\tdiscard;\n\t\t\treturn;\n\t\t}\n\n\t\t// ib == 0.0 则正常渲染， ib == 1.0 则渲染反色\n\t\tfloat ib = inBorderDashed();\n\t\tvec4 bgColor = vec4(vBgColor.rgb * (1.0 - ib) + (vec3(1.0, 1.0, 1.0) - vBgColor.rgb) * ib, vBgColor.a);\n\n\t\t// 材质\n\t\tvec4 tColor = texture(uSampler, vTexCoord);\n\t\t// 绘制字体\n\t\tvec4 textColor = drawText(tColor);\n\t\t// 绘制普通对象\n\t\tvec4 normalColor = drawNormal(tColor, bgColor);\n\n\t\tvec4 color = vIsText * textColor + (1.0 - vIsText) * normalColor;\n\t\tcolor.a *= vOpacity;\n\n\t\tfragColor = color;\n\t}\n`;\n","export const vsSource = `#version 300 es\n\tlayout(location=1) in vec4 currVertexAndRatio;\t\t\t//顶点坐标和变形系数\n\tlayout(location=2) in vec4 prevVertexAndRatio;\n\tlayout(location=3) in vec4 nextVertexAndRatio;\n\tlayout(location=4) in vec4 uvAndEdgeOffsetRatio;\t\t//UV\n\n\tlayout(location=5) in vec4 vertexAndEdgeOffsetValueAndNotFollowViewport;\t// 顶点形变  边形变值  是否不跟随视口\n\tlayout(location=6) in vec4 UVRect;\t\t\t\t\t\t//UVRect\n\tlayout(location=7) in vec4 backgroundColor;\t\t\t\t//背景色\n\tlayout(location=8) in vec4 translationAndRotation;\t\t//形变\n\tlayout(location=9) in vec4 isTextAndBorderWidthAndDashedAndScale;\t\t//是否渲染文字 以及 文字边框粗细 以及物体边框虚线 缩放\n\tlayout(location=10) in vec4 textBorderColor;\t\t\t//文字边框颜色\n\tlayout(location=11) in vec4 opacityAndDisplayAndVpScaleAndVpTrans;\t\t\t//透明度 是否显示 是否跟随视口缩放 是否跟随视口平移\n\n\tout vec2 vTexCoord;\t\t\t\t//UV\n\tout vec4 vBgColor;\n\tout float vIsText;\n\tout float vTextBorderWidth;\n\tout vec4 vTextBorderColor;\n\tout float vHasTexture;\n\tout vec4 vPos;\n\tout float vNotBorder;\n\tout float vBorderDashed;\n\tout float vOpacity;\n\tout float vDisplay;\n\n\tuniform vec2 uConversionVec2;\t//坐标转换\n\tuniform vec2 uViewportTranslation;\t//视口平移\n\tuniform vec2 uViewportScale;\t\t//视口缩放\n\tuniform float uViewportRotation;\t//视口旋转\n\tuniform vec4 uOpacity;\t\t\t\t//全局透明度\n\n\tmat4 getScaleMatrix(vec2 scale) {\n\t\treturn mat4(\n\t\t\tscale.x, 0.0, 0.0, 0.0,\n\t\t\t0.0, scale.y, 0.0, 0.0,\n\t\t\t0.0, 0.0, 1.0, 0.0,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\t}\n\n\tmat4 getRotationMatrix(float radian) {\n\t\tfloat cost = cos(radian);\n\t\tfloat sint = sin(radian);\n\t\treturn mat4(\n\t\t\tcost, -sint, 0.0, 0.0,\n\t\t\tsint, cost, 0.0, 0.0,\n\t\t\t0.0, 0.0, 1.0, 0.0,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\t}\n\n\tmat4 getTranslationMatrix(vec2 translation) {\n\t\treturn mat4(\n\t\t\t1.0, 0.0, 0.0, 0.0,\n\t\t\t0.0, 1.0, 0.0, 0.0,\n\t\t\t0.0, 0.0, 1.0, 0.0,\n\t\t\ttranslation.x, translation.y, 0.0, 1.0\n\t\t);\n\t}\n\n\tvec2 getIntersectionVertex(\n\t\tin vec2 v1,\n\t\tin vec2 v2,\n\t\tin float offset\n\t) {\n\t\tvec4 vv1 = vec4(v1, 0.0, 1.0);\n\t\tvec4 vv2 = vec4(v2, 0.0, 1.0);\n\t\t// 向量夹角\n\t\tvec2 mid = normalize(normalize(v1) + normalize(v2));\n\t\tfloat theta = acos(dot(v1, v2) / (length(v1) * length(v2)));\n\t\t// 右手法则，判断夹角正负\n\t\tvec3 c = cross(vv1.xyz, vv2.xyz);\n\t\tfloat l = offset / sin(theta * 0.5);\n\t\treturn mid * l * (- sign(c.z));\n\t}\n\n\tvec2 getVertex(\n\t\tin vec2 origin,\n\t\tin vec2 offsetRatio,\n\t\tin vec2 offsetValue\n\t) {\n\t\tvec2 offset = offsetRatio * offsetValue;\n\t\treturn origin + offset;\n\t}\n\n\tvec2 getFollowViewport() {\n\t\tfloat outViewportStatus = vertexAndEdgeOffsetValueAndNotFollowViewport.w;\t//跟随视口状态\n\t\tvec3 f = vec3(outViewportStatus - 1.0, outViewportStatus - 2.0, outViewportStatus - 3.0);\n\t\tf = step(vec3(0.5, 0.5, 0.5), abs(f));\n\t\treturn vec2(f.x * f.z, f.y * f.z);\n\t}\n\n\t// 获取缩放矢量\n\tvec2 getScaleVec(float scale, vec2 followViewport, vec2 notFollowViewport) {\n\t\tvec2 scaleVec = vec2(scale, scale);\n\t\tvec2 isVpScale = vec2(1.0, 1.0) - opacityAndDisplayAndVpScaleAndVpTrans.zz;\n\t\tvec2 dscaleVec = vec2(1.0, 1.0) / uViewportScale * scaleVec * isVpScale + scaleVec * (1.0-isVpScale);\n\t\treturn dscaleVec * followViewport + scaleVec * notFollowViewport;\n\t}\n\n\tvoid main(void) {\n\n\t\tvec2 pv = getVertex(prevVertexAndRatio.xy, prevVertexAndRatio.zw, vertexAndEdgeOffsetValueAndNotFollowViewport.xy);\n\t\tvec2 cv = getVertex(currVertexAndRatio.xy, currVertexAndRatio.zw, vertexAndEdgeOffsetValueAndNotFollowViewport.xy);\n\t\tvec2 nv = getVertex(nextVertexAndRatio.xy, nextVertexAndRatio.zw, vertexAndEdgeOffsetValueAndNotFollowViewport.xy);\n\t\tvec2 pe = pv - cv;\n\t\tvec2 ne = nv - cv;\n\n\t\t// 判断是否需要乘视口矩阵\n\t\tvec2 followViewport = getFollowViewport();\n\t\tvec2 notFollowViewport = vec2(1.0, 1.0) - followViewport;\n\n\t\t// 各种矩阵\n\t\tmat4 rotationMatrix = getRotationMatrix(translationAndRotation.z);\n\t\t// 缩放矩阵，如果设置了脱离视口，则需要计算一个反向缩放矩阵\n\t\tmat4 scaleMatrix = getScaleMatrix(getScaleVec(isTextAndBorderWidthAndDashedAndScale.w, followViewport, notFollowViewport));\n\t\tmat4 transMat = getTranslationMatrix(translationAndRotation.xy);\n\t\tmat4 converMat = getScaleMatrix(uConversionVec2.xy);\n\t\t// 视口矩阵\n\t\tmat4 vpScaleMatrix = getScaleMatrix(uViewportScale);\n\t\tmat4 vpTranslationMatrix = getTranslationMatrix(uViewportTranslation);\n\t\tmat4 vpRotationMatrix = getRotationMatrix(uViewportRotation);\n\t\tmat4 vpMat = vpTranslationMatrix * vpScaleMatrix * converMat * vpRotationMatrix;\n\n\t\t// 求相邻两边交点向量\n\t\tvec2 intersection = getIntersectionVertex(pe, ne, vertexAndEdgeOffsetValueAndNotFollowViewport.z * uvAndEdgeOffsetRatio.z);\n\n\t\tvec4 posOrigin = transMat * scaleMatrix * rotationMatrix * vec4(cv, 0.0, 1.0);\n\t\tvec4 posBorder = rotationMatrix * vec4(intersection, 0.0, 0.0);\n\t\tposBorder = converMat * vec4(vec2(vpRotationMatrix * posBorder) * followViewport + posBorder.xy * notFollowViewport, 0, 0);\n\t\tposOrigin = vec4(vec2(vpMat * posOrigin) * followViewport + vec2(converMat * posOrigin) * notFollowViewport, 0.0, 1.0);\n\n\t\tgl_Position = posOrigin + posBorder;\n\n\t\t// out\n\t\t// 如果材质宽度为0 则标志为无材质\n\t\tvHasTexture = step(0.0, UVRect.z);\n\t\tvTexCoord = uvAndEdgeOffsetRatio.xy * UVRect.zw + UVRect.xy;\n\t\tvBgColor = backgroundColor;\n\t\tvIsText = isTextAndBorderWidthAndDashedAndScale.x;\n\t\tvTextBorderWidth = isTextAndBorderWidthAndDashedAndScale.y;\n\t\tvTextBorderColor = textBorderColor;\n\t\tvNotBorder = step(vertexAndEdgeOffsetValueAndNotFollowViewport.z, 0.0);\n\n\t\tvPos = rotationMatrix * vec4(cv, 0.0, 1.0); // 用于边框渲染计算\n\t\tvPos = vec4(vec2(vpRotationMatrix * vPos) * followViewport + vPos.xy * notFollowViewport, 0.0, 1.0);\n\n\t\tvBorderDashed = isTextAndBorderWidthAndDashedAndScale.z;\n\t\tvOpacity = opacityAndDisplayAndVpScaleAndVpTrans.x * uOpacity.x;\n\t\tvDisplay = opacityAndDisplayAndVpScaleAndVpTrans.y;\n\t}\n`;\n","import {Mesh} from '../graph/mesh';\nimport {Rainbow} from '..';\nimport {RenderUnit, RenderAttribute} from './render-unit';\nimport {GeneratorInterface} from '../interface/generator';\nimport {RenderObject} from './render-object';\nimport {DisplayStatus} from '../enum/unit';\n\nexport class Generator implements GeneratorInterface {\n  private _rainbow: Rainbow;\n  private originUnit: RenderUnit;\n  private borderUnit: RenderUnit;\n  private originIdx: number;\n  private borderIdx: number;\n  constructor(\n    rainbow: Rainbow,\n    mesh: Mesh,\n    originIndex: number = 0,\n    borderIndex: number = 1,\n    instanceCountMax: number = 0\n  ) {\n    this._rainbow = rainbow;\n    this.originIdx = Math.floor(originIndex);\n    this.borderIdx = Math.floor(borderIndex);\n    this.originUnit = new RenderUnit(\n      rainbow,\n      mesh.originMeshConfig,\n      instanceCountMax\n    ).regist();\n    this.borderUnit = new RenderUnit(\n      rainbow,\n      mesh.borderMeshConfig,\n      instanceCountMax\n    ).regist();\n    this.rainbow.registVAO(this.originUnit, this.originIdx);\n    this.rainbow.registVAO(this.borderUnit, this.borderIdx);\n  }\n  public instance(): RenderObject {\n    return new RenderObject(this.originUnit, this.borderUnit);\n  }\n  public destroy() {\n    this.rainbow.unRegistVAO(this.originUnit, this.originIdx);\n    this.rainbow.unRegistVAO(this.borderUnit, this.borderIdx);\n    this.originUnit.destroy();\n    this.borderUnit.destroy();\n    // todo\n    // this.originUnit = null;\n    // this.borderUnit = null;\n  }\n  public clear() {\n    this.originUnit.clear();\n    this.borderUnit.clear();\n  }\n\n  public set opacity(o: number) {\n    // this.originUnit.batchAdd(RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS, [o], 0);\n    // this.borderUnit.batchAdd(RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS, [o], 0);\n    this.originUnit.opacity = o;\n    this.borderUnit.opacity = o;\n  }\n\n  public set display(n: DisplayStatus) {\n    this.originUnit.display = n;\n    this.borderUnit.display = n;\n  }\n\n  public set translate(offset: number[]) {\n    this.originUnit.batchAdd(\n      RenderAttribute.TRANSLATION_AND_ROTATION,\n      offset,\n      0\n    );\n    this.borderUnit.batchAdd(\n      RenderAttribute.TRANSLATION_AND_ROTATION,\n      offset,\n      0\n    );\n  }\n\n  public get rainbow(): Rainbow {\n    return this._rainbow;\n  }\n}\n","/*****\n *\nInputs:\n------\n\n  blocks: array of any objects that have .w and .h attributes\n\nOutputs:\n-------\n\n  marks each block that fits with a .fit attribute pointing to a\n  node with .x and .y coordinates\n\nExample:\n-------\n\n  var blocks = [\n    { w: 100, h: 100 },\n    { w: 100, h: 100 },\n    { w:  80, h:  80 },\n    { w:  80, h:  80 },\n    etc\n    etc\n  ];\n\n  var packer = new GrowingPacker();\n  packer.fit(blocks);\n\n  for(var n = 0 ; n < blocks.length ; n++) {\n    var block = blocks[n];\n    if (block.fit) {\n      Draw(block.fit.x, block.fit.y, block.w, block.h);\n    }\n  }\n */\n\nexport interface PNode {\n  w: number;\n  h: number;\n  x?: number;\n  y?: number;\n  used?: boolean;\n  down?: PNode;\n  right?: PNode;\n  fit?: PNode;\n  data?: any;\n}\n\nexport class GrowingPacker {\n  private root!: PNode;\n  private mw: number;\n  private mh: number;\n  constructor(maxWidth: number = 0, maxHeight: number = 0) {\n    this.mw = maxWidth;\n    this.mh = maxHeight;\n  }\n  public fit(blocks: PNode[]): PNode[] {\n    let n;\n    let node;\n    let block;\n    let len = blocks.length;\n    let w = len > 0 ? blocks[0].w : 0;\n    let h = len > 0 ? blocks[0].h : 0;\n    this.root = {x: 0, y: 0, w: w, h: h};\n    for (n = 0; n < len; n++) {\n      block = blocks[n];\n      if (node === this.findNode(this.root, block.w, block.h)) {\n        block.fit = this.splitNode(node, block.w, block.h);\n      } else block.fit = this.growNode(block.w, block.h);\n    }\n    return blocks;\n  }\n\n  private findNode(root: PNode, w: number, h: number): PNode {\n    if (root.used) {\n      // @ts-ignore\n      return this.findNode(root.right, w, h) || this.findNode(root.down, w, h);\n    } else if (w <= root.w && h <= root.h) {\n      return root;\n    } else {\n      // @ts-ignore\n      return null;\n    }\n  }\n\n  private splitNode(node: PNode, w: number, h: number): PNode {\n    node.used = true;\n\n    node.down = {\n      x: node.x,\n      // @ts-ignore\n      y: node.y + h,\n      w: node.w,\n      h: node.h - h\n    };\n    node.right = {\n      // @ts-ignore\n      x: node.x + w,\n      y: node.y,\n      w: node.w - w,\n      h: h\n    };\n    return node;\n  }\n\n  private growNode(w: number, h: number): PNode {\n    if (this.root.w + w > this.mw || this.root.h + h > this.mh) {\n      console.error('Texture too large.');\n      // @ts-ignore\n      return;\n    }\n\n    let canGrowDown = w <= this.root.w;\n    let canGrowRight = h <= this.root.h;\n\n    let shouldGrowRight = canGrowRight && this.root.h >= this.root.w + w; // attempt to keep square-ish by growing right when height is much greater than width\n    let shouldGrowDown = canGrowDown && this.root.w >= this.root.h + h; // attempt to keep square-ish by growing down  when width  is much greater than height\n\n    if (shouldGrowRight) return this.growRight(w, h);\n    else if (shouldGrowDown) return this.growDown(w, h);\n    else if (canGrowRight) return this.growRight(w, h);\n    else if (canGrowDown) return this.growDown(w, h);\n    // @ts-ignore\n    else return null; // need to ensure sensible root starting size to avoid this happening\n  }\n\n  private growRight(w: number, h: number): PNode {\n    this.root = {\n      used: true,\n      x: 0,\n      y: 0,\n      w: this.root.w + w,\n      h: this.root.h,\n      down: this.root,\n      right: {x: this.root.w, y: 0, w: w, h: this.root.h}\n    };\n    let node = this.findNode(this.root, w, h);\n    if (node) return this.splitNode(node, w, h);\n    // @ts-ignore\n    else return null;\n  }\n\n  private growDown(w: number, h: number): PNode {\n    this.root = {\n      used: true,\n      x: 0,\n      y: 0,\n      w: this.root.w,\n      h: this.root.h + h,\n      down: {x: 0, y: this.root.h, w: this.root.w, h: h},\n      right: this.root\n    };\n    let node = this.findNode(this.root, w, h);\n    if (node) return this.splitNode(node, w, h);\n    // @ts-ignore\n    else return null;\n  }\n}\n","import {ComponentInterface} from '../interface/generator';\nimport {RenderUnit, RenderAttribute} from './render-unit';\nimport {DisplayStatus} from '../enum/unit';\nimport {IdCreator} from '../utils';\nimport {Rainbow} from '..';\nimport {SearchableObject} from '../search/searchable-object';\nimport {ImageTexture, ImageTextureEvent} from './texture';\n\nconst RATIO = window.devicePixelRatio;\n\nexport const enum OutViewportStatus {\n  NONE = 0,\n  X = 1,\n  Y = 2,\n  BOTH = 3\n}\n\nexport class RenderObject extends SearchableObject\n  implements ComponentInterface {\n  private _id: string;\n  private _originUnit: RenderUnit;\n  private _borderUnit: RenderUnit;\n  private _originId!: string;\n  private _borderId!: string;\n  private _isAdded!: boolean;\n  private _isBorderAdded!: boolean;\n  private _texture!: ImageTexture;\n  private _needReset: boolean = false;\n\n  private _attribs = {\n    translation: [0, 0],\n    rotation: 0,\n    scale: 1,\n    backgroundColor: [0, 0, 0, 0],\n    uv: null,\n    vertexOffsetValue: [0, 0],\n    isText: false,\n    textBorderWidth: 0,\n    textBorderColor: [0, 0, 0, 0],\n    borderWidth: 0,\n    borderColor: [0, 0, 0, 0],\n    borderDashed: 0,\n    opacity: 1,\n    display: DisplayStatus.DISPLAY,\n    outViewportStatus: OutViewportStatus.NONE,\n    attachViewportScale: true,\n    attachViewportTranslation: true\n  };\n\n  private _attriblist = [\n    'vertexOffsetValue',\n    'translation',\n    'rotation',\n    'scale',\n    'backgroundColor',\n    'uv',\n\n    'borderWidth',\n    'borderColor',\n    'borderDashed',\n\n    'isText',\n    'textBorderWidth',\n    'textBorderColor',\n\n    'opacity',\n    'display',\n    'outViewportStatus',\n    'attachViewportScale',\n    'attachViewportTranslation'\n  ];\n\n  constructor(originUnit: RenderUnit, borderUnit: RenderUnit) {\n    super(originUnit.rainbow.searcher);\n    this._originUnit = originUnit;\n    this._borderUnit = borderUnit;\n    this._id = IdCreator.createId();\n  }\n\n  public get id(): string {\n    return this._id;\n  }\n\n  public get rainbow(): Rainbow {\n    return this._originUnit.rainbow;\n  }\n\n  public get isShown(): boolean {\n    return this._isAdded;\n  }\n\n  public show() {\n    if (!this._isAdded) {\n      this._originId = this._originUnit.add();\n      this._isAdded = true;\n      this.updateStatus();\n      this.searchable && this.registToSearcher();\n    }\n    this.borderWidth = this.borderWidth;\n    return this;\n  }\n\n  public hide() {\n    this._isAdded && this._originUnit.remove(this._originId);\n    this._isBorderAdded && this._borderUnit.remove(this._borderId);\n    this._isAdded = false;\n    this._isBorderAdded = false;\n    // @ts-ignore\n    this._originId = null;\n    // @ts-ignore\n    this._borderId = null;\n    this.deregistToSearcher();\n    return this;\n  }\n\n  public set translation(offset: number[]) {\n    // this.rainbow.isDebug && console.log('RenderObject:: translation: ', offset);\n    // if(arrayEqual(offset, this._attribs['translation'])) return;\n    this._isAdded &&\n      this._originUnit.setAttribute(\n        this._originId,\n        RenderAttribute.TRANSLATION_AND_ROTATION,\n        offset,\n        0\n      );\n    this._isBorderAdded &&\n      this._borderUnit.setAttribute(\n        this._borderId,\n        RenderAttribute.TRANSLATION_AND_ROTATION,\n        offset,\n        0\n      );\n    this._attribs['translation'] = offset;\n    this.searchable && this.registToSearcher();\n  }\n\n  public get translation(): number[] {\n    if (this._isAdded) {\n      return this._originUnit.getAttribute(\n        this._originId,\n        RenderAttribute.TRANSLATION_AND_ROTATION,\n        0,\n        2\n      );\n    }\n    return this._attribs['translation'];\n  }\n\n  public set rotation(radian: number) {\n    // if(this.rotation == radian) return;\n    const data = [radian];\n    this._isAdded &&\n      this._originUnit.setAttribute(\n        this._originId,\n        RenderAttribute.TRANSLATION_AND_ROTATION,\n        data,\n        2\n      );\n    this._isBorderAdded &&\n      this._borderUnit.setAttribute(\n        this._borderId,\n        RenderAttribute.TRANSLATION_AND_ROTATION,\n        data,\n        2\n      );\n    this._attribs['rotation'] = radian;\n    this.searchable && this.registToSearcher();\n  }\n\n  public get rotation(): number {\n    if (this._isAdded) {\n      return this._originUnit.getAttribute(\n        this._originId,\n        RenderAttribute.TRANSLATION_AND_ROTATION,\n        2,\n        1\n      )[0];\n    }\n    return this._attribs['rotation'];\n  }\n\n  public set scale(n: number) {\n    // if(this.scale == n) return;\n    const data = [n];\n    this._isAdded &&\n      this._originUnit.setAttribute(\n        this._originId,\n        RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n        data,\n        3\n      );\n    this._isBorderAdded &&\n      this._borderUnit.setAttribute(\n        this._borderId,\n        RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n        data,\n        3\n      );\n    this._attribs['scale'] = n;\n    this.searchable && this.registToSearcher();\n  }\n\n  public get scale(): number {\n    if (this._isAdded) {\n      return this._originUnit.getAttribute(\n        this._originId,\n        RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n        3,\n        1\n      )[0];\n    }\n    return this._attribs['scale'];\n  }\n\n  public set backgroundColor(color: number[]) {\n    // if(arrayEqual(color, this._attribs['backgroundColor'])) return;\n    const data = color.map(c => c / 255);\n    this._isAdded &&\n      this._originUnit.setAttribute(\n        this._originId,\n        RenderAttribute.BACKGROUND_COLOR,\n        data\n      );\n    this._attribs['backgroundColor'] = color;\n  }\n\n  public get backgroundColor(): number[] {\n    if (this._isAdded) {\n      return this._originUnit\n        .getAttribute(this._originId, RenderAttribute.BACKGROUND_COLOR, 0, 4)\n        .map(c => c * 255);\n    }\n    return this._attribs['backgroundColor'];\n  }\n\n  public set texture(texture: ImageTexture) {\n    if (texture == null) {\n      if (this._texture && this._texture instanceof ImageTexture) {\n        this._texture.removeEventListener(\n          ImageTextureEvent.UPDATE,\n          this.changeUV,\n          this\n        );\n        // @ts-ignore\n        this._texture = null;\n      }\n      // @ts-ignore\n      this.changeUV(null);\n      return;\n    }\n\n    if (!(texture instanceof ImageTexture)) {\n      return;\n    }\n\n    const t = this._texture;\n    const tt = texture;\n\n    if (!this._needReset && t === tt) return;\n\n    t instanceof ImageTexture &&\n      t.removeEventListener(ImageTextureEvent.UPDATE, this.changeUV, this);\n\n    this._texture = texture;\n    this.changeUV(this._texture);\n    this._texture.addEventListener(\n      ImageTextureEvent.UPDATE,\n      this.changeUV,\n      this\n    );\n  }\n\n  public set borderWidth(width: number) {\n    if (this._isBorderAdded && width === this._attribs.borderWidth) return;\n\n    this._attribs['borderWidth'] = width;\n\n    const data = [width];\n\n    if (this._isBorderAdded) {\n      if (width > 0) {\n        this._borderUnit.setAttribute(\n          this._borderId,\n          RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n          data,\n          2\n        );\n      } else {\n        this.removeBorder();\n      }\n    } else if (width > 0) {\n      this.addBorder();\n    }\n  }\n\n  public get borderWidth(): number {\n    if (this._isBorderAdded) {\n      return this._borderUnit.getAttribute(\n        this._borderId,\n        RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n        2,\n        1\n      )[0];\n    }\n    return this._attribs['borderWidth'];\n  }\n\n  public set borderColor(color: number[]) {\n    // if(arrayEqual(color, this._attribs['borderColor'])) return;\n    const data = color.map(c => c / 255);\n    this._isBorderAdded &&\n      this._borderUnit.setAttribute(\n        this._borderId,\n        RenderAttribute.BACKGROUND_COLOR,\n        data\n      );\n    this._attribs['borderColor'] = color;\n  }\n\n  public get borderColor(): number[] {\n    if (this._isBorderAdded) {\n      return this._borderUnit\n        .getAttribute(this._borderId, RenderAttribute.BACKGROUND_COLOR, 0, 4)\n        .map(c => c * 255);\n    }\n    return this._attribs['borderColor'];\n  }\n\n  public set borderDashed(n: number) {\n    // if(n == this._attribs.borderDashed) return;\n    this._isBorderAdded &&\n      this._borderUnit.setAttribute(\n        this._borderId,\n        RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n        [n * RATIO],\n        2\n      );\n    this._attribs.borderDashed = n;\n  }\n\n  public get borderDashed(): number {\n    if (this._isBorderAdded) {\n      return this._borderUnit.getAttribute(\n        this._borderId,\n        RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n        2,\n        1\n      )[0];\n    }\n    return this._attribs.borderDashed;\n  }\n\n  public set vertexOffsetValue(value: number[]) {\n    // if(arrayEqual(value, this._attribs['vertexOffsetValue'])) return;\n    // const v = value.slice(0, 2);\n    this._originUnit.setAttribute(\n      this._originId,\n      RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n      value\n    );\n    this._borderUnit.setAttribute(\n      this._borderId,\n      RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n      value\n    );\n    this._attribs['vertexOffsetValue'] = value;\n    this.searchable && this.registToSearcher();\n  }\n\n  public get vertexOffsetValue(): number[] {\n    if (this._isAdded) {\n      return this._originUnit.getAttribute(\n        this._originId,\n        RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n        0,\n        2\n      );\n    }\n    return this._attribs['vertexOffsetValue'];\n  }\n\n  public set size(value: number[]) {\n    this.vertexOffsetValue = value;\n  }\n\n  public get size(): number[] {\n    return this.vertexOffsetValue;\n  }\n\n  public set isText(ist: boolean) {\n    // if(this._attribs['isText'] == ist) return;\n    let r = ist ? 1 : 0;\n    const data = [r];\n    this._originUnit.setAttribute(\n      this._originId,\n      RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n      data,\n      0\n    );\n    this._attribs['isText'] = ist;\n  }\n\n  public get isText(): boolean {\n    if (this._isAdded) {\n      return (\n        this._originUnit.getAttribute(\n          this._originId,\n          RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n          0,\n          1\n        )[0] === 1\n      );\n    }\n    return this._attribs['isText'];\n  }\n\n  public set textBorderWidth(n: number) {\n    // if(n == this._attribs['textBorderWidth']) return;\n    const data = [n];\n    this._originUnit.setAttribute(\n      this._originId,\n      RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n      data,\n      1\n    );\n    this._attribs['textBorderWidth'] = n;\n  }\n\n  public get textBorderWidth(): number {\n    if (this._isAdded) {\n      return this._originUnit.getAttribute(\n        this._originId,\n        RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n        1,\n        1\n      )[0];\n    }\n    return this._attribs['textBorderWidth'];\n  }\n\n  public set textBorderColor(color: number[]) {\n    // if(arrayEqual(color, this._attribs['textBorderColor'])) return;\n    this._originUnit.setAttribute(\n      this._originId,\n      RenderAttribute.TEXT_BORDER_COLOR,\n      color.map(c => c / 255)\n    );\n    this._attribs['textBorderColor'] = color;\n  }\n\n  public get textBorderColor(): number[] {\n    return this._attribs['textBorderColor'];\n  }\n\n  public set opacity(n: number) {\n    // let op = numberClamp(0, 1, n);\n    // if(this._attribs['opacity'] == op) return;\n    const op = Math.max(0, n);\n    const data = [op];\n    this._originUnit.setAttribute(\n      this._originId,\n      RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n      data,\n      0\n    );\n    this._borderUnit.setAttribute(\n      this._borderId,\n      RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n      data,\n      0\n    );\n    this._attribs['opacity'] = op;\n  }\n\n  public get opacity(): number {\n    if (this._isAdded) {\n      return this._originUnit.getAttribute(\n        this._originId,\n        RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n        0,\n        1\n      )[0];\n    }\n    return this._attribs['opacity'];\n  }\n\n  public set display(n: DisplayStatus) {\n    // if(this._attribs['display'] == n) return;\n    const data = [n];\n    this._originUnit.setAttribute(\n      this._originId,\n      RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n      data,\n      1\n    );\n    this._borderUnit.setAttribute(\n      this._borderId,\n      RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n      data,\n      1\n    );\n    this._attribs['display'] = n;\n  }\n\n  public get display(): DisplayStatus {\n    if (this._isAdded) {\n      return this._originUnit.getAttribute(\n        this._originId,\n        RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n        1\n      )[0] as DisplayStatus;\n    }\n    return this._attribs['display'];\n  }\n\n  public set outViewportStatus(status: OutViewportStatus) {\n    const data = [status];\n    this._originUnit.setAttribute(\n      this._originId,\n      RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n      data,\n      3\n    );\n    this._borderUnit.setAttribute(\n      this._borderId,\n      RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n      data,\n      3\n    );\n    this._attribs['outViewportStatus'] = status;\n  }\n\n  public get outViewportStatus(): OutViewportStatus {\n    if (this._isAdded) {\n      return this._originUnit.getAttribute(\n        this._originId,\n        RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n        3,\n        1\n      )[0] as OutViewportStatus;\n    }\n    return this._attribs['outViewportStatus'];\n  }\n\n  public set attachViewportScale(n: boolean) {\n    // if(this._attribs['attachViewportScale'] == n) return;\n    const o = n ? 1 : 0;\n    const data = [o];\n    this._originUnit.setAttribute(\n      this._originId,\n      RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n      data,\n      2\n    );\n    this._borderUnit.setAttribute(\n      this._borderId,\n      RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n      data,\n      2\n    );\n    this._attribs['attachViewportScale'] = n;\n  }\n\n  public get attachViewportScale() {\n    if (this._isAdded) {\n      return this._originUnit.getAttribute(\n        this._originId,\n        RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n        2,\n        1\n      )[0] === 1\n        ? true\n        : false;\n    }\n    return this._attribs['attachViewportScale'];\n  }\n\n  public set attachViewportTranslation(n: boolean) {\n    // if(this._attribs['attachViewportTranslation'] == n) return;\n    const o = n ? 1 : 0;\n    const data = [o];\n    this._originUnit.setAttribute(\n      this._originId,\n      RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n      data,\n      3\n    );\n    this._borderUnit.setAttribute(\n      this._borderId,\n      RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n      data,\n      3\n    );\n    this._attribs['attachViewportTranslation'] = n;\n  }\n\n  public get attachViewportTranslation() {\n    if (this._isAdded) {\n      return this._originUnit.getAttribute(\n        this._originId,\n        RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n        3,\n        1\n      )[0] === 1\n        ? true\n        : false;\n    }\n    return this._attribs['attachViewportTranslation'];\n  }\n\n  public getVertexPositions(expand: number = 0): number[] {\n    return this._originUnit.getVertexesPositionById(this._originId, expand);\n  }\n\n  private changeUV(texture: ImageTexture) {\n    if (!texture || !(texture instanceof ImageTexture)) {\n      this._isAdded &&\n        this._originUnit.setAttribute(this._originId, RenderAttribute.UV_RECT, [\n          0,\n          0,\n          0,\n          0\n        ]);\n    } else {\n      const uv = [texture.u, texture.v, texture.width, texture.height];\n      this._isAdded &&\n        this._originUnit.setAttribute(\n          this._originId,\n          RenderAttribute.UV_RECT,\n          uv\n        );\n      // @ts-ignore\n      this._attribs['uv'] = uv;\n    }\n  }\n\n  private updateStatus() {\n    this._needReset = true;\n    const list = this._attriblist;\n    const s = this._attribs;\n    // list.forEach(v => this[v] = s[v]);\n\n    if (this._isAdded) {\n      this._originUnit.setAttribute(\n        this._originId,\n        RenderAttribute.TRANSLATION_AND_ROTATION,\n        [s['translation'][0], s['translation'][1], s['rotation']]\n      );\n      this._originUnit.setAttribute(\n        this._originId,\n        RenderAttribute.BACKGROUND_COLOR,\n        s['backgroundColor'].map(v => v / 255)\n      );\n      this._originUnit.setAttribute(\n        this._originId,\n        RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n        [s['isText'] ? 1 : 0, 0, 0, s['scale']]\n      );\n      this._originUnit.setAttribute(\n        this._originId,\n        RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n        [\n          s['opacity'],\n          s['display'],\n          s['attachViewportScale'] ? 1 : 0,\n          s['attachViewportTranslation'] ? 1 : 0\n        ]\n      );\n      // this._originUnit.setAttribute(this._originId, RenderAttribute.TEXT_BORDER_COLOR, s['textBorderColor'].map(v => v/255));\n      this._originUnit.setAttribute(\n        this._originId,\n        RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n        [\n          s['vertexOffsetValue'][0],\n          s['vertexOffsetValue'][1],\n          s['borderWidth'],\n          s['outViewportStatus']\n        ]\n      );\n    }\n\n    this.changeUV(this._texture);\n    this._needReset = false;\n  }\n\n  private addBorder() {\n    if (!this._isBorderAdded) {\n      this._borderId = this._borderUnit.add();\n\n      this._borderUnit.setAttribute(\n        this._borderId,\n        RenderAttribute.TRANSLATION_AND_ROTATION,\n        [this.translation[0], this.translation[1], this.rotation],\n        0\n      );\n\n      this._borderUnit.setAttribute(\n        this._borderId,\n        RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n        [\n          this.vertexOffsetValue[0],\n          this.vertexOffsetValue[1],\n          this.borderWidth,\n          this.outViewportStatus\n        ],\n        0\n      );\n\n      this._borderUnit.setAttribute(\n        this._borderId,\n        RenderAttribute.BACKGROUND_COLOR,\n        this.borderColor.map(v => v / 255),\n        0\n      );\n      this._borderUnit.setAttribute(\n        this._borderId,\n        RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n        [this.borderDashed * RATIO, this.scale],\n        2\n      );\n\n      this._borderUnit.setAttribute(\n        this._borderId,\n        RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n        [\n          this.opacity,\n          this.display,\n          this.attachViewportScale ? 1 : 0,\n          this.attachViewportTranslation ? 1 : 0\n        ],\n        0\n      );\n\n      this._isBorderAdded = true;\n    }\n  }\n\n  private removeBorder() {\n    if (this._isBorderAdded) {\n      this._borderUnit.remove(this._borderId);\n      // @ts-ignore\n      this._borderId = undefined;\n      this._isBorderAdded = false;\n    }\n  }\n}\n","import * as glMatrix from '../../lib/gl-matrix.js';\n\nimport {\n  getVertexPosition,\n  getVertexAfterExpand,\n  IdCreator\n} from '../utils/index';\nimport {PaintUnitInterface} from 'src/interface/unit.js';\nimport {Rainbow} from 'src/index.js';\nimport {MeshConfig} from 'src/graph/mesh.js';\nimport {DisplayStatus} from 'src/enum/unit.js';\n\nconst MAX_INSTANCE = 3000;\nconst mat4 = glMatrix.mat4;\nconst vec3 = glMatrix.vec3;\n\n// 模型属性\nexport const enum VertexAttribute {\n  CURR_VERTEX_AND_RATIO = 'currVertexAndRatio',\n  NEXT_VERTEX_AND_RATIO = 'nextVertexAndRatio',\n  PREV_VERTEX_AND_RATIO = 'prevVertexAndRatio',\n  UV_AND_EDGE_OFFSET_RATIO = 'uvAndEdgeOffsetRatio'\n}\n\nexport let VertexAttributeStride: Map<VertexAttribute, number> = new Map();\nVertexAttributeStride.set(VertexAttribute.CURR_VERTEX_AND_RATIO, 4);\nVertexAttributeStride.set(VertexAttribute.NEXT_VERTEX_AND_RATIO, 4);\nVertexAttributeStride.set(VertexAttribute.PREV_VERTEX_AND_RATIO, 4);\nVertexAttributeStride.set(VertexAttribute.UV_AND_EDGE_OFFSET_RATIO, 4);\n\n// 实例属性\nexport const enum RenderAttribute {\n  VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT = 'vertexAndEdgeOffsetValueAndNotFollowViewport',\n  BACKGROUND_COLOR = 'backgroundColor',\n  UV_RECT = 'UVRect',\n  TRANSLATION_AND_ROTATION = 'translationAndRotation',\n  IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE = 'isTextAndBorderWidthAndDashedAndScale',\n  TEXT_BORDER_COLOR = 'textBorderColor',\n  OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS = 'opacityAndDisplayAndVpScaleAndVpTrans'\n}\n\nexport let RenderAttributeStride: Map<RenderAttribute, number> = new Map();\nRenderAttributeStride.set(\n  RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n  4\n);\nRenderAttributeStride.set(RenderAttribute.BACKGROUND_COLOR, 4);\nRenderAttributeStride.set(RenderAttribute.UV_RECT, 4);\nRenderAttributeStride.set(RenderAttribute.TRANSLATION_AND_ROTATION, 4);\nRenderAttributeStride.set(\n  RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n  4\n);\nRenderAttributeStride.set(RenderAttribute.TEXT_BORDER_COLOR, 4);\nRenderAttributeStride.set(\n  RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS,\n  4\n);\n\nexport const RenderAttributeList = [\n  RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n  RenderAttribute.BACKGROUND_COLOR,\n  RenderAttribute.UV_RECT,\n  RenderAttribute.TRANSLATION_AND_ROTATION,\n  RenderAttribute.IS_TEXT_AND_BORDER_WIDTH_AND_DASHED_AND_SCALE,\n  RenderAttribute.TEXT_BORDER_COLOR,\n  RenderAttribute.OPACITY_AND_DISPLAY_AND_VPSCALE_AND_VPTRANS\n];\n\nexport const enum RenderUniform {\n  OPACITY = 'uOpacity'\n}\n\nexport const RenderUnformList = [RenderUniform.OPACITY];\n\nexport class RenderUnit implements PaintUnitInterface {\n  private _engine: Rainbow;\n  private idmap: Map<string, number>;\n  private idlist: string[];\n  private _meshConfig: MeshConfig;\n  private vao;\n  private instanceCount: number = 0;\n  private instanceCountMax: number = 0;\n  private instanceCountInited: number = 0;\n\n  private attribBuffers: Map<RenderAttribute, WebGLBuffer> = new Map();\n  private attribBufferDatas: Map<RenderAttribute, Float32Array> = new Map();\n  private attribIsModifieds: Map<RenderAttribute, boolean> = new Map();\n  private attribLocals: Map<RenderAttribute, any> = new Map();\n\n  private uniformLocals: Map<RenderUniform, any> = new Map();\n  private uniformDatas: Map<RenderUniform, Float32Array> = new Map();\n\n  private _display: DisplayStatus = DisplayStatus.DISPLAY;\n  private displayIsModified: boolean = false;\n\n  constructor(\n    rainbow: Rainbow,\n    meshConfig: MeshConfig,\n    instanceCountMax: number = 0\n  ) {\n    this._engine = rainbow;\n    this._meshConfig = meshConfig;\n\n    const gl = rainbow.gl;\n    const prg = rainbow.prg;\n    const icm = Math.floor(instanceCountMax);\n    this.instanceCountMax = icm > 0 ? icm : MAX_INSTANCE;\n    this.instanceCountInited = this.instanceCountMax; // 缓存\n\n    // 初始化\n    RenderAttributeList.forEach(attrib => {\n      // 本体属性\n      const data = new Float32Array(\n        // @ts-ignore\n        this.instanceCountMax * RenderAttributeStride.get(attrib)\n      );\n      // @ts-ignore\n      this.attribBuffers.set(attrib, gl.createBuffer());\n      this.attribBufferDatas.set(attrib, data);\n      this.attribIsModifieds.set(attrib, true);\n      this.attribLocals.set(attrib, gl.getAttribLocation(prg, attrib));\n    });\n\n    RenderUnformList.forEach(uniform => {\n      this.uniformLocals.set(uniform, gl.getUniformLocation(prg, uniform));\n      this.uniformDatas.set(uniform, new Float32Array(4));\n    });\n\n    // 默认数据\n    this.uniformDatas.set(\n      RenderUniform.OPACITY,\n      new Float32Array([1, 0, 0, 0])\n    );\n\n    this.idmap = new Map<string, number>();\n    this.idlist = [];\n  }\n\n  public regist(): RenderUnit {\n    const gl = this._engine.gl;\n    const config = this._meshConfig;\n\n    const currVs = config.currVertexes;\n    const prevVs = config.prevVertexes;\n    const nextVs = config.nextVertexes;\n    const currRt = config.currOffsetRatios;\n    const prevRt = config.prevOffsetRatios;\n    const nextRt = config.nextOffsetRatios;\n    const vlen = currVs.length / 2;\n\n    const v1: number[] = [];\n    const v2: number[] = [];\n    const v3: number[] = [];\n    const v4: number[] = [];\n\n    const uvc = config.uvs;\n    const eor = config.edgeOffsetRatios;\n\n    for (let i = 0; i < vlen; i++) {\n      v1.push(\n        currVs[i * 2],\n        currVs[i * 2 + 1],\n        currRt[i * 2],\n        currRt[i * 2 + 1]\n      );\n      v2.push(\n        prevVs[i * 2],\n        prevVs[i * 2 + 1],\n        prevRt[i * 2],\n        prevRt[i * 2 + 1]\n      );\n      v3.push(\n        nextVs[i * 2],\n        nextVs[i * 2 + 1],\n        nextRt[i * 2],\n        nextRt[i * 2 + 1]\n      );\n      v4.push(uvc[i * 2], uvc[i * 2 + 1], eor[i], 0);\n    }\n\n    this.vao = gl.createVertexArray();\n    gl.bindVertexArray(this.vao);\n\n    this.registAttribute(\n      VertexAttribute.CURR_VERTEX_AND_RATIO,\n      new Float32Array(v1)\n    );\n    this.registAttribute(\n      VertexAttribute.PREV_VERTEX_AND_RATIO,\n      new Float32Array(v2)\n    );\n    this.registAttribute(\n      VertexAttribute.NEXT_VERTEX_AND_RATIO,\n      new Float32Array(v3)\n    );\n    this.registAttribute(\n      VertexAttribute.UV_AND_EDGE_OFFSET_RATIO,\n      new Float32Array(v4)\n    );\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gl.createBuffer());\n    gl.bufferData(\n      gl.ELEMENT_ARRAY_BUFFER,\n      new Uint32Array(this._meshConfig.indeces),\n      gl.STATIC_DRAW\n    );\n\n    gl.bindVertexArray(null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    return this;\n  }\n  public updateToGL(): boolean {\n    const gl = this._engine.gl;\n    let result = this.displayIsModified;\n    gl.bindVertexArray(this.vao);\n\n    RenderAttributeList.forEach((attrib: RenderAttribute) => {\n      if (this.attribIsModifieds.get(attrib) === true) {\n        this.updateBufferToGL(\n          attrib,\n          // @ts-ignore\n          this.attribBuffers.get(attrib),\n          this.attribBufferDatas.get(attrib),\n          RenderAttributeStride.get(attrib)\n        );\n        this.attribIsModifieds.set(attrib, false);\n        result = true;\n      }\n    });\n    this.displayIsModified = false;\n    return result;\n  }\n\n  public updateUniform() {\n    const gl = this.rainbow.gl;\n    RenderUnformList.forEach(uniform => {\n      gl.uniform4fv(\n        this.uniformLocals.get(uniform),\n        // @ts-ignore\n        this.uniformDatas.get(uniform)\n      );\n    });\n  }\n\n  public setAttribute(\n    id: string,\n    attrib: RenderAttribute,\n    value: number[],\n    offset: number = 0\n  ) {\n    if (!id || id === '') return;\n    const idx = this.idmap.get(id);\n    // @ts-ignore\n    const stride: number = RenderAttributeStride.get(attrib);\n    let bufferData: Float32Array;\n    // @ts-ignore\n    bufferData = this.attribBufferDatas.get(attrib);\n    this.attribIsModifieds.set(attrib, true);\n    // @ts-ignore\n    bufferData.set(value.slice(0, stride - offset), idx * stride + offset);\n  }\n\n  public getAttribute(\n    id: string,\n    attrib: RenderAttribute,\n    offset: number = 0,\n    lenght: number = 0\n  ): number[] {\n    const idx = this.idmap.get(id);\n    // @ts-ignore\n    const stride: number = RenderAttributeStride.get(attrib);\n    let bufferData: Float32Array;\n    // @ts-ignore\n    bufferData = this.attribBufferDatas.get(attrib);\n    this.attribIsModifieds.set(attrib, true);\n    // @ts-ignore\n    const start = idx * stride + offset;\n    let end;\n    if (lenght > 0) {\n      // @ts-ignore\n      end = Math.min(start + lenght, (idx + 1) * stride);\n    } else {\n      // @ts-ignore\n      end = (idx + 1) * stride;\n    }\n    return Array.from(bufferData.subarray(start, end));\n  }\n\n  public add(): string {\n    // 如果超过了最大实例限制，则扩展\n    if (this.instanceCount === this.instanceCountMax) {\n      this.grow();\n    }\n\n    const id = this.createId();\n    const idx = this.instanceCount;\n    this.idmap.set(id, idx);\n    this.idlist[idx] = id;\n    this.instanceCount++;\n\n    RenderAttributeList.forEach(attrib =>\n      this.attribIsModifieds.set(attrib, true)\n    );\n\n    return id;\n  }\n\n  public remove(id: string) {\n    const idx = this.idmap.get(id);\n    const t = this.instanceCount;\n    // @ts-ignore\n    if (t < 1 || idx < 0 || idx >= t) {\n      return;\n    }\n    RenderAttributeList.forEach((attrib: RenderAttribute) => {\n      this.removeAttributeBufferData(id, attrib);\n      this.attribIsModifieds.set(attrib, true);\n    });\n\n    const lastId = this.idlist[this.instanceCount - 1];\n    // @ts-ignore\n    this.idmap.set(lastId, idx);\n    // @ts-ignore\n    this.idlist[idx] = lastId;\n\n    this.idmap.delete(id);\n    this.idlist.pop();\n\n    this.instanceCount--;\n  }\n\n  public clear() {\n    if (this.instanceCountMax > this.instanceCountInited) {\n      const k = this.instanceCountMax / this.instanceCountInited;\n      RenderAttributeList.forEach(attrib => {\n        // @ts-ignore\n        const len = this.attribBufferDatas.get(attrib).length;\n        this.attribBufferDatas.set(attrib, new Float32Array(len / k));\n      });\n      this.instanceCountMax = this.instanceCountInited;\n    } else {\n      this.attribBufferDatas.forEach(v => v.fill(0));\n    }\n    this.attribIsModifieds.forEach((v, k) =>\n      this.attribIsModifieds.set(k, true)\n    );\n    // @ts-ignore\n    this.idmap.clear();\n    this.idlist = [];\n    this.instanceCount = 0;\n  }\n\n  public fill(attrib: RenderAttribute, value: number) {\n    // @ts-ignore\n    this.attribBufferDatas.get(attrib).fill(value);\n    this.attribIsModifieds.set(attrib, true);\n  }\n\n  /**\n   * 批量set\n   * @param id\n   * @param attrib\n   * @param value\n   * @param offset\n   */\n  public batchSet(\n    attrib: RenderAttribute,\n    value: Float32Array | Array<number>,\n    offset: number = 0\n  ) {\n    const stride = RenderAttributeStride.get(attrib);\n    // @ts-ignore\n    if (stride <= offset) {\n      return;\n    }\n\n    const buffer = this.attribBufferDatas.get(attrib);\n    const len = this.instanceCount;\n    // @ts-ignore\n    const v = value.slice(0, stride - offset);\n    let o = offset;\n    for (let i = 0; i < len; i++) {\n      // @ts-ignore\n      buffer.set(v, o);\n      // @ts-ignore\n      o += stride;\n    }\n\n    this.attribIsModifieds.set(attrib, true);\n  }\n\n  /**\n   * 批量在原来的值上叠加\n   * @param attrib\n   * @param value\n   * @param offset\n   */\n  public batchAdd(\n    attrib: RenderAttribute,\n    value: Float32Array | Array<number>,\n    offset: number = 0\n  ) {\n    const stride = RenderAttributeStride.get(attrib);\n    // @ts-ignore\n    if (stride <= offset) {\n      return;\n    }\n\n    const buffer = this.attribBufferDatas.get(attrib);\n    const len = this.instanceCount;\n    // @ts-ignore\n    const v = value.slice(0, stride - offset);\n    const vl = v.length;\n    let o = offset;\n\n    for (let i = 0; i < len; i++) {\n      for (let j = 0; j < vl; j++) {\n        // @ts-ignore\n        buffer[o + j] += v[j];\n      }\n      // @ts-ignore\n      o += stride;\n    }\n\n    this.attribIsModifieds.set(attrib, true);\n  }\n\n  public destroy() {\n    this.attribBuffers.clear();\n    this.attribBufferDatas.clear();\n    this.attribIsModifieds.clear();\n    this.idmap.clear();\n    this.idlist = [];\n    this.instanceCount = 0;\n    this.vao = null;\n  }\n\n  public draw() {\n    const gl = this._engine.gl;\n    const oc = this._meshConfig;\n    gl.bindVertexArray(this.vao);\n    gl.drawElementsInstanced(\n      oc.primitiveMode,\n      oc.indeces.length,\n      gl.UNSIGNED_INT,\n      0,\n      this.instanceCount\n    );\n  }\n\n  public set display(n: DisplayStatus) {\n    this._display = n;\n  }\n\n  public get display(): DisplayStatus {\n    return this._display;\n  }\n\n  public set opacity(n: number) {\n    // const o = numberClamp(0, 1, n);\n    const o = Math.max(0, n);\n    const data = this.uniformDatas.get(RenderUniform.OPACITY);\n    // @ts-ignore\n    data.set([o], 0);\n    this.displayIsModified = true;\n  }\n\n  public get opacity(): number {\n    // @ts-ignore\n    return this.uniformDatas.get(RenderUniform.OPACITY)[0];\n  }\n\n  public get rainbow(): Rainbow {\n    return this._engine;\n  }\n\n  /**\n   * 按ID获取实例的膨胀后真实顶点位置\n   * @param id 实例id\n   * @param expand 膨胀\n   */\n  public getVertexesPositionById(id: string, expand: number = 0): number[] {\n    // 顶点\n    let cv = this._meshConfig.currVertexes;\n    // 形变系数\n    const co = this._meshConfig.currOffsetRatios;\n    // 形变值\n    const cov = this.getAttribute(\n      id,\n      RenderAttribute.VERTEX_AND_EDGE_OFFSET_VALUE_AND_NOT_FOLLOW_VIEWPORT,\n      0,\n      2\n    );\n    // 偏移\n    const trans = this.getAttribute(\n      id,\n      RenderAttribute.TRANSLATION_AND_ROTATION,\n      0,\n      2\n    );\n    // 旋转\n    const rot = this.getAttribute(\n      id,\n      RenderAttribute.TRANSLATION_AND_ROTATION,\n      2,\n      1\n    )[0];\n    // 顶点数量\n    const len = cv.length / 2;\n\n    let mat = mat4.create();\n    mat4.fromZRotation(mat, -rot);\n\n    let vertexes = [];\n    for (let i = 0; i < len; i++) {\n      const vs = vec3.fromValues(cv[i * 2], cv[i * 2 + 1], 0);\n      const ratio = vec3.fromValues(co[i * 2], co[i * 2 + 1], 0);\n      // 顶点形变后的坐标\n      let vertex = getVertexPosition(\n        vs,\n        ratio,\n        vec3.fromValues(cov[0], cov[1], 0)\n      );\n      // @ts-ignore\n      vertexes.push(vertex);\n    }\n\n    const result = [];\n\n    for (let j = 0; j < len; j++) {\n      let pidx = j === 0 ? len - 1 : j - 1;\n      let nidx = j === len - 1 ? 0 : j + 1;\n      const pv = vertexes[pidx];\n      const cv = vertexes[j];\n      const nv = vertexes[nidx];\n      // 前后边向量\n      // @ts-ignore\n      const pc = pv.map((v, k) => v - cv[k]);\n      // @ts-ignore\n      const nc = nv.map((v, k) => v - cv[k]);\n      // 膨胀后的坐标\n      let rv = getVertexAfterExpand(pc, nc, cv, expand);\n      // 旋转\n      vec3.transformMat4(rv, rv, mat);\n      // 偏移\n      vec3.add(rv, rv, vec3.fromValues(trans[0], trans[1], 0));\n      // @ts-ignore\n      result.push(rv[0], rv[1]);\n    }\n\n    return result;\n  }\n\n  private createId(): string {\n    return IdCreator.createId();\n  }\n\n  private registAttribute(attrib: VertexAttribute, bufferData: Float32Array) {\n    const gl = this.rainbow.gl;\n    const prg = this.rainbow.prg;\n    const buffer = gl.createBuffer();\n    const stride = VertexAttributeStride.get(attrib);\n    const local = gl.getAttribLocation(prg, attrib);\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, bufferData, gl.STATIC_DRAW);\n    // @ts-ignore\n    gl.vertexAttribPointer(local, stride, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(local);\n  }\n\n  private updateBufferToGL(\n    attrib: RenderAttribute,\n    buffer: WebGLBuffer,\n    bufferData: Float32Array,\n    size: number,\n    offset: number = 0\n  ) {\n    const gl = this._engine.gl;\n    const prg = this._engine.prg;\n    const FSIZE = bufferData.BYTES_PER_ELEMENT;\n    const local = this.attribLocals.get(attrib);\n    const t = this.instanceCount;\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, bufferData, gl.DYNAMIC_DRAW, 0, t * size);\n\n    gl.enableVertexAttribArray(local);\n    gl.vertexAttribPointer(\n      local,\n      size,\n      gl.FLOAT,\n      false,\n      size * FSIZE,\n      offset * FSIZE\n    );\n    gl.vertexAttribDivisor(local, 1);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n\n  private removeAttributeBufferData(id: string, attrib: RenderAttribute) {\n    const idx = this.idmap.get(id);\n    // @ts-ignore\n    const bufferData: Float32Array = this.attribBufferDatas.get(attrib);\n    // @ts-ignore\n    const stride: number = RenderAttributeStride.get(attrib);\n    const n: number = Math.max(1, this.instanceCount - 1);\n    const arr = new Array<number>(stride);\n    arr.fill(0);\n    bufferData.set(\n      bufferData.slice(n * stride, (n + 1) * stride),\n      // @ts-ignore\n      idx * stride\n    );\n    bufferData.set(arr, n * stride);\n  }\n\n  private grow() {\n    RenderAttributeList.forEach(attrib => {\n      let buffer = this.attribBufferDatas.get(attrib);\n      // @ts-ignore\n      let newBuffer = new Float32Array(buffer.length * 2);\n      // @ts-ignore\n      newBuffer.set(buffer);\n      this.attribBufferDatas.set(attrib, newBuffer);\n      // @ts-ignore\n      buffer = null;\n    });\n    this.instanceCountMax *= 2;\n  }\n}\n","import * as TinySDF from 'tiny-sdf';\nimport {GrowingPacker, PNode} from './packer';\nimport {EventDispatcher} from '../events';\n\nconst TextureConfig = {\n  MAX_WIDTH: Math.pow(2, 11),\n  MAX_HEIGHT: Math.pow(2, 11)\n};\n\nconst FontConfig = {\n  fontSize: Math.pow(2, 7), // 生成文字材质尺寸，2的幂，越大质量越好\n  fontFamily: 'Sans-serif',\n  fontWeight: 'normal'\n};\n\n// 生成的材质雪碧图 材质间的gap 防止材质采样错误\nconst TextureGap = Math.pow(2, 1);\n\nexport class TextureFactroy {\n  private gl;\n  private packer: GrowingPacker;\n  private blocks: PNode[] = [];\n  private fontMaps: Map<string, ImageTexture> = new Map();\n  private texture: WebGLTexture;\n  // 初始化材质\n  constructor(glContext) {\n    this.gl = glContext;\n    const gl = glContext;\n    const mw = TextureConfig.MAX_WIDTH;\n    const mh = TextureConfig.MAX_HEIGHT;\n    this.packer = new GrowingPacker(mw, mh);\n    this.texture = gl.createTexture();\n    // 创建不可变材质空间\n    gl.bindTexture(gl.TEXTURE_2D, this.texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1); // y轴反转\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(\n      gl.TEXTURE_2D,\n      gl.TEXTURE_MIN_FILTER,\n      gl.LINEAR_MIPMAP_LINEAR\n    );\n    gl.texStorage2D(gl.TEXTURE_2D, 1, gl.RGBA8, mw, mh);\n  }\n\n  public getOriginTexture(): WebGLTexture {\n    return this.texture;\n  }\n\n  public createTexture(\n    source: any,\n    width: number,\n    height: number\n  ): ImageTexture {\n    if (!source) {\n      source = new Uint8Array(width * height * 4);\n      source.fill(0);\n    }\n    const t = new ImageTexture();\n    t.index = this.blocks.length;\n    // width + 2 和 height + 2 是为了解决材质距离太近被错误采样问题\n    this.blocks.push({\n      w: width + TextureGap,\n      h: height + TextureGap,\n      data: {\n        source: source,\n        texture: t\n      }\n    });\n\n    this.updateToGL();\n\n    return t;\n  }\n\n  public getFontTexture(str: string): ImageTexture {\n    const t = str.substr(0, 1);\n    // @ts-ignore\n    if (t === '') return null;\n    if (!this.fontMaps.has(t)) {\n      this.embedFont(t);\n      this.updateToGL();\n    }\n    // @ts-ignore\n    return this.fontMaps.get(str);\n  }\n\n  public getFontTextures(): Map<string, ImageTexture> {\n    return this.fontMaps;\n  }\n\n  public embedFont(chars: string) {\n    const sdf = new TinySDF(\n      FontConfig.fontSize,\n      FontConfig.fontSize / 8,\n      FontConfig.fontSize / 3,\n      null,\n      FontConfig.fontFamily,\n      FontConfig.fontWeight\n    );\n    const size = sdf.size;\n    for (let i = 0; i < chars.length; i++) {\n      let char = chars[i];\n      const txt = this.fontMaps.get(char);\n      // 不允许重复导入\n      if (txt && txt instanceof ImageTexture) {\n        continue;\n      }\n      const s = sdf.draw(char, size);\n      let t = new ImageTexture();\n      t.index = this.blocks.length;\n      // width + 2 和 height + 2 是为了解决材质距离太近被错误采样问题\n      this.blocks.push({\n        w: size + TextureGap,\n        h: size + TextureGap,\n        data: {\n          source: s,\n          texture: t\n        }\n      });\n      this.fontMaps.set(char, t);\n    }\n  }\n\n  public updateToGL() {\n    const gl = this.gl;\n    const bs = this.blocks;\n    // 排序能得到最优解，但是却失去了静态区域\n    // this.blocks = bs.sort((a, b) => {\n    // \tif (a.w + a.h > b.w + b.h) return -1;\n    // \treturn 1;\n    // });\n    // this.blocks.forEach((b, k) => {\n    // \tb.data.texture.index = k;\n    // });\n\n    this.packer.fit(this.blocks);\n\n    const textures: ImageTexture[] = this.blocks\n      .map((b, k) => b.data.texture)\n      .filter(t => t.isReady === false);\n\n    textures.forEach(t => this.updateTextureToGL(t));\n  }\n\n  public updateTextureToGL(texture: ImageTexture) {\n    const idx = texture.index;\n    const block = this.blocks[idx];\n    const gl = this.gl;\n    const gap = TextureGap;\n    const ind = gap * 0.5;\n    // @ts-ignore\n    const x = block.fit.x + ind;\n    // @ts-ignore\n    const y = block.fit.y + ind;\n    const w = block.w - gap;\n    const h = block.h - gap;\n    texture.update(x, y, w, h);\n    // x+1, y+1, width-2 和 height-2 是为了解决材质距离太近被错误采样问题\n    gl.texSubImage2D(\n      gl.TEXTURE_2D,\n      0,\n      x,\n      y,\n      w,\n      h,\n      gl.RGBA,\n      gl.UNSIGNED_BYTE,\n      block.data.source\n    );\n    texture.isReady = true;\n  }\n\n  /**\n   * 复制屏幕像素到材质\n   * @param texture\n   * @param offsetX\n   * @param offsetY\n   */\n  public copyToTexture(\n    texture: ImageTexture,\n    offsetX: number = 0,\n    offsetY: number = 0\n  ) {\n    const idx = texture.index;\n    const block = this.blocks[idx];\n    const gl = this.gl;\n    const gap = TextureGap;\n    const ind = gap * 0.5;\n\n    // @ts-ignore\n    const x = block.fit.x + ind;\n\n    // @ts-ignore\n    const y = block.fit.y + ind;\n    const w = block.w - gap;\n    const h = block.h - gap;\n    // 写进材质\n    gl.copyTexSubImage2D(gl.TEXTURE_2D, 0, x, y, offsetX, offsetY, w, h);\n  }\n}\n\nexport const enum ImageTextureEvent {\n  UPDATE = 'update'\n}\n\nexport class ImageTexture extends EventDispatcher {\n  u = 0;\n  v = 0;\n  width = 0;\n  height = 0;\n  index = 0;\n  isReady: boolean = false;\n  constructor() {\n    super();\n  }\n  update(\n    u: number,\n    v: number,\n    width: number,\n    height: number,\n    index: number = -1\n  ) {\n    const mw = TextureConfig.MAX_WIDTH;\n    const mh = TextureConfig.MAX_HEIGHT;\n    this.u = u / mw;\n    this.v = v / mh;\n    this.width = width / mw;\n    this.height = height / mh;\n    if (index >= 0) {\n      this.index = index;\n    }\n    this.dispatchEvent(ImageTextureEvent.UPDATE, this);\n  }\n}\n","import {Searcher, SearchObjectInterface} from './searcher';\n\nexport class SearchableObject {\n  private _srh: Searcher;\n  private _sable: boolean = false;\n  private _expandRadius: number = 0;\n  constructor(srh: Searcher) {\n    this._srh = srh;\n  }\n\n  public set searchable(able: boolean) {\n    if (able === this._sable) return;\n    this._sable = able;\n    if (able === true) {\n      this.registToSearcher();\n    } else {\n      this.deregistToSearcher();\n    }\n  }\n\n  public get searchable(): boolean {\n    return this._sable;\n  }\n\n  public set expandRadius(r: number) {\n    if (this._expandRadius === r) return;\n    this._expandRadius = r;\n    // 刷新搜索区域\n    this._sable && this.registToSearcher();\n  }\n\n  public get expandRadius(): number {\n    return this._expandRadius;\n  }\n\n  protected get id(): string {\n    return '';\n  }\n\n  /**\n   * 获取当前的顶点坐标 override\n   */\n  protected getVertexPositions(expand: number = 0): number[] {\n    return [];\n  }\n\n  /**\n   * 注册成可查找\n   */\n  protected registToSearcher() {\n    const vs = this.getVertexPositions(this._expandRadius);\n    const vx = vs.filter((v, k) => k % 2 === 0);\n    const vy = vs.filter((v, k) => k % 2 !== 0);\n    const obj: SearchObjectInterface = {\n      id: this.id,\n      bounds: {\n        minX: Math.min.apply(null, vx),\n        maxX: Math.max.apply(null, vx),\n        minY: Math.min.apply(null, vy),\n        maxY: Math.max.apply(null, vy)\n      },\n      vertexes: vs\n    };\n    this._srh.insert(obj);\n  }\n\n  /**\n   * 解除注册\n   */\n  protected deregistToSearcher() {\n    this._srh.remove(this.id);\n  }\n}\n","import rbush from 'rbush';\n\n/**\n * 判断点是否在多边形内\n * @param p 点坐标\n * @param poly 多边形顶点坐标\n */\nfunction rayCasting(p: number[], poly: number[]): boolean {\n  var px = p[0],\n    py = p[1],\n    flag = false,\n    l = poly.length / 2;\n\n  for (var i = 0, j = l - 1; i < l; j = i, i++) {\n    var sx = poly[i * 2],\n      sy = poly[i * 2 + 1],\n      tx = poly[j * 2],\n      ty = poly[j * 2 + 1];\n\n    // 点与多边形顶点重合\n    if ((sx === px && sy === py) || (tx === px && ty === py)) {\n      flag = true;\n      break;\n    }\n\n    // 判断线段两端点是否在射线两侧\n    if ((sy < py && ty >= py) || (sy >= py && ty < py)) {\n      // 线段上与射线 Y 坐标相同的点的 X 坐标\n      var x = sx + ((py - sy) * (tx - sx)) / (ty - sy);\n\n      // 点在多边形的边上\n      if (x === px) {\n        flag = true;\n        break;\n      }\n\n      // 射线穿过多边形的边界\n      if (x > px) {\n        flag = !flag;\n      }\n    }\n  }\n\n  // 射线穿过多边形边界的次数为奇数时点在多边形内\n  return flag;\n}\n\nexport interface SearchObjectInterface {\n  id: string;\n  bounds: {\n    minX: number;\n    minY: number;\n    maxX: number;\n    maxY: number;\n  };\n  vertexes: number[];\n}\n\nexport class Searcher {\n  private _sobj;\n  private _buffer: Map<string, SearchObjectInterface>;\n  constructor() {\n    this._sobj = new rbush(200);\n    this._buffer = new Map();\n  }\n\n  public insert(obj: SearchObjectInterface) {\n    if (!obj) {\n      console.log('Searcher: ', 'Can not insert.', obj);\n      return;\n    }\n    const bounds = obj.bounds;\n    if (!((bounds.minX - bounds.maxX) * (bounds.minY - bounds.maxY))) {\n      console.log('Searcher: ', 'Can not insert, width or height equals 0.');\n      return;\n    }\n\n    const id = obj.id;\n    const bufferObj = this._buffer.get(id);\n\n    bufferObj && this.remove(id);\n\n    this._sobj.insert(this.objToItem(obj));\n    this._buffer.set(obj.id, obj);\n  }\n\n  public remove(id: string) {\n    let obj = this._buffer.get(id);\n    if (!obj) return;\n    this._sobj.remove(this.objToItem(obj));\n    this._buffer.delete(obj.id);\n  }\n\n  public search(\n    x: number,\n    y: number,\n    width: number = 0,\n    height: number = 0\n  ): SearchObjectInterface[] {\n    let result = this._sobj\n      .search({minX: x, minY: y, maxX: width + x, maxY: height + y})\n      .map(v => this._buffer.get(v.id));\n    if (width == 0 && height == 0) {\n      result = result.filter(v => {\n        return rayCasting([x, y], v.vertexes);\n      });\n    }\n    return result;\n  }\n\n  private objToItem(obj) {\n    const bound = obj.bounds;\n    return Object.assign(obj.bounds, {\n      id: obj.id\n    });\n  }\n}\n","import * as glMatrix from '../../lib/gl-matrix.js';\nconst vec2 = glMatrix.vec2;\nconst vec3 = glMatrix.vec3;\n\nexport class Rectangle {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n  constructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n  setAttrs(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\n    this.x = x;\n    this.y = y;\n    this.w = w;\n    this.h = h;\n  }\n}\n\nexport function getBounds(vertexes: number[]): Rectangle {\n  const vs = vertexes;\n  const vsx = vs.filter((v, k) => k % 2 === 0);\n  const vsy = vs.filter((v, k) => k % 2 !== 0);\n  const minx = Math.min.apply(null, vsx);\n  const maxx = Math.max.apply(null, vsx);\n  const miny = Math.min.apply(null, vsy);\n  const maxy = Math.max.apply(null, vsy);\n  return new Rectangle(minx, miny, maxx - minx, maxy - miny);\n}\n\nexport function loadImage(src: string): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const image = new Image();\n    image.onload = () => resolve(image);\n    image.src = src;\n  });\n}\n\nexport function loadImages(srcs: string[]): Promise<any[]> {\n  return Promise.all(srcs.map(src => loadImage(src)));\n}\n\nexport class IdCreator {\n  private static num: number = 0;\n  public static createId(): string {\n    this.num++;\n    return this.num.toString();\n  }\n}\n\n/**\n * 获取膨胀后的顶点坐标\n * @param pcv 前边\n * @param ncv 后边\n * @param cv 当前顶点\n * @param expand 膨胀系数\n */\nexport function getVertexAfterExpand(\n  pcv: Float32Array,\n  ncv: Float32Array,\n  cv: Float32Array,\n  expand: number\n): Float32Array {\n  const mpc = vec3.normalize(vec3.create(), pcv);\n  const mnc = vec3.normalize(vec3.create(), ncv);\n  let mid = vec3.add(vec3.create(), mpc, mnc);\n  // 中线单位向量\n  mid = vec3.normalize(mid, mid);\n  // 夹角\n  let theta = Math.acos(\n    vec3.dot(pcv, ncv) / (vec3.length(pcv) * vec3.length(ncv))\n  );\n  // 右手法则判断角度正负\n  let c = vec3.cross(vec3.create(), mpc, mnc);\n  let sign = Math.sign(c[2]);\n  // 求膨胀中线长度\n  let l = expand / Math.sin(theta * 0.5);\n\n  return mid.map((v, k) => v * l * sign + cv[k]);\n}\n\n/**\n * 获取顶点形变后的坐标\n * @param vertex vec3 原顶点坐标\n * @param ratio vec3 顶点形变系数\n * @param offsetValue vec3 形变值\n */\nexport function getVertexPosition(\n  vertex: Float32Array,\n  ratio: Float32Array,\n  offsetValue: Float32Array\n) {\n  return vertex.map((v, k) => v + ratio[k] * offsetValue[k]);\n}\n\nexport function arrayEqual(arr1, arr2): boolean {\n  let result = true;\n  if (\n    !(arr1 instanceof Array) ||\n    !(arr2 instanceof Array) ||\n    arr1.length !== arr2.length\n  ) {\n    return false;\n  }\n\n  arr1.forEach((v, k) => {\n    if (v !== arr2[k]) {\n      result = false;\n      return;\n    }\n  });\n  return result;\n}\n\n/*16进制颜色转为RGB格式*/\nexport function hexToRgb(str: string) {\n  let reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;\n  let sColor = str.toLowerCase();\n  if (sColor && reg.test(sColor)) {\n    if (sColor.length === 4) {\n      let sColorNew = '#';\n      for (let i = 1; i < 4; i += 1) {\n        sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1));\n      }\n      sColor = sColorNew;\n    }\n    // 处理六位的颜色值\n    let sColorChange = [];\n    for (let i = 1; i < 7; i += 2) {\n      // @ts-ignore\n      // tslint:disable-next-line:radix\n      sColorChange.push(parseInt('0x' + sColor.slice(i, i + 2)));\n    }\n    return sColorChange;\n  } else {\n    return sColor;\n  }\n}\n\n// 判断字符串是否是数字\nexport function isInteger(str: string) {\n  let reg = new RegExp('^[-\\\\+]?[\\\\d]*$');\n  return reg.test(str);\n}\n\nexport function isChinese(str: string) {\n  // 通过字节码进行判断\n  const code = str.charCodeAt(0);\n  return code >= 0x4e00 && code <= 0x29fa5;\n}\n\nexport function numberClamp(min: number, max: number, x: number) {\n  return Math.min(max, Math.max(min, x));\n}\n\nexport function rectangleIntersection(\n  out: Rectangle,\n  rect1: Rectangle,\n  rect2: Rectangle\n): Rectangle {\n  const x1 = Math.max(rect1.x, rect2.x);\n  const y1 = Math.max(rect1.y, rect2.y);\n  const x2 = Math.min(rect1.x + rect1.w, rect2.x + rect2.w);\n  const y2 = Math.min(rect1.y + rect1.h, rect2.y + rect2.h);\n\n  if (x2 <= x1 || y2 <= y1) {\n    out.x = out.y = out.w = out.h = 0;\n    return out;\n  } else {\n    out.x = x1;\n    out.y = y1;\n    out.w = x2 - x1;\n    out.h = y2 - y1;\n    return out;\n  }\n}\n","import {Rainbow} from '../rainbow';\nimport {EventDispatcher} from '../events';\nimport * as glMatrix from '../../lib/gl-matrix.js';\nimport {numberClamp} from '../utils';\n\nconst mat4 = glMatrix.mat4;\nconst vec2 = glMatrix.vec2;\nconst vec3 = glMatrix.vec3;\nconst RATIO = window.devicePixelRatio;\n\nexport enum ViewportEvent {\n  TRANSLATION_CHANGE = 'translationChange',\n  SCALE_CHANGE = 'scaleChange',\n  SIZE_CHANGE = 'sizeChange',\n  ROTATION_CHANGE = 'rotationChange'\n}\n\nexport class Viewport extends EventDispatcher {\n  private _engine: Rainbow;\n  private _gl;\n  private _cvec2: Float32Array = new Float32Array(2);\n  private _vpScaleVec2: Float32Array = new Float32Array(2);\n  private _vpTranslationVec2: Float32Array = new Float32Array(2);\n  private _vpRotation: number = 0;\n  private _bgColor: number[] = [0, 0, 0, 1];\n  private _vpWidth!: number;\n  private _vpHeight!: number;\n  private tempMat4: Float32Array = mat4.create();\n  private tempVec3: Float32Array = vec3.create();\n  private scaleMin: number = 0.05;\n  private scaleMax: number = 2;\n  public cvMatIsModified: boolean = true;\n  public vpScaleIsModified: boolean = true;\n  public vpTranslationIsModified: boolean = true;\n  public vpRotationIsModified: boolean = true;\n  constructor(rainbow: Rainbow) {\n    super();\n    this._gl = rainbow.gl;\n    this._engine = rainbow;\n    const canvas = this._gl.canvas;\n    this.setViewportSize(canvas.width, canvas.height);\n    this.reset();\n  }\n\n  /**\n   * 设置背景色\n   * @param color 颜色\n   */\n  setBackgroundColor(color: number[]) {\n    this._bgColor = color;\n    this._gl.clearColor.apply(\n      this._gl,\n      color.map(c => c / 255)\n    );\n  }\n\n  getBackgroundColor(): number[] {\n    return this._bgColor;\n  }\n\n  /**\n   * 设置视口尺寸\n   * @param width 宽度\n   * @param height 高度\n   */\n  setViewportSize(width: number, height: number, setCanvas: boolean = true) {\n    this._vpWidth = width;\n    this._vpHeight = height;\n\n    const gl = this._gl;\n    const w = width * RATIO;\n    const h = height * RATIO;\n\n    gl.viewport(0, 0, w, h);\n\n    this._cvec2.set([(1 / width) * 2, (1 / height) * 2]);\n\n    this.cvMatIsModified = true;\n\n    if (setCanvas) {\n      const canvas = gl.canvas;\n      canvas.width = w;\n      canvas.height = h;\n      canvas.style.width = width + 'px';\n      canvas.style.height = height + 'px';\n    }\n\n    this.dispatchEvent(ViewportEvent.SIZE_CHANGE);\n  }\n\n  getViewportSize(): number[] {\n    return [this._vpWidth, this._vpHeight];\n  }\n\n  /**\n   * 按照中心点缩放\n   * @param scale 缩放比例\n   * @param px 缩放中心x\n   * @param py 缩放中心y\n   */\n  scaleOrigin(scale: number, px: number, py: number, dispatch: boolean = true) {\n    scale = numberClamp(this.scaleMin, this.scaleMax, scale);\n    const vpScale = this._vpScaleVec2;\n    const sizeRatio = this._engine.sizeRatio;\n    const s = (this.scale - scale) * sizeRatio;\n    const ms = scale / this.scale;\n    vpScale[0] *= ms;\n    vpScale[1] *= ms;\n\n    const cos = Math.cos(this._vpRotation);\n    const sin = Math.sin(this._vpRotation);\n\n    let dx = px * cos + py * sin;\n    let dy = py * cos - px * sin;\n\n    this.translate(dx * s, dy * s, dispatch);\n    this.vpScaleIsModified = true;\n    dispatch && this.dispatchEvent(ViewportEvent.SCALE_CHANGE);\n  }\n\n  /**\n   * 设置视口平移\n   * @param dx 增量\n   * @param dy 增量\n   */\n  translate(dx: number, dy: number, dispatch: boolean = true) {\n    const width = this._vpWidth;\n    const height = this._vpHeight;\n    this._vpTranslationVec2[0] += (dx / width) * 2;\n    this._vpTranslationVec2[1] += (dy / height) * 2;\n    this.vpTranslationIsModified = true;\n    dispatch && this.dispatchEvent(ViewportEvent.TRANSLATION_CHANGE);\n  }\n\n  rotate(radian: number, dispatch: boolean = true) {\n    const width = this._vpWidth;\n    const height = this._vpHeight;\n\n    this._vpRotation += radian;\n    this.vpRotationIsModified = true;\n    dispatch && this.dispatchEvent(ViewportEvent.ROTATION_CHANGE);\n  }\n\n  reset(dispatch: boolean = true) {\n    const gl = this._gl;\n    const width = this._vpWidth;\n    const height = this._vpHeight;\n    this._vpTranslationVec2.set([-1, -1]);\n    this._vpScaleVec2.set([1, 1]);\n    this._vpRotation = 0;\n    this.vpTranslationIsModified = true;\n    this.vpScaleIsModified = true;\n    this.vpRotationIsModified = true;\n    if (dispatch) {\n      this.dispatchEvent(ViewportEvent.SCALE_CHANGE);\n      this.dispatchEvent(ViewportEvent.TRANSLATION_CHANGE);\n      this.dispatchEvent(ViewportEvent.ROTATION_CHANGE);\n    }\n  }\n\n  resetTranslationAndScale(\n    offsetX: number,\n    offsetY: number,\n    scale: number = 1,\n    originX: number = 0,\n    originY: number = 0,\n    dispatch: boolean = true\n  ) {\n    const sizeRatio = this._engine.sizeRatio;\n    this.reset(false);\n    this.translate(offsetX * sizeRatio, offsetY * sizeRatio, false);\n    this.scaleOrigin(scale, originX, originY, false);\n    if (dispatch) {\n      this.dispatchEvent(ViewportEvent.SCALE_CHANGE);\n      this.dispatchEvent(ViewportEvent.TRANSLATION_CHANGE);\n      this.dispatchEvent(ViewportEvent.ROTATION_CHANGE);\n    }\n  }\n\n  /**\n   * 获取缩放比例\n   */\n  get scale(): number {\n    return this._vpScaleVec2[0];\n  }\n\n  get translation(): number[] {\n    const vec2 = this._vpTranslationVec2;\n    const sizeRatio = this._engine.sizeRatio;\n    const scale = this.scale * sizeRatio;\n    return [\n      ((vec2[0] + 1) * this._vpWidth * 0.5) / scale,\n      ((vec2[1] + 1) * this._vpHeight * 0.5) / scale\n    ];\n  }\n\n  set scaleRange(range: number[]) {\n    this.scaleMin = range[0];\n    this.scaleMax = range[1];\n  }\n\n  get scaleRange(): number[] {\n    return [this.scaleMin, this.scaleMax];\n  }\n\n  /**\n   * 从屏幕坐标转换程世界坐标\n   * @param x\n   * @param y\n   * @param z\n   */\n  changeCoordinateFromScreen(x: number, y: number): Float32Array {\n    const tvec = this.tempVec3;\n    const tmat = this.tempMat4;\n    const e = this._engine;\n\n    mat4.identity(tmat);\n\n    tvec.set([this._vpTranslationVec2[0], this._vpTranslationVec2[1], 0]);\n    mat4.translate(tmat, tmat, tvec);\n\n    tvec.set([\n      this._vpScaleVec2[0] * e.sizeRatio,\n      this._vpScaleVec2[1] * e.sizeRatio,\n      1\n    ]);\n    mat4.scale(tmat, tmat, tvec);\n\n    tvec.set([this._cvec2[0], this._cvec2[1], 1]);\n    mat4.scale(tmat, tmat, tvec);\n\n    mat4.rotateZ(tmat, tmat, -this._vpRotation);\n\n    mat4.invert(tmat, tmat);\n\n    const w = this._vpWidth / 2;\n    const h = this._vpHeight / 2;\n\n    tvec.set([x / w - 1, -y / h + 1, 0]);\n    vec3.transformMat4(tvec, tvec, tmat);\n    return tvec.subarray(0, 2);\n  }\n\n  get cvec2(): Float32Array {\n    return this._cvec2;\n  }\n\n  get vpScaleVec2(): Float32Array {\n    return this._vpScaleVec2;\n  }\n\n  get vpTranslationVec2(): Float32Array {\n    return this._vpTranslationVec2;\n  }\n\n  get vpRotation(): number {\n    return this._vpRotation;\n  }\n}\n"],"sourceRoot":""}