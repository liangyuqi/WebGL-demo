{
  "compilerOptions": {
    /* ts-node只支持commonjs规范 */
    // 指定模块代码生成:“none”、“commonjs”、“amd”、“system”、“umd”、“es2015”或“ESNext”
    "module": "es2015",
    // 指定ECMAScript目标版本:“ES3”(默认)、“es5”、“ES2015”、“ES2016”、“ES2017”、“ES2018”或“ESNEXT”。
    "target": "es5",
    // 通过为所有导入创建名称空间对象，支持CommonJS和ES模块之间的互操作性。意味着“allowSyntheticDefaultImports”
    "esModuleInterop": true,
    // 当目标为“ES5”或“ES3”时，为“for-of”、“spread”和“destructuring”中的迭代提供完全支持。
    "downlevelIteration": true,
    // 基本目录来解析非绝对模块名
    "baseUrl": "./",
    // 指定特殊模块的路径
    "paths": {
      "@/*": ["examples-webgl/*"],
      "src/*": ["src/*"],
      "~/*": ["/*"]
    },
    "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入
    "experimentalDecorators": true, //  启用装饰器
    // 如何处理模块
    "moduleResolution": "node",
    // 编译过程中需要引入的库文件的列表
    "lib": ["dom", "es5", "es6", "es7", "es2015.promise"],
    // 输出目录
    "outDir": "dist/lib",
    // 是否包含可以用于 debug 的 sourceMap
    "sourceMap": true,
    // 以严格模式解析
    "strict": true,
    // 启用设计类型元数据（用于反射）
    "emitDecoratorMetadata": true,
    // 在表达式和声明上有隐含的any类型时报错
    "noImplicitAny": false,

    "declaration": true,

    "declarationDir": "./types",
    "typeRoots": ["node_modules/@types"]
  },
  // "exclude": ["example/*", "examples-webgl/**/*"],
  // "include": ["src/**/*.ts"],
  "exclude": ["example/*"],
  "include": ["src/**/*.ts", "examples-webgl/**/*"]
}
