export declare const vsSource = "#version 300 es\n\tlayout(location=1) in vec4 currVertexAndRatio;\t\t\t//\u9876\u70B9\u5750\u6807\u548C\u53D8\u5F62\u7CFB\u6570\n\tlayout(location=2) in vec4 prevVertexAndRatio;\n\tlayout(location=3) in vec4 nextVertexAndRatio;\n\tlayout(location=4) in vec4 uvAndEdgeOffsetRatio;\t\t//UV\n\n\tlayout(location=5) in vec4 vertexAndEdgeOffsetValueAndNotFollowViewport;\t// \u9876\u70B9\u5F62\u53D8  \u8FB9\u5F62\u53D8\u503C  \u662F\u5426\u4E0D\u8DDF\u968F\u89C6\u53E3\n\tlayout(location=6) in vec4 UVRect;\t\t\t\t\t\t//UVRect\n\tlayout(location=7) in vec4 backgroundColor;\t\t\t\t//\u80CC\u666F\u8272\n\tlayout(location=8) in vec4 translationAndRotation;\t\t//\u5F62\u53D8\n\tlayout(location=9) in vec4 isTextAndBorderWidthAndDashedAndScale;\t\t//\u662F\u5426\u6E32\u67D3\u6587\u5B57 \u4EE5\u53CA \u6587\u5B57\u8FB9\u6846\u7C97\u7EC6 \u4EE5\u53CA\u7269\u4F53\u8FB9\u6846\u865A\u7EBF \u7F29\u653E\n\tlayout(location=10) in vec4 textBorderColor;\t\t\t//\u6587\u5B57\u8FB9\u6846\u989C\u8272\n\tlayout(location=11) in vec4 opacityAndDisplayAndVpScaleAndVpTrans;\t\t\t//\u900F\u660E\u5EA6 \u662F\u5426\u663E\u793A \u662F\u5426\u8DDF\u968F\u89C6\u53E3\u7F29\u653E \u662F\u5426\u8DDF\u968F\u89C6\u53E3\u5E73\u79FB\n\n\tout vec2 vTexCoord;\t\t\t\t//UV\n\tout vec4 vBgColor;\n\tout float vIsText;\n\tout float vTextBorderWidth;\n\tout vec4 vTextBorderColor;\n\tout float vHasTexture;\n\tout vec4 vPos;\n\tout float vNotBorder;\n\tout float vBorderDashed;\n\tout float vOpacity;\n\tout float vDisplay;\n\n\tuniform vec2 uConversionVec2;\t//\u5750\u6807\u8F6C\u6362\n\tuniform vec2 uViewportTranslation;\t//\u89C6\u53E3\u5E73\u79FB\n\tuniform vec2 uViewportScale;\t\t//\u89C6\u53E3\u7F29\u653E\n\tuniform float uViewportRotation;\t//\u89C6\u53E3\u65CB\u8F6C\n\tuniform vec4 uOpacity;\t\t\t\t//\u5168\u5C40\u900F\u660E\u5EA6\n\n\tmat4 getScaleMatrix(vec2 scale) {\n\t\treturn mat4(\n\t\t\tscale.x, 0.0, 0.0, 0.0,\n\t\t\t0.0, scale.y, 0.0, 0.0,\n\t\t\t0.0, 0.0, 1.0, 0.0,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\t}\n\n\tmat4 getRotationMatrix(float radian) {\n\t\tfloat cost = cos(radian);\n\t\tfloat sint = sin(radian);\n\t\treturn mat4(\n\t\t\tcost, -sint, 0.0, 0.0,\n\t\t\tsint, cost, 0.0, 0.0,\n\t\t\t0.0, 0.0, 1.0, 0.0,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\t}\n\n\tmat4 getTranslationMatrix(vec2 translation) {\n\t\treturn mat4(\n\t\t\t1.0, 0.0, 0.0, 0.0,\n\t\t\t0.0, 1.0, 0.0, 0.0,\n\t\t\t0.0, 0.0, 1.0, 0.0,\n\t\t\ttranslation.x, translation.y, 0.0, 1.0\n\t\t);\n\t}\n\n\tvec2 getIntersectionVertex(\n\t\tin vec2 v1,\n\t\tin vec2 v2,\n\t\tin float offset\n\t) {\n\t\tvec4 vv1 = vec4(v1, 0.0, 1.0);\n\t\tvec4 vv2 = vec4(v2, 0.0, 1.0);\n\t\t// \u5411\u91CF\u5939\u89D2\n\t\tvec2 mid = normalize(normalize(v1) + normalize(v2));\n\t\tfloat theta = acos(dot(v1, v2) / (length(v1) * length(v2)));\n\t\t// \u53F3\u624B\u6CD5\u5219\uFF0C\u5224\u65AD\u5939\u89D2\u6B63\u8D1F\n\t\tvec3 c = cross(vv1.xyz, vv2.xyz);\n\t\tfloat l = offset / sin(theta * 0.5);\n\t\treturn mid * l * (- sign(c.z));\n\t}\n\n\tvec2 getVertex(\n\t\tin vec2 origin,\n\t\tin vec2 offsetRatio,\n\t\tin vec2 offsetValue\n\t) {\n\t\tvec2 offset = offsetRatio * offsetValue;\n\t\treturn origin + offset;\n\t}\n\n\tvec2 getFollowViewport() {\n\t\tfloat outViewportStatus = vertexAndEdgeOffsetValueAndNotFollowViewport.w;\t//\u8DDF\u968F\u89C6\u53E3\u72B6\u6001\n\t\tvec3 f = vec3(outViewportStatus - 1.0, outViewportStatus - 2.0, outViewportStatus - 3.0);\n\t\tf = step(vec3(0.5, 0.5, 0.5), abs(f));\n\t\treturn vec2(f.x * f.z, f.y * f.z);\n\t}\n\n\t// \u83B7\u53D6\u7F29\u653E\u77E2\u91CF\n\tvec2 getScaleVec(float scale, vec2 followViewport, vec2 notFollowViewport) {\n\t\tvec2 scaleVec = vec2(scale, scale);\n\t\tvec2 isVpScale = vec2(1.0, 1.0) - opacityAndDisplayAndVpScaleAndVpTrans.zz;\n\t\tvec2 dscaleVec = vec2(1.0, 1.0) / uViewportScale * scaleVec * isVpScale + scaleVec * (1.0-isVpScale);\n\t\treturn dscaleVec * followViewport + scaleVec * notFollowViewport;\n\t}\n\n\tvoid main(void) {\n\n\t\tvec2 pv = getVertex(prevVertexAndRatio.xy, prevVertexAndRatio.zw, vertexAndEdgeOffsetValueAndNotFollowViewport.xy);\n\t\tvec2 cv = getVertex(currVertexAndRatio.xy, currVertexAndRatio.zw, vertexAndEdgeOffsetValueAndNotFollowViewport.xy);\n\t\tvec2 nv = getVertex(nextVertexAndRatio.xy, nextVertexAndRatio.zw, vertexAndEdgeOffsetValueAndNotFollowViewport.xy);\n\t\tvec2 pe = pv - cv;\n\t\tvec2 ne = nv - cv;\n\n\t\t// \u5224\u65AD\u662F\u5426\u9700\u8981\u4E58\u89C6\u53E3\u77E9\u9635\n\t\tvec2 followViewport = getFollowViewport();\n\t\tvec2 notFollowViewport = vec2(1.0, 1.0) - followViewport;\n\n\t\t// \u5404\u79CD\u77E9\u9635\n\t\tmat4 rotationMatrix = getRotationMatrix(translationAndRotation.z);\n\t\t// \u7F29\u653E\u77E9\u9635\uFF0C\u5982\u679C\u8BBE\u7F6E\u4E86\u8131\u79BB\u89C6\u53E3\uFF0C\u5219\u9700\u8981\u8BA1\u7B97\u4E00\u4E2A\u53CD\u5411\u7F29\u653E\u77E9\u9635\n\t\tmat4 scaleMatrix = getScaleMatrix(getScaleVec(isTextAndBorderWidthAndDashedAndScale.w, followViewport, notFollowViewport));\n\t\tmat4 transMat = getTranslationMatrix(translationAndRotation.xy);\n\t\tmat4 converMat = getScaleMatrix(uConversionVec2.xy);\n\t\t// \u89C6\u53E3\u77E9\u9635\n\t\tmat4 vpScaleMatrix = getScaleMatrix(uViewportScale);\n\t\tmat4 vpTranslationMatrix = getTranslationMatrix(uViewportTranslation);\n\t\tmat4 vpRotationMatrix = getRotationMatrix(uViewportRotation);\n\t\tmat4 vpMat = vpTranslationMatrix * vpScaleMatrix * converMat * vpRotationMatrix;\n\n\t\t// \u6C42\u76F8\u90BB\u4E24\u8FB9\u4EA4\u70B9\u5411\u91CF\n\t\tvec2 intersection = getIntersectionVertex(pe, ne, vertexAndEdgeOffsetValueAndNotFollowViewport.z * uvAndEdgeOffsetRatio.z);\n\n\t\tvec4 posOrigin = transMat * scaleMatrix * rotationMatrix * vec4(cv, 0.0, 1.0);\n\t\tvec4 posBorder = rotationMatrix * vec4(intersection, 0.0, 0.0);\n\t\tposBorder = converMat * vec4(vec2(vpRotationMatrix * posBorder) * followViewport + posBorder.xy * notFollowViewport, 0, 0);\n\t\tposOrigin = vec4(vec2(vpMat * posOrigin) * followViewport + vec2(converMat * posOrigin) * notFollowViewport, 0.0, 1.0);\n\n\t\tgl_Position = posOrigin + posBorder;\n\n\t\t// out\n\t\t// \u5982\u679C\u6750\u8D28\u5BBD\u5EA6\u4E3A0 \u5219\u6807\u5FD7\u4E3A\u65E0\u6750\u8D28\n\t\tvHasTexture = step(0.0, UVRect.z);\n\t\tvTexCoord = uvAndEdgeOffsetRatio.xy * UVRect.zw + UVRect.xy;\n\t\tvBgColor = backgroundColor;\n\t\tvIsText = isTextAndBorderWidthAndDashedAndScale.x;\n\t\tvTextBorderWidth = isTextAndBorderWidthAndDashedAndScale.y;\n\t\tvTextBorderColor = textBorderColor;\n\t\tvNotBorder = step(vertexAndEdgeOffsetValueAndNotFollowViewport.z, 0.0);\n\n\t\tvPos = rotationMatrix * vec4(cv, 0.0, 1.0); // \u7528\u4E8E\u8FB9\u6846\u6E32\u67D3\u8BA1\u7B97\n\t\tvPos = vec4(vec2(vpRotationMatrix * vPos) * followViewport + vPos.xy * notFollowViewport, 0.0, 1.0);\n\n\t\tvBorderDashed = isTextAndBorderWidthAndDashedAndScale.z;\n\t\tvOpacity = opacityAndDisplayAndVpScaleAndVpTrans.x * uOpacity.x;\n\t\tvDisplay = opacityAndDisplayAndVpScaleAndVpTrans.y;\n\t}\n";
